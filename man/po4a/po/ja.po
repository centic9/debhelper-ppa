# Copyright (C) 2013-2014 Debian JP Project <debian-doc@debian.or.jp>
# This file is distributed under the same license as the debhelper package.
# Takahide Nojima <nozzy123nozzy@gmail.com>, 2012.
# Hideki Yamane <henrich@debian.or.jp>, 2012-2014, 2016
#
msgid ""
msgstr ""
"Project-Id-Version: debhelper 9.20141107\n"
"POT-Creation-Date: 2016-12-31 21:29+0000\n"
"PO-Revision-Date: 2016-09-17 20:45+0900\n"
"Last-Translator: Hideki Yamane <henrich@debian.org>\n"
"Language-Team: Debian JP Project <debian-doc@debian.or.jp>\n"
"Language: Japanease\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Last-Reviewer: Hideki Yamane <henrich@debian.org>\n"

#. type: =head1
#: debhelper.pod:1 debhelper-obsolete-compat.pod:1 dh:3 dh_auto_build:3
#: dh_auto_clean:3 dh_auto_configure:3 dh_auto_install:3 dh_auto_test:3
#: dh_bugfiles:3 dh_builddeb:3 dh_clean:3 dh_compress:3 dh_fixperms:3
#: dh_gconf:3 dh_gencontrol:3 dh_icons:3 dh_install:3 dh_installcatalogs:3
#: dh_installchangelogs:3 dh_installcron:3 dh_installdeb:3 dh_installdebconf:3
#: dh_installdirs:3 dh_installdocs:3 dh_installemacsen:3 dh_installexamples:3
#: dh_installifupdown:3 dh_installinfo:3 dh_installinit:3 dh_installlogcheck:3
#: dh_installlogrotate:3 dh_installman:3 dh_installmanpages:3 dh_installmenu:3
#: dh_installmime:3 dh_installmodules:3 dh_installpam:3 dh_installppp:3
#: dh_installudev:3 dh_installwm:3 dh_installxfonts:3 dh_link:3 dh_lintian:3
#: dh_listpackages:3 dh_makeshlibs:3 dh_md5sums:3 dh_movefiles:3 dh_perl:3
#: dh_prep:3 dh_shlibdeps:3 dh_strip:3 dh_testdir:3 dh_testroot:3 dh_usrlocal:3
#: dh_systemd_enable:3 dh_systemd_start:3
msgid "NAME"
msgstr "名前"

#. type: textblock
#: debhelper.pod:3
msgid "debhelper - the debhelper tool suite"
msgstr "debhelper - debhelper 関連ツール群"

#. type: =head1
#: debhelper.pod:5 debhelper-obsolete-compat.pod:5 dh:13 dh_auto_build:13
#: dh_auto_clean:14 dh_auto_configure:13 dh_auto_install:16 dh_auto_test:14
#: dh_bugfiles:13 dh_builddeb:13 dh_clean:13 dh_compress:15 dh_fixperms:14
#: dh_gconf:13 dh_gencontrol:13 dh_icons:14 dh_install:14 dh_installcatalogs:15
#: dh_installchangelogs:13 dh_installcron:13 dh_installdeb:13
#: dh_installdebconf:13 dh_installdirs:13 dh_installdocs:13
#: dh_installemacsen:13 dh_installexamples:13 dh_installifupdown:13
#: dh_installinfo:13 dh_installinit:14 dh_installlogcheck:13
#: dh_installlogrotate:13 dh_installman:14 dh_installmanpages:14
#: dh_installmenu:13 dh_installmime:13 dh_installmodules:14 dh_installpam:13
#: dh_installppp:13 dh_installudev:14 dh_installwm:13 dh_installxfonts:13
#: dh_link:14 dh_lintian:13 dh_listpackages:13 dh_makeshlibs:13 dh_md5sums:14
#: dh_movefiles:13 dh_perl:15 dh_prep:13 dh_shlibdeps:14 dh_strip:14
#: dh_testdir:13 dh_testroot:7 dh_usrlocal:15 dh_systemd_enable:14
#: dh_systemd_start:15
msgid "SYNOPSIS"
msgstr "書式"

#. type: textblock
#: debhelper.pod:7
msgid ""
"B<dh_>I<*> [B<-v>] [B<-a>] [B<-i>] [B<--no-act>] [B<-p>I<package>] [B<-"
"N>I<package>] [B<-P>I<tmpdir>]"
msgstr ""
"B<dh_>I<*> [B<-v>] [B<-a>] [B<-i>] [B<--no-act>] [B<-p>I<package>] [B<-"
"N>I<package>] [B<-P>I<tmpdir>]"

#. type: =head1
#: debhelper.pod:9 dh:17 dh_auto_build:17 dh_auto_clean:18 dh_auto_configure:17
#: dh_auto_install:20 dh_auto_test:18 dh_bugfiles:17 dh_builddeb:17 dh_clean:17
#: dh_compress:19 dh_fixperms:18 dh_gconf:17 dh_gencontrol:17 dh_icons:18
#: dh_install:18 dh_installcatalogs:19 dh_installchangelogs:17
#: dh_installcron:17 dh_installdeb:17 dh_installdebconf:17 dh_installdirs:17
#: dh_installdocs:17 dh_installemacsen:17 dh_installexamples:17
#: dh_installifupdown:17 dh_installinfo:17 dh_installinit:18
#: dh_installlogcheck:17 dh_installlogrotate:17 dh_installman:18
#: dh_installmanpages:18 dh_installmenu:17 dh_installmime:17
#: dh_installmodules:18 dh_installpam:17 dh_installppp:17 dh_installudev:18
#: dh_installwm:17 dh_installxfonts:17 dh_link:18 dh_lintian:17
#: dh_listpackages:17 dh_makeshlibs:17 dh_md5sums:18 dh_movefiles:17 dh_perl:19
#: dh_prep:17 dh_shlibdeps:18 dh_strip:18 dh_testdir:17 dh_testroot:11
#: dh_usrlocal:19 dh_systemd_enable:18 dh_systemd_start:19
msgid "DESCRIPTION"
msgstr "説明"

#. type: textblock
#: debhelper.pod:11
msgid ""
"Debhelper is used to help you build a Debian package. The philosophy behind "
"debhelper is to provide a collection of small, simple, and easily understood "
"tools that are used in F<debian/rules> to automate various common aspects of "
"building a package. This means less work for you, the packager.  It also, to "
"some degree means that these tools can be changed if Debian policy changes, "
"and packages that use them will require only a rebuild to comply with the "
"new policy."
msgstr ""
"debhelper は、Debian パッケージのビルドを容易にするために使われます。"
"debhelper の根底にある考えは「パッケージビルド時の各種の共通的な作業を自動化"
"するために F<debian/rules> で用いられている、小さく単純で、容易に理解可能な"
"ツールをまとめて提供すること」です。つまり、あなた＝パッケージを作成する人の"
"負担を減らします。さらに、Debian ポリシーが変わった場合にはこのツール群を多少"
"変更さえすれば、debhelper を使っているパッケージが新しいポリシーに適合するの"
"に必要になるのは、再ビルドだけになります。"

#. type: textblock
#: debhelper.pod:19
msgid ""
"A typical F<debian/rules> file that uses debhelper will call several "
"debhelper commands in sequence, or use L<dh(1)> to automate this process. "
"Examples of rules files that use debhelper are in F</usr/share/doc/debhelper/"
"examples/>"
msgstr ""
"debhelper を利用している典型的な F<debian/rules> ファイルは、複数の "
"debhelper コマンドを順番に呼び出しているか、L<dh(1)> を使って一連の処理を自動"
"化しています。debhelper を使った rules ファイルの例は F</usr/share/doc/"
"debhelper/examples/> にあります。"

# maint-guide -> maint-guide-ja
#. type: textblock
#: debhelper.pod:23
msgid ""
"To create a new Debian package using debhelper, you can just copy one of the "
"sample rules files and edit it by hand. Or you can try the B<dh-make> "
"package, which contains a L<dh_make|dh_make(1)> command that partially "
"automates the process. For a more gentle introduction, the B<maint-guide> "
"Debian package contains a tutorial about making your first package using "
"debhelper."
msgstr ""
"debhelper を使って Debian パッケージを作成するには、サンプルの rules ファイル"
"のどれかをコピーして手で修正するだけです。あるいは B<dh-make> パッケージを利"
"用してみてください。このパッケージには部分的に作業を自動化してくれる "
"L<dh_make|dh_make(1)> コマンドが含まれています。よりやさしい案内については、"
"B<maint-guide-ja> パッケージに debhelper を使って初めてパッケージを作る人向け"
"のチュートリアルが含まれています。"

#. type: =head1
#: debhelper.pod:29
msgid "DEBHELPER COMMANDS"
msgstr "DEBHELPER コマンド"

#. type: textblock
#: debhelper.pod:31
msgid ""
"Here is the list of debhelper commands you can use. See their man pages for "
"additional documentation."
msgstr ""
"以下が利用可能な debhelper コマンドの一覧です。詳細は、各コマンド付属の man "
"ページを参照してください。"

#. type: textblock
#: debhelper.pod:36
msgid "#LIST#"
msgstr "#LIST#"

#. type: =head2
#: debhelper.pod:40
msgid "Deprecated Commands"
msgstr "廃止されたコマンド一覧"

#. type: textblock
#: debhelper.pod:42
msgid "A few debhelper commands are deprecated and should not be used."
msgstr "廃止されており、使うべきでない debhelper コマンド一覧"

#. type: textblock
#: debhelper.pod:46
msgid "#LIST_DEPRECATED#"
msgstr "#LIST_DEPRECATED#"

#. type: =head2
#: debhelper.pod:50
msgid "Other Commands"
msgstr "他のコマンド"

#. type: textblock
#: debhelper.pod:52
msgid ""
"If a program's name starts with B<dh_>, and the program is not on the above "
"lists, then it is not part of the debhelper package, but it should still "
"work like the other programs described on this page."
msgstr ""
"プログラムの名前が B<dh_> で始まり、先のリストにないものは、debhelper パッ"
"ケージ付属のプログラムではありません。しかし、このような名前を持つコマンド"
"は、このページに記述されている他のプログラムのように動作するべきです。"

#. type: =head1
#: debhelper.pod:56
msgid "DEBHELPER CONFIG FILES"
msgstr "DEBHELPER 設定ファイル"

#. type: textblock
#: debhelper.pod:58
msgid ""
"Many debhelper commands make use of files in F<debian/> to control what they "
"do. Besides the common F<debian/changelog> and F<debian/control>, which are "
"in all packages, not just those using debhelper, some additional files can "
"be used to configure the behavior of specific debhelper commands. These "
"files are typically named debian/I<package>.foo (where I<package> of course, "
"is replaced with the package that is being acted on)."
msgstr ""
"debhelper のコマンドの多くは、どのように動作するかについて F<debian/> ディレ"
"クトリ以下にあるファイルを用います。共通の F<debian/changelog> や F<debian/"
"control> はすべてのパッケージに存在していますが、これに加えて特定の "
"debhelper コマンドの動作を制御できる追加ファイルがあります。これらのファイル"
"は、大抵 debian/I<package>.foo というファイル名です (もちろん、I<package> は"
"処理しようとしているパッケージ名に変えてください)。"

#. type: textblock
#: debhelper.pod:65
msgid ""
"For example, B<dh_installdocs> uses files named F<debian/package.docs> to "
"list the documentation files it will install. See the man pages of "
"individual commands for details about the names and formats of the files "
"they use.  Generally, these files will list files to act on, one file per "
"line. Some programs in debhelper use pairs of files and destinations or "
"slightly more complicated formats."
msgstr ""
"例えば、B<dh_installdocs> では、インストールするドキュメントの一覧を得るのに "
"F<debian/package.docs> という名前のファイルを利用します。各コマンドが使うファ"
"イルの名前とフォーマットについては、詳細はコマンドの man ページを参照してくだ"
"さい。大抵、これらのファイルでは１行ごとに処理するファイルを１つずつ列挙しま"
"す。いくつかの debhelper プログラムでは、ファイルと宛先の組み合わせや、もう"
"少々複雑なフォーマットなどを使います。"

#. type: textblock
#: debhelper.pod:72
msgid ""
"Note for the first (or only) binary package listed in F<debian/control>, "
"debhelper will use F<debian/foo> when there's no F<debian/package.foo> file."
msgstr ""
"F<debian/control> に記載されている最初の (あるいは唯一の) バイナリパッケージ"
"は、debhelper は F<debian/package.foo> ファイルが無い場合には F<debian/foo> "
"ファイルを利用します。"

#. type: textblock
#: debhelper.pod:76
msgid ""
"In some rare cases, you may want to have different versions of these files "
"for different architectures or OSes. If files named debian/I<package>.foo."
"I<ARCH> or debian/I<package>.foo.I<OS> exist, where I<ARCH> and I<OS> are "
"the same as the output of \"B<dpkg-architecture -qDEB_HOST_ARCH>\" / "
"\"B<dpkg-architecture -qDEB_HOST_ARCH_OS>\", then they will be used in "
"preference to other, more general files."
msgstr ""
"稀ではありますが、これらのファイルを、異なるアーキテクチャ／異なる OS 用にそ"
"れぞれ用意したい場合があります。ファイル名が debian/I<package>.foo.I<ARCH> "
"や、debian/I<package>.foo.I<OS> のものが存在すると、\"B<dpkg-architecture -"
"qDEB_HOST_ARCH>\" / \"B<dpkg-architecture -qDEB_HOST_ARCH_OS>\" でそれぞれ指"
"定した I<ARCH> と I<OS> を含むものが、通常のファイルよりも優先的に使われま"
"す。"

#. type: textblock
#: debhelper.pod:83
msgid ""
"Mostly, these config files are used to specify lists of various types of "
"files. Documentation or example files to install, files to move, and so on.  "
"When appropriate, in cases like these, you can use standard shell wildcard "
"characters (B<?> and B<*> and B<[>I<..>B<]> character classes) in the "
"files.  You can also put comments in these files; lines beginning with B<#> "
"are ignored."
msgstr ""
"多くの場合、これらの設定ファイルは、いろいろな種類のファイルを列挙して指定す"
"るのに使われます。例えばインストールすべきドキュメントやサンプルファイルで"
"あったり、移動すべきファイルだったり等となります。シェルのワイルドカード文字"
"列 (B<?>, B<*> 及び B<[>I<..>B<]> 文字クラス) をファイルに含める事ができ、状"
"況次第ではこちらが望ましい事もあります。また、行頭がB <#> で始まる行は無視さ"
"れる事を利用して、コメントを記載できます。"

#. type: textblock
#: debhelper.pod:90
msgid ""
"The syntax of these files is intentionally kept very simple to make them "
"easy to read, understand, and modify. If you prefer power and complexity, "
"you can make the file executable, and write a program that outputs whatever "
"content is appropriate for a given situation. When you do so, the output is "
"not further processed to expand wildcards or strip comments."
msgstr ""
"これらファイルの文法は、読解・修正しやすいよう、意図的にシンプルにしてありま"
"す。もし、さらに強力で複雑な事をしたければ、これらのファイルに実行権限を付与"
"し、状況にあった出力をするプログラムを作成してください。ただし、この場合の出"
"力結果では、後の処理でワイルドカードは展開されず、コメントも取り除かれない事"
"に気をつけてください。"

#. type: =head1
#: debhelper.pod:96
msgid "SHARED DEBHELPER OPTIONS"
msgstr "DEBHELPER 間で共有されるオプション"

#. type: textblock
#: debhelper.pod:98
msgid ""
"The following command line options are supported by all debhelper programs."
msgstr ""
"以下のコマンドラインオプションは、全ての debhelper プログラムでサポートされて"
"います。"

#. type: =item
#: debhelper.pod:102
msgid "B<-v>, B<--verbose>"
msgstr "B<-v>, B<--verbose>"

#. type: textblock
#: debhelper.pod:104
msgid ""
"Verbose mode: show all commands that modify the package build directory."
msgstr ""
"冗長出力モード。パッケージビルドディレクトリを変更するようなコマンドを全て表"
"示します。"

#. type: =item
#: debhelper.pod:106 dh:67
msgid "B<--no-act>"
msgstr "B<--no-act>"

#. type: textblock
#: debhelper.pod:108
msgid ""
"Do not really do anything. If used with -v, the result is that the command "
"will output what it would have done."
msgstr ""
"実際の処理を行いません。-v オプションと併用すると、コマンドがどのような処理を"
"行うかが出力されます。"

#. type: =item
#: debhelper.pod:111
msgid "B<-a>, B<--arch>"
msgstr "B<-a>, B<--arch>"

#. type: textblock
#: debhelper.pod:113
msgid ""
"Act on architecture dependent packages that should be built for the "
"B<DEB_HOST_ARCH> architecture."
msgstr ""
"アーキテクチャ依存パッケージを、B<DEB_HOST_ARCH> アーテキクチャ向けにビルドす"
"るように動作します。"

#. type: =item
#: debhelper.pod:116
msgid "B<-i>, B<--indep>"
msgstr "B<-i>, B<--indep>"

#. type: textblock
#: debhelper.pod:118
msgid "Act on all architecture independent packages."
msgstr "全てのアーキテクチャ非依存パッケージに対して処理を行います。"

#. type: =item
#: debhelper.pod:120
msgid "B<-p>I<package>, B<--package=>I<package>"
msgstr "B<-p>I<package>, B<--package=>I<package>"

#. type: textblock
#: debhelper.pod:122
msgid ""
"Act on the package named I<package>. This option may be specified multiple "
"times to make debhelper operate on a given set of packages."
msgstr ""
"I<package> で指定されたパッケージに対して処理を行います。複数のパッケージを "
"debhelper に処理させる際には、繰り返し列挙して指定してください。"

#. type: =item
#: debhelper.pod:125
msgid "B<-s>, B<--same-arch>"
msgstr "B<-s>, B<--same-arch>"

#. type: textblock
#: debhelper.pod:127
msgid "Deprecated alias of B<-a>."
msgstr "廃止された B<-a> のエイリアスです。"

#. type: =item
#: debhelper.pod:129
msgid "B<-N>I<package>, B<--no-package=>I<package>"
msgstr "B<-N>I<package>, B<--no-package=>I<package>"

#. type: textblock
#: debhelper.pod:131
msgid ""
"Do not act on the specified package even if an B<-a>, B<-i>, or B<-p> option "
"lists the package as one that should be acted on."
msgstr ""
"B<-a>, B<-i>, B<-p> オプションで処理すべきパッケージとして対象としていても、"
"指定されているパッケージについては処理を行わないようにします。"

#. type: =item
#: debhelper.pod:134
msgid "B<--remaining-packages>"
msgstr "B<--remaining-packages>"

#. type: textblock
#: debhelper.pod:136
msgid ""
"Do not act on the packages which have already been acted on by this "
"debhelper command earlier (i.e. if the command is present in the package "
"debhelper log).  For example, if you need to call the command with special "
"options only for a couple of binary packages, pass this option to the last "
"call of the command to process the rest of packages with default settings."
msgstr ""
"この debhelper コマンドにより、すでに処理済のパッケージについては処理をしない"
"ようにします (つまり、debhelper のログにコマンドの記録があるものは処理しな"
"い)。例えば、いくつかのバイナリパッケージだけに対して特別なオプション付きでコ"
"マンドを呼び出し、残りのパッケージに対しては本オプションをつけてコマンドを呼"
"び出し、デフォルト設定による処理を行うという事ができます。"

#. type: =item
#: debhelper.pod:142
msgid "B<--ignore=>I<file>"
msgstr "B<--ignore=>I<file>"

#. type: textblock
#: debhelper.pod:144
msgid ""
"Ignore the specified file. This can be used if F<debian/> contains a "
"debhelper config file that a debhelper command should not act on. Note that "
"F<debian/compat>, F<debian/control>, and F<debian/changelog> can't be "
"ignored, but then, there should never be a reason to ignore those files."
msgstr ""
"特定のファイルを無視します。F<debian/> 以下に実際には debhelper コマンドが実"
"行しては困るような debhelper 設定ファイルがあるような時に利用できます。ただ、"
"F<debian/compat>, F<debian/control>, F<debian/changelog> は無視する事ができま"
"せん。これは動作の都合上、これらのファイルを無視するわけにはいかないからで"
"す。"

#. type: textblock
#: debhelper.pod:149
msgid ""
"For example, if upstream ships a F<debian/init> that you don't want "
"B<dh_installinit> to install, use B<--ignore=debian/init>"
msgstr ""
"例えば、開発元 (upstream) が F<debian/init> を提供しているが B<dh_installinit> "
"でインストールして欲しくは無い場合、B<--ignore=debian/init> を使うことになり"
"ます。"

#. type: =item
#: debhelper.pod:152
msgid "B<-P>I<tmpdir>, B<--tmpdir=>I<tmpdir>"
msgstr "B<-P>I<tmpdir>, B<--tmpdir=>I<tmpdir>"

#. type: textblock
#: debhelper.pod:154
msgid ""
"Use I<tmpdir> for package build directory. The default is debian/I<package>"
msgstr ""
"I<tmpdir> をパッケージビルドディレクトリとして利用します。デフォルトでは "
"debian/I<package> ディレクトリが使われます。"

#. type: =item
#: debhelper.pod:156
msgid "B<--mainpackage=>I<package>"
msgstr "B<--mainpackage=>I<package>"

#. type: textblock
#: debhelper.pod:158
msgid ""
"This little-used option changes the package which debhelper considers the "
"\"main package\", that is, the first one listed in F<debian/control>, and "
"the one for which F<debian/foo> files can be used instead of the usual "
"F<debian/package.foo> files."
msgstr ""
"このあまり使われないオプションは、debhelper コマンドが \"main package\" とみ"
"なすパッケージ、つまり、F<debian/control> の最初に記載されたパッケージを変更"
"するものです。これにより、通常の F<debian/package.foo> ファイルではなく "
"F<debian/foo> ファイルが使われるようになります。"

#. type: =item
#: debhelper.pod:163
msgid "B<-O=>I<option>|I<bundle>"
msgstr "B<-O=>I<option>|I<bundle>"

#. type: textblock
#: debhelper.pod:165
msgid ""
"This is used by L<dh(1)> when passing user-specified options to all the "
"commands it runs. If the command supports the specified option or option "
"bundle, it will take effect. If the command does not support the option (or "
"any part of an option bundle), it will be ignored."
msgstr ""
"これは、実行するすべてのコマンドへユーザー指定のオプションを渡す際に "
"L<dh(1)> が利用します。コマンドが指定のオプションをサポートしている、あるいは"
"内蔵している場合は、オプションは効果を発揮します。コマンドが指定されたオプ"
"ションをサポートしていない場合 (あるいは、内蔵しているオプションにない場合)、"
"オプションは無視されます。"

#. type: =head1
#: debhelper.pod:172
msgid "COMMON DEBHELPER OPTIONS"
msgstr "DEBHELPER の共通オプション"

#. type: textblock
#: debhelper.pod:174
msgid ""
"The following command line options are supported by some debhelper "
"programs.  See the man page of each program for a complete explanation of "
"what each option does."
msgstr ""
"以下のコマンドラインオプションが、debhelper プログラムのうち複数でサポートさ"
"れています。「オプションが何を意味するか」という完全な説明は、各コマンドの "
"man ページを参照してください。"

#. type: =item
#: debhelper.pod:180
msgid "B<-n>"
msgstr "B<-n>"

#. type: textblock
#: debhelper.pod:182
msgid "Do not modify F<postinst>, F<postrm>, etc. scripts."
msgstr "F<postinst>, F<postrm> 等のスクリプトに変更を加えません。"

#. type: =item
#: debhelper.pod:184 dh_compress:54 dh_install:93 dh_installchangelogs:72
#: dh_installdocs:85 dh_installexamples:42 dh_link:63 dh_makeshlibs:91
#: dh_md5sums:38 dh_shlibdeps:31 dh_strip:40
msgid "B<-X>I<item>, B<--exclude=>I<item>"
msgstr "B<-X>I<item>, B<--exclude=>I<item>"

#. type: textblock
#: debhelper.pod:186
msgid ""
"Exclude an item from processing. This option may be used multiple times, to "
"exclude more than one thing. The \\fIitem\\fR is typically part of a "
"filename, and any file containing the specified text will be excluded."
msgstr ""
"item を処理対象から除外します。複数の item を除外するためにこのオプションを複"
"数指定して使う。ことができます。通常、\\fIitem\\fR はファイル名の一部で、指定"
"されたテキストが含まれるファイルはすべて除外されます。"

#. type: =item
#: debhelper.pod:190 dh_bugfiles:55 dh_compress:61 dh_installdirs:44
#: dh_installdocs:80 dh_installexamples:37 dh_installinfo:36 dh_installman:66
#: dh_link:58
msgid "B<-A>, B<--all>"
msgstr "B<-A>, B<--all>"

#. type: textblock
#: debhelper.pod:192
msgid ""
"Makes files or other items that are specified on the command line take "
"effect in ALL packages acted on, not just the first."
msgstr ""
"コマンドラインで指定したファイル、あるいは他の item について、最初のパッケー"
"ジだけでなく全パッケージに対して処理を行います。"

#. type: =head1
#: debhelper.pod:197
msgid "BUILD SYSTEM OPTIONS"
msgstr "ビルドシステム用オプション"

#. type: textblock
#: debhelper.pod:199
msgid ""
"The following command line options are supported by all of the "
"B<dh_auto_>I<*> debhelper programs. These programs support a variety of "
"build systems, and normally heuristically determine which to use, and how to "
"use them.  You can use these command line options to override the default "
"behavior.  Typically these are passed to L<dh(1)>, which then passes them to "
"all the B<dh_auto_>I<*> programs."
msgstr ""
"以下のコマンドラインオプションが、すべての B<dh_auto_>I<*> の debhelper プロ"
"グラムによってサポートされています。これらのプログラム群は様々なビルドシステ"
"ムをサポートしており、通常の場合は推定によって、どのビルドシステムがどのよう"
"に使われるかを決定します。これらのコマンドラインオプションを使って、デフォル"
"トの動作を override することが可能です。大抵の場合は、これらのオプションはま"
"ず L<dh(1)> に渡され、それからすべての B<dh_auto_>I<*> プログラムへと渡されま"
"す。"

#. type: =item
#: debhelper.pod:208
msgid "B<-S>I<buildsystem>, B<--buildsystem=>I<buildsystem>"
msgstr "B<-S>I<buildsystem>, B<--buildsystem=>I<buildsystem>"

#. type: textblock
#: debhelper.pod:210
msgid ""
"Force use of the specified I<buildsystem>, instead of trying to auto-select "
"one which might be applicable for the package."
msgstr ""
"パッケージに合わせて自動的に選択されたビルドシステムではなく、I<buildsystem> "
"で指定したビルドシステムを強制的に使用します。"

#. type: =item
#: debhelper.pod:213
msgid "B<-D>I<directory>, B<--sourcedirectory=>I<directory>"
msgstr "B<-D>I<directory>, B<--sourcedirectory=>I<directory>"

#. type: textblock
#: debhelper.pod:215
msgid ""
"Assume that the original package source tree is at the specified "
"I<directory> rather than the top level directory of the Debian source "
"package tree."
msgstr ""
"オリジナルのソースツリーが、Debian ソースパッケージツリーの最上位のディレクト"
"リではなく、I<directory> で指定した場所にあると仮定します。"

#. type: =item
#: debhelper.pod:219
msgid "B<-B>[I<directory>], B<--builddirectory=>[I<directory>]"
msgstr "B<-B>[I<directory>], B<--builddirectory=>[I<directory>]"

#. type: textblock
#: debhelper.pod:221
msgid ""
"Enable out of source building and use the specified I<directory> as the "
"build directory. If I<directory> parameter is omitted, a default build "
"directory will be chosen."
msgstr ""
"ソースのビルドディレクトリ外にある、指定した I<directory> をビルドディレクト"
"リとしてソースのビルドを有効にします。I<directory> パラメータが省略された場合"
"はデフォルトのビルドディレクトリが利用されます。"

#. type: textblock
#: debhelper.pod:225
msgid ""
"If this option is not specified, building will be done in source by default "
"unless the build system requires or prefers out of source tree building.  In "
"such a case, the default build directory will be used even if B<--"
"builddirectory> is not specified."
msgstr ""
"このオプションが指定されない場合は、ビルドシステムがソースツリー外でのビルド"
"を必要とする、あるいはそちらが望ましいと判断されない限り、デフォルトではソー"
"スディレクトリ内部でビルドが行われます。その場合、B<--builddirectory> が指定"
"されていなくてもデフォルトのビルドディレクトリが使用されます。"

#. type: textblock
#: debhelper.pod:230
msgid ""
"If the build system prefers out of source tree building but still allows in "
"source building, the latter can be re-enabled by passing a build directory "
"path that is the same as the source directory path."
msgstr ""
"ビルドシステムが、ソースディレクトリ以外の場所でビルドを選択してしまうけれど"
"もソースディレクトリでのビルドが可能な場合には、ソースディレクトリのパスと同"
"じものとしてビルドディレクトリのパスを指定すれば、ソースディレクトリ内でビル"
"ドを行うようにできます。"

#. type: =item
#: debhelper.pod:234
msgid "B<--parallel>, B<--no-parallel>"
msgstr "B<--parallel>, B<--no-parallel>"

#. type: textblock
#: debhelper.pod:236
msgid ""
"Control whether parallel builds should be used if underlying build system "
"supports them.  The number of parallel jobs is controlled by the "
"B<DEB_BUILD_OPTIONS> environment variable (L<Debian Policy, section 4.9.1>) "
"at build time. It might also be subject to a build system specific limit."
msgstr ""
"ビルドシステムがサポートしている場合、並列ビルドを有効にするかどうかを管理し"
"ます。どれだけの数でジョブを並列にするかは、ビルドが行われる際に "
"B<DEB_BUILD_OPTIONS> 環境変数によって決定されます (L<Debian ポリシーマニュア"
"ル、4.9.1章>)。ビルドシステム固有の制限に影響を受ける場合もあります。"

#. type: textblock
#: debhelper.pod:242
msgid ""
"If neither option is specified, debhelper currently defaults to B<--"
"parallel> in compat 10 (or later) and B<--no-parallel> otherwise."
msgstr ""
"どちらのオプションも指定されていない場合、debhelper は現在では互換性レベル "
"10 (以降) の場合は B<--parallel> をデフォルトに、そうでない場合は B<--no-"
"parallel> が指定されます。"

# FIXME: typo: unncessary
#. type: textblock
#: debhelper.pod:245
msgid ""
"As an optimization, B<dh> will try to avoid passing these options to "
"subprocesses, if they are unncessary and the only options passed.  Notably "
"this happens when B<DEB_BUILD_OPTIONS> does not have a I<parallel> parameter "
"(or its value is 1)."
msgstr ""
"これらのオプションが不要である場合、あるいはこのオプションだけが渡された場合"
"には、B<dh> はこれらのオプションをサブプロセスに渡すのを最適化のため避けよう"
"とします。特に、これは B<DEB_BUILD_OPTIONS> が I<parallel> パラメーターを持た"
"ない (またはこの値が 1 である) 場合に起こります。"

#. type: =item
#: debhelper.pod:250
msgid "B<--max-parallel=>I<maximum>"
msgstr "B<--max-parallel=>I<maximum>"

#. type: textblock
#: debhelper.pod:252
msgid ""
"This option implies B<--parallel> and allows further limiting the number of "
"jobs that can be used in a parallel build. If the package build is known to "
"only work with certain levels of concurrency, you can set this to the "
"maximum level that is known to work, or that you wish to support."
msgstr ""
"このオプションは B<--parallel> とともに利用し、並列ビルドにおける並列数の上限"
"を引き上げます。もしパッケージが、とある並列数まででしかビルドできないことが"
"わかっている場合、このオプションを使って最大限の並列数または利用したい並列数"
"を指定できます。"

#. type: textblock
#: debhelper.pod:257
msgid ""
"Notably, setting the maximum to 1 is effectively the same as using B<--no-"
"parallel>."
msgstr ""
"特に、最大値を 1 に設定するのは B<--no-parallel> を使うのと同じ効果がありま"
"す。"

#. type: =item
#: debhelper.pod:260 dh:61
msgid "B<--list>, B<-l>"
msgstr "B<--list>, B<-l>"

#. type: textblock
#: debhelper.pod:262
msgid ""
"List all build systems supported by debhelper on this system. The list "
"includes both default and third party build systems (marked as such). Also "
"shows which build system would be automatically selected, or which one is "
"manually specified with the B<--buildsystem> option."
msgstr ""
"このシステム上で、debhelper がサポートしているビルドシステム一覧を表示しま"
"す。この一覧にはデフォルトのビルドシステム、そしてサードパーティー製 (である"
"と明記されている) ビルドシステムの双方を含みます。また、どれが自動的に選択さ"
"れたか、あるいは手動で B<--buildsystem> オプションにて何が指定されたのかも表"
"示します。"

#. type: =head1
#: debhelper.pod:269
msgid "COMPATIBILITY LEVELS"
msgstr "互換性レベル"

#. type: textblock
#: debhelper.pod:271
msgid ""
"From time to time, major non-backwards-compatible changes need to be made to "
"debhelper, to keep it clean and well-designed as needs change and its author "
"gains more experience. To prevent such major changes from breaking existing "
"packages, the concept of debhelper compatibility levels was introduced. You "
"must tell debhelper which compatibility level it should use, and it modifies "
"its behavior in various ways.  The compatibility level is specified in the "
"F<debian/compat> file and the file must be present."
msgstr ""
"時が経ち、後方互換性を崩すような大きな変更を debhelper にする必要がでてきまし"
"た。これは、変化に対して debhelper の構造を綺麗でうまく設計されたままに保つ必"
"要があることと、debhelper の作者がより経験を得てより深く考えるようになったた"
"めです。このような大きな変更によって既存のパッケージを壊さないようにするた"
"め、互換性レベルという考え方が導入されました。debhelper にどの互換性レベルを"
"使うべきかを指定することで、これに合わせて動作が様々に変化します。互換性レベ"
"ルは F<debian/compat> ファイルで指定され、このファイルは必須となっています。"

#. type: textblock
#: debhelper.pod:279
msgid ""
"Tell debhelper what compatibility level to use by writing a number to "
"F<debian/compat>. For example, to use v9 mode:"
msgstr ""
"数字を F<debian/compat> に記述して、debhelper にどの互換性レベルを使うかを教"
"えます。例えば、v9 モードを使うには次の様にします:"

#. type: verbatim
#: debhelper.pod:282
#, no-wrap
msgid ""
"  % echo 9 > debian/compat\n"
"\n"
msgstr ""
"  % echo 9 > debian/compat\n"
"\n"

#. type: textblock
#: debhelper.pod:284
msgid ""
"Your package will also need a versioned build dependency on a version of "
"debhelper equal to (or greater than) the compatibility level your package "
"uses. So for compatibility level 9, ensure debian/control has:"
msgstr ""
"パッケージは、利用する互換性レベルと同じ (あるいはそれ以上) のバージョンの "
"debhelper プログラムをビルド依存として設定する必要があります。互換性レベル 9 "
"の場合、debian/control ファイルが以下の様になっていることを確認してください:"

#. type: verbatim
#: debhelper.pod:288
#, no-wrap
msgid ""
"  Build-Depends: debhelper (>= 9)\n"
"\n"
msgstr ""
"  Build-Depends: debhelper (>= 9)\n"
"\n"

#. type: textblock
#: debhelper.pod:290
msgid ""
"Unless otherwise indicated, all debhelper documentation assumes that you are "
"using the most recent compatibility level, and in most cases does not "
"indicate if the behavior is different in an earlier compatibility level, so "
"if you are not using the most recent compatibility level, you're advised to "
"read below for notes about what is different in earlier compatibility levels."
msgstr ""
"特に指定が無い場合、debhelper のドキュメントは最新の互換性レベルを利用してい"
"る事を前提とおり、多くの場合では以前の互換性レベルではどう動作が異なるかにつ"
"いては言及していません。最新の互換性レベルを使っていない場合には、それ以前の"
"互換性レベルとはどう動作が違うのか、以下の説明を参照しておく事をおすすめしま"
"す。"

#. type: textblock
#: debhelper.pod:297
msgid "These are the available compatibility levels:"
msgstr "利用可能な互換性レベルは以下の通りです:"

#. type: =item
#: debhelper.pod:301 debhelper-obsolete-compat.pod:89
msgid "v5"
msgstr "v5"

#. type: textblock
#: debhelper.pod:303 debhelper-obsolete-compat.pod:91
msgid "This is the lowest supported compatibility level."
msgstr "これはサポートされている最低限の互換性レベルです。"

#. type: textblock
#: debhelper.pod:305
msgid ""
"If you are upgrading from an earlier compatibility level, please review "
"L<debhelper-obsolete-compat(7)>."
msgstr ""
"これ以前の互換性レベルからアップグレードしようとしている場合、L<debhelper-"
"obsolete-compat(7)> を確認して下さい。"

#. type: textblock
#: debhelper.pod:308 debhelper.pod:340 debhelper.pod:370 debhelper.pod:401
#: debhelper-obsolete-compat.pod:28 debhelper-obsolete-compat.pod:35
#: debhelper-obsolete-compat.pod:58 debhelper-obsolete-compat.pod:87
msgid "This mode is deprecated."
msgstr "このモードは廃止されました。"

#. type: =item
#: debhelper.pod:310
msgid "v6"
msgstr "v6"

#. type: textblock
#: debhelper.pod:312
msgid "Changes from v5 are:"
msgstr "v5 からの変更点:"

#. type: =item
#: debhelper.pod:316 debhelper.pod:321 debhelper.pod:327 debhelper.pod:333
#: debhelper.pod:348 debhelper.pod:355 debhelper.pod:359 debhelper.pod:363
#: debhelper.pod:378 debhelper.pod:382 debhelper.pod:390 debhelper.pod:395
#: debhelper.pod:409 debhelper.pod:414 debhelper.pod:421 debhelper.pod:426
#: debhelper.pod:431 debhelper.pod:435 debhelper.pod:441 debhelper.pod:446
#: debhelper.pod:451 debhelper.pod:467 debhelper.pod:472 debhelper.pod:478
#: debhelper.pod:485 debhelper.pod:491 debhelper.pod:496 debhelper.pod:502
#: debhelper.pod:508 debhelper.pod:518 debhelper.pod:524 debhelper.pod:547
#: debhelper.pod:554 debhelper.pod:560 debhelper.pod:566 debhelper.pod:582
#: debhelper.pod:587 debhelper.pod:593 debhelper.pod:597 debhelper.pod:602
#: debhelper.pod:614 debhelper.pod:622 debhelper-obsolete-compat.pod:43
#: debhelper-obsolete-compat.pod:48 debhelper-obsolete-compat.pod:52
#: debhelper-obsolete-compat.pod:66 debhelper-obsolete-compat.pod:71
#: debhelper-obsolete-compat.pod:76 debhelper-obsolete-compat.pod:81
#: debhelper-obsolete-compat.pod:97 debhelper-obsolete-compat.pod:101
#: debhelper-obsolete-compat.pod:106 debhelper-obsolete-compat.pod:110
msgid "-"
msgstr "-"

#. type: textblock
#: debhelper.pod:318
msgid ""
"Commands that generate maintainer script fragments will order the fragments "
"in reverse order for the F<prerm> and F<postrm> scripts."
msgstr ""
"メンテナンス用スクリプトの一部を生成するコマンドは、F<prerm> と F<postrm> ス"
"クリプト用にこれらを逆順に並び替えるようになりました。"

#. type: textblock
#: debhelper.pod:323
msgid ""
"B<dh_installwm> will install a slave manpage link for F<x-window-manager.1."
"gz>, if it sees the man page in F<usr/share/man/man1> in the package build "
"directory."
msgstr ""
"B<dh_installwm> は F<x-window-manager.1.gz> という slave な man ページへリン"
"クを作るようになりました。これはパッケージビルドディレクトリ内の F<usr/share/"
"man/man1> ディレクトリに man ページがある場合に行われます。"

#. type: textblock
#: debhelper.pod:329
msgid ""
"B<dh_builddeb> did not previously delete everything matching "
"B<DH_ALWAYS_EXCLUDE>, if it was set to a list of things to exclude, such as "
"B<CVS:.svn:.git>. Now it does."
msgstr ""
"B<dh_builddeb> は、B<CVS:.svn:.git> のように除外する対象を "
"B<DH_ALWAYS_EXCLUDE> に指定しても該当するファイルを削除していませんでした。本"
"互換性レベルでは削除するようになっています。"

#. type: textblock
#: debhelper.pod:335
msgid ""
"B<dh_installman> allows overwriting existing man pages in the package build "
"directory. In previous compatibility levels it silently refuses to do this."
msgstr ""
"B<dh_installman> は、パッケージビルドディレクトリにすでに存在する man ページ"
"を上書きしても良くなりました。これより以前の互換性レベルの元では、このような"
"動作は何の警告もなく拒絶されていました。"

#. type: =item
#: debhelper.pod:342
msgid "v7"
msgstr "v7"

#. type: textblock
#: debhelper.pod:344
msgid "Changes from v6 are:"
msgstr "v6 からの変更点:"

#. type: textblock
#: debhelper.pod:350
msgid ""
"B<dh_install>, will fall back to looking for files in F<debian/tmp> if it "
"doesn't find them in the current directory (or wherever you tell it look "
"using B<--sourcedir>). This allows B<dh_install> to interoperate with "
"B<dh_auto_install>, which installs to F<debian/tmp>, without needing any "
"special parameters."
msgstr ""
"もし、F<debian/tmp> 以下にあるようなファイルが、カレントディレクトリにない場"
"合 (もしくは、B<--sourcedir> で指定したディレクトリにない場合) 、"
"B<dh_install> は F<debian/tmp> を探しにいくようになりました。この振る舞いの変"
"更により、B<dh_install> に特に何か引数を指定しなくても、F<debian/tmp> にイン"
"ストールしようとする B<dh_auto_install> と協調して動作できるようになりまし"
"た。"

#. type: textblock
#: debhelper.pod:357
msgid "B<dh_clean> will read F<debian/clean> and delete files listed there."
msgstr ""
"B<dh_clean> は F<debian/clean> を読み、そこに記載されているファイルを消すよう"
"になりました。"

#. type: textblock
#: debhelper.pod:361
msgid "B<dh_clean> will delete toplevel F<*-stamp> files."
msgstr ""
"B<dh_clean> はビルドディレクトリの最上位の階層にある F<*-stamp> ファイルを消"
"すようになりました。"

#. type: textblock
#: debhelper.pod:365
msgid ""
"B<dh_installchangelogs> will guess at what file is the upstream changelog if "
"none is specified."
msgstr ""
"B<dh_installchangelogs> は、何も指定しなくてもどのファイルが upstream の "
"changelog であるかを推定するようになりました。"

#. type: =item
#: debhelper.pod:372
msgid "v8"
msgstr "v8"

#. type: textblock
#: debhelper.pod:374
msgid "Changes from v7 are:"
msgstr "v7 からの変更点:"

#. type: textblock
#: debhelper.pod:380
msgid ""
"Commands will fail rather than warning when they are passed unknown options."
msgstr ""
"未定義のオプションを渡そうとすると、警告文を出して処理続行するのではなく、エ"
"ラーにして処理を失敗させるようになりました。"

#. type: textblock
#: debhelper.pod:384
msgid ""
"B<dh_makeshlibs> will run B<dpkg-gensymbols> on all shared libraries that it "
"generates shlibs files for. So B<-X> can be used to exclude libraries.  "
"Also, libraries in unusual locations that B<dpkg-gensymbols> would not have "
"processed before will be passed to it, a behavior change that can cause some "
"packages to fail to build."
msgstr ""
"B<dh_makeshlibs> は、shlibs ファイルを作成する為に、B<dpkg-gensymbols> をすべ"
"ての共有ライブラリに対して実行するようになりました。B<-X> を指定すると実行を"
"除外するライブラリを指定できます。また、通常ではない場所にライブラリがある為 "
"B<dh_makeshlibs> へ渡す前に B<dpkg-gensymbols> が処理できないような場合、パッ"
"ケージのビルドが失敗に終わるようになりました。"

#. type: textblock
#: debhelper.pod:392
msgid ""
"B<dh> requires the sequence to run be specified as the first parameter, and "
"any switches come after it. Ie, use \"B<dh $@ --foo>\", not \"B<dh --foo $@>"
"\"."
msgstr ""
"B<dh> は最初のパラメータとして、一連の処理の名前を指定し、その次にオプション"
"を記載しなければならなくなりました。つまり、\"B<dh $@ --foo>\" が正し"
"く、\"B<dh --foo $@>\" は間違いとなります。"

#. type: textblock
#: debhelper.pod:397
msgid ""
"B<dh_auto_>I<*> prefer to use Perl's B<Module::Build> in preference to "
"F<Makefile.PL>."
msgstr ""
"B<dh_auto_>I<*> は F<Makefile.PL> ファイルよりも、Perl の B<Module::Build> モ"
"ジュールを優先して利用するようになりました。"

#. type: =item
#: debhelper.pod:403
msgid "v9"
msgstr "v9"

#. type: textblock
#: debhelper.pod:405
msgid "Changes from v8 are:"
msgstr "v8 からの変更点:"

#. type: textblock
#: debhelper.pod:411
msgid ""
"Multiarch support. In particular, B<dh_auto_configure> passes multiarch "
"directories to autoconf in --libdir and --libexecdir."
msgstr ""
"multiarch をサポートします。特に B<dh_auto_configure> は autoconfコマンドへ "
"--libdir や --libexecdir に multiarch 用途のディレクトリを渡すようになってい"
"ます。"

#. type: textblock
#: debhelper.pod:416
msgid ""
"dh is aware of the usual dependencies between targets in debian/rules.  So, "
"\"dh binary\" will run any build, build-arch, build-indep, install, etc "
"targets that exist in the rules file. There's no need to define an explicit "
"binary target with explicit dependencies on the other targets."
msgstr ""
"dh コマンドは debian/rules に記載されているターゲット間の一般的な依存性を考慮"
"します。そのため、\"dh binary\" は rules ファイルに存在する build, build-"
"arch, build-indep, install 等のターゲットを実行していきます。つまり、他のター"
"ゲットに関する依存関係をいちいち細かく明示した binary ターゲットを用意する必"
"要はありません。"

#. type: textblock
#: debhelper.pod:423
msgid ""
"B<dh_strip> compresses debugging symbol files to reduce the installed size "
"of -dbg packages."
msgstr ""
"B<dh_strip> はデバッグシンボルファイルを圧縮し、-dbg パッケージのインストール"
"時に必要とする容量を削減します。"

#. type: textblock
#: debhelper.pod:428
msgid ""
"B<dh_auto_configure> does not include the source package name in --"
"libexecdir when using autoconf."
msgstr ""
"B<dh_auto_configure> は、autoconf を使ったときに、--libexecdir にソースパッ"
"ケージ名を追加しなくなりました。"

#. type: textblock
#: debhelper.pod:433
msgid "B<dh> does not default to enabling --with=python-support"
msgstr ""
"B<dh> は --with=python-support オプションを、デフォルトでは無効にするようにな"
"りました。"

#. type: textblock
#: debhelper.pod:437
msgid ""
"All of the B<dh_auto_>I<*> debhelper programs and B<dh> set environment "
"variables listed by B<dpkg-buildflags>, unless they are already set."
msgstr ""
"すべての B<dh_auto_>I<*> debhelper プログラムと B<dh> コマンドは、B<dpkg-"
"buildflags> で指定される環境変数を設定します。すでに該当する環境変数が設定さ"
"れている場合は設定を行いません。"

#. type: textblock
#: debhelper.pod:443
msgid ""
"B<dh_auto_configure> passes B<dpkg-buildflags> CFLAGS, CPPFLAGS, and LDFLAGS "
"to perl F<Makefile.PL> and F<Build.PL>"
msgstr ""
"B<dh_auto_configure> は、B<dpkg-buildflags> によって設定されるCFLAGS、"
"CPPFLAGS, LDFLAGS パラメータを F<Makefile.PL> や F<Build.PL> へ引き渡します。"

#. type: textblock
#: debhelper.pod:448
msgid ""
"B<dh_strip> puts separated debug symbols in a location based on their build-"
"id."
msgstr ""
"B<dh_strip> は build-id に基づく場所に、分離したデバッグシンボルを配置しま"
"す。"

#. type: textblock
#: debhelper.pod:453
msgid ""
"Executable debhelper config files are run and their output used as the "
"configuration."
msgstr ""
"実行可能権限を付与した debhelper 用の設定ファイルは、実行され出力が設定として"
"扱われます。"

#. type: =item
#: debhelper.pod:458
msgid "v10"
msgstr "v10"

#. type: textblock
#: debhelper.pod:460
msgid "This is the recommended mode of operation."
msgstr "これが動作推奨モードです。"

#. type: textblock
#: debhelper.pod:463
msgid "Changes from v9 are:"
msgstr "v9 からの変更点:"

#. type: textblock
#: debhelper.pod:469
msgid ""
"B<dh_installinit> will no longer install a file named debian/I<package> as "
"an init script."
msgstr ""
"B<dh_installinit> は、init スクリプトとして debian/I<package> という名前で"
"ファイルをインストールしなくなりました。"

#. type: textblock
#: debhelper.pod:474
msgid ""
"B<dh_installdocs> will error out if it detects links created with --link-doc "
"between packages of architecture \"all\" and non-\"all\" as it breaks "
"binNMUs."
msgstr ""
"B<dh_installdocs> は、アーキテクチャ \"all\" と 非 \"all\" のパッケージ間で "
"--link-doc で作られたリンクが binNMU を壊すのを検知してエラーを吐き出すように"
"なります。"

#. type: textblock
#: debhelper.pod:480
msgid ""
"B<dh> no longer creates the package build directory when skipping running "
"debhelper commands. This will not affect packages that only build with "
"debhelper commands, but it may expose bugs in commands not included in "
"debhelper."
msgstr ""
"B<dh> は、実行している debhelper コマンドをスキップした場合にはパッケージビル"
"ドディレクトリを作成しなくなりました。これは debhelper コマンドのみを使ってビ"
"ルドされているパッケージには影響しませんが、debhelper に含まれていないコマン"
"ドのバグを暴くかもしれません。"

#. type: textblock
#: debhelper.pod:487
msgid ""
"B<dh_installdeb> no longer installs a maintainer-provided debian/I<package>."
"shlibs file.  This is now done by B<dh_makeshlibs> instead."
msgstr ""
"B<dh_installdeb>は、メンテナが提供した debian/I<package>.shlibs ファイルをイ"
"ンストールしなくなりました。現在これは、B<dh_makeshlibs> によって代わりに行わ"
"れます。"

#. type: textblock
#: debhelper.pod:493
msgid ""
"B<dh_installwm> refuses to create a broken package if no man page can be "
"found (required to register for the x-window-manager alternative)."
msgstr ""
"B<dh_installwm> は、man ページが見つからない場合に壊れたパッケージを作成する"
"のを拒否するようになりました (x-window-manager の alternative 登録に必要)。"

#. type: textblock
#: debhelper.pod:498
msgid ""
"Debhelper will default to B<--parallel> for all buildsystems that support "
"parallel building.  This can be disabled by using either B<--no-parallel> or "
"passing B<--max-parallel> with a value of 1."
msgstr ""
"debhelper は、並列ビルドをサポートしている全てのビルドシステムで、デフォルト"
"で B<--parallel> を使用します。これは、B<--no-parallel> を使うか B<--max-"
"parallel> へ 1 の値を渡すことで無効にできます。"

#. type: textblock
#: debhelper.pod:504
msgid ""
"The B<dh> command will not accept any of the deprecated \"manual sequence "
"control\" parameters (B<--before>, B<--after>, etc.).  Please use override "
"targets instead."
msgstr ""
"B<dh> コマンドは、使われなくなった \"手動シーケンスコントロール\" パラメー"
"ター(B<--before>, B<--after> など)を受け付けなくなります。代わりに override "
"ターゲットを使ってください。"

#. type: textblock
#: debhelper.pod:510
msgid ""
"The B<dh> command will no longer use log files to track which commands have "
"been run.  The B<dh> command I<still> keeps track of whether it already ran "
"the \"build\" sequence and skip it if it did."
msgstr ""
"B<dh> コマンドはどのコマンドが実行されたのかを追跡するのにログファイルを使わ"
"なくなります。B<dh> コマンドは I<依然として> 既に \"build\" シーケンスを実行"
"したかどうかを記録し、もし実行されていたらスキップします。"

#. type: textblock
#: debhelper.pod:514
msgid "The main effects of this are:"
msgstr "これの主な影響:"

#. type: textblock
#: debhelper.pod:520
msgid ""
"With this, it is now easier to debug the I<install> or/and I<binary> "
"sequences because they can now trivially be re-run (without having to do a "
"full \"clean and rebuild\" cycle)"
msgstr ""
"これにより、I<install> 及び I<binary> シーケンスを (\"clean 及び rebuild\" の"
"サイクルを全て実施する必要が無くなり) 気軽に再実行可能になったため、デバッグ"
"がより簡単になっています。"

#FIXME: 訳してもわからない...
#. type: textblock
#: debhelper.pod:526
#, fuzzy
msgid ""
"The main caveat is that B<dh_*> now only keeps track of what happened in a "
"single override target.  When all the calls to a given B<dh_cmd> command "
"happens in the same override target everything will work as before."
msgstr ""
"主な注意点としては、B<dh_*> は単一の override ターゲット内で何が起こったのか"
"だけを記録するようになったことです。指定された B<dh_cmd> コマンドへの全ての"
"呼び出しが同一の override ターゲット内で起きた場合は、以前と同様に全てが動作"
"します。"

#. type: textblock
#: debhelper.pod:531
msgid "Example of where it can go wrong:"
msgstr "動かなくなる可能性がある例:"

#. type: verbatim
#: debhelper.pod:533
#, no-wrap
msgid ""
"  override_dh_foo:\n"
"    dh_foo -pmy-pkg\n"
"\n"
msgstr ""
"  override_dh_foo:\n"
"    dh_foo -pmy-pkg\n"
"\n"

#. type: verbatim
#: debhelper.pod:536
#, no-wrap
msgid ""
"  override_dh_bar:\n"
"    dh_bar\n"
"    dh_foo --remaining\n"
"\n"
msgstr ""
"  override_dh_bar:\n"
"    dh_bar\n"
"    dh_foo --remaining\n"
"\n"

#. type: textblock
#: debhelper.pod:540
msgid ""
"In this case, the call to B<dh_foo --remaining> will I<also> include I<my-"
"pkg>, since B<dh_foo -pmy-pkg> was run in a separate override target.  This "
"issue is not limited to B<--remaining>, but also includes B<-a>, B<-i>, etc."
msgstr ""
"この場合、B<dh_foo --remaining> の呼び出しは、B<dh_foo -pmy-pkg> が分かれてい"
"る override ターゲット内にあるため、I<my-pkg> I<も>含みます。この問題は B<--"
"remaining> に限らず B<-a>, B<-i> なども含みます。"

#. type: textblock
#: debhelper.pod:549
msgid ""
"The B<dh_installdeb> command now shell-escapes the lines in the "
"F<maintscript> config file.  This was the original intent but it did not "
"work properly and packages have begun to rely on the incomplete shell "
"escaping (e.g. quoting file names)."
msgstr ""
"B<dh_installdeb> コマンドは F<maintscript> 設定ファイル内の行をシェルエスケー"
"プするようになりました。これは元々意図していた動作でしたが正しく動作しておら"
"ず、パッケージが不完全なシェルエスケープ (例: ファイル名のクォート) に依存する"
"ようになっていました。"

#. type: textblock
#: debhelper.pod:556
msgid ""
"The B<dh_installinit> command now defaults to B<--restart-after-upgrade>.  "
"For packages needing the previous behaviour, please use B<--no-restart-after-"
"upgrade>."
msgstr ""
"B<dh_installinit> コマンドは標準で B<--restart-after-upgrade> を利用するよう"
"になりました。以前の動作が必要なパッケージには B<--no-restart-after-upgrade> "
"を利用してください。"

#. type: textblock
#: debhelper.pod:562
msgid ""
"The B<autoreconf> sequence is now enabled by default.  Please pass B<--"
"without autoreconf> to B<dh> if this is not desirable for a given package"
msgstr ""
"B<autoreconf> シーケンスが標準で有効になりました。指定のパッケージでこの動作"
"を望まない場合は、B<dh> に B<--without autoreconf> を指定してください。"

#. type: textblock
#: debhelper.pod:568
msgid ""
"The B<systemd> sequence is now enabled by default.  Please pass B<--without "
"systemd> to B<dh> if this is not desirable for a given package."
msgstr ""
"B<systemd> シーケンスが標準で有効になりました。指定のパッケージでこの動作を望"
"まない場合は、B<dh> に B<--without systemd> を指定してください。"

#. type: =item
#: debhelper.pod:574
msgid "v11"
msgstr "v11"

#. type: textblock
#: debhelper.pod:576
msgid ""
"This compatibility level is still open for development; use with caution."
msgstr ""
"この互換性レベルは未だ開発中の状態です。使う場合は注意して使ってください。"

#. type: textblock
#: debhelper.pod:578
msgid "Changes from v10 are:"
msgstr "v10 からの変更点:"

#. type: textblock
#: debhelper.pod:584
msgid ""
"B<dh_installmenu> no longer installs F<menu> files.  The F<menu-method> "
"files are still installed."
msgstr ""
"B<dh_installmenu> は F<menu> ファイルをインストールしなくなりました。まだ "
"F<menu-method> ファイルはインストールされます。"

#. type: textblock
#: debhelper.pod:589
msgid ""
"B<dh_installinit> no longer installs F<service> or F<tmpfile> files, nor "
"generates maintainer scripts for those files. Use B<dh_systemd_enable> and "
"B<dh_systemd_start> instead."
msgstr ""
"B<dh_installinit> は F<service> ファイルや F<tmpfile> ファイルをインストール"
"しなくなり、さらにはこれらのファイルに対するメンテナスクリプトも生成しなく"
"なりました。代わりに B<dh_systemd_enable> や B<dh_systemd_start> を使って"
"ください。"

#. type: textblock
#: debhelper.pod:595
msgid "The B<-s> (B<--same-arch>) option is removed."
msgstr "B<-s>, B<--same-arch> オプションは削除されました。"

# TRANS: 実際の warning に合わせて deprecate とする
#. type: textblock
#: debhelper.pod:599
msgid ""
"Invoking B<dh_clean -k> now causes an error instead of a deprecation warning."
msgstr ""
"B<dh_clean -k> の起動は deprecate 警告ではなくエラーを起こすようになりまし"
"た。"

#. type: textblock
#: debhelper.pod:604
msgid ""
"B<dh_installdocs> now installs user-supplied documentation (e.g. debian/"
"I<package>.docs) into F</usr/share/doc/mainpackage> rather than F</usr/share/"
"doc/package> by default as recommended by Debian Policy 3.9.7."
msgstr ""
"B<dh_installdocs> は、Debian ポリシー 3.9.7 の勧めに従って、ユーザーが提供す"
"るドキュメントを、デフォルトでは F</usr/share/doc/package> ではなく F</usr/"
"share/doc/mainpackage> にインストールするようになりました。"

#. type: textblock
#: debhelper.pod:609
msgid ""
"If you need the old behaviour, it can be emulated by using the B<--"
"mainpackage> option."
msgstr ""
"以前の振る舞いが必要な場合、B<--mainpackage> オプションを使ってエミュレーショ"
"ンすることができます。"

#. type: textblock
#: debhelper.pod:612
msgid "Please remember to check/update your doc-base files."
msgstr "doc-base ファイルの確認と更新を忘れないで下さい。"

#. type: textblock
#: debhelper.pod:616
msgid ""
"B<dh_installdirs> no longer creates debian/I<package> directories unless "
"explicitly requested (or it has to create a subdirectory in it)."
msgstr ""

#. type: textblock
#: debhelper.pod:620
msgid "The vast majority of all packages will be unaffected by this change."
msgstr ""

#. type: textblock
#: debhelper.pod:624
msgid ""
"B<dh> no longer creates a stamp (or log) file to record whether the build "
"already ran or not.  This means that unless upstream's build system "
"correctly tracks this, the build will be run twice (once for the \"build\" "
"target and once for the \"binary\" target)."
msgstr ""

#. type: textblock
#: debhelper.pod:629
msgid ""
"On the other hand, this means that rebuild without cleaning (e.g. B<dpkg-"
"buildpackage -nc>) will behave as most people would expect."
msgstr ""

#. type: textblock
#: debhelper.pod:633
msgid "The previous behaviour can restored by using B<--with build-stamp>"
msgstr "B<--with build-stamp> を使えば以前の動作に戻すことが出来ます。"

#. type: =head2
#: debhelper.pod:639
msgid "Participating in the open beta testing of new compat levels"
msgstr "新しい互換性レベルの公開ベータテストに参加する"

#. type: textblock
#: debhelper.pod:641
msgid ""
"It is possible to opt-in to the open beta testing of new compat levels.  "
"This is done by setting the compat level to the string \"beta-tester\"."
msgstr ""
"新しい互換性レベルの公開ベータテストに参加することができます。これは、互換性"
"レベルを \"beta-tester\" という文字に設定することで実施します。"

#. type: textblock
#: debhelper.pod:645
msgid ""
"Packages using this compat level will automatically be upgraded to the "
"highest compatibility level in open beta.  In periods without any open beta "
"versions, the compat level will be the highest stable compatibility level."
msgstr ""
"この互換性レベルを使うパッケージは、公開ベータ状態にある最も高い互換性レベル"
"に自動的にアップグレードされます。公開ベータバージョンが存在しない期間では、"
"互換性レベルは最も高い安定版互換性レベルになります。"

#. type: textblock
#: debhelper.pod:650
msgid "Please consider the following before opting in:"
msgstr "受け入れ前に以下の事柄を検討して下さい:"

#. type: =item
#: debhelper.pod:654 debhelper.pod:659 debhelper.pod:666 debhelper.pod:672
#: debhelper.pod:678
msgid "*"
msgstr "*"

#. type: textblock
#: debhelper.pod:656
msgid ""
"The automatic upgrade in compatibility level may cause the package (or a "
"feature in it) to stop functioning."
msgstr ""
"互換性レベルの自動アップグレードはパッケージ (あるいはパッケージの一部機能) "
"が動作しなくなる可能性があります。"

#. type: textblock
#: debhelper.pod:661
msgid ""
"Compatibility levels in open beta are still subject to change.  We will try "
"to keep the changes to a minimal once the beta starts.  However, there are "
"no guarantees that the compat will not change during the beta."
msgstr ""
"公開ベータ状態の互換性レベルは、依然として変更される可能性があります。ベータ"
"開始後は変更を最小限に留めるようにします。ですが、ベータ期間中に互換性が変わ"
"らないことの保証はありません。"

#. type: textblock
#: debhelper.pod:668
msgid ""
"We will notify you via debian-devel@lists.debian.org before we start a new "
"open beta compat level.  However, once the beta starts we expect that you "
"keep yourself up to date on changes to debhelper."
msgstr ""
"互換性レベルの新たな公開ベータを始める前に debian-devel@lists.debian.org で通"
"知します。ですが、一旦ベータテストが始まったら、debhelper の変更へ追随するこ"
"とが期待されます。"

#. type: textblock
#: debhelper.pod:674
msgid ""
"The \"beta-tester\" compatibility version in unstable and testing will often "
"be different than the one in stable-backports.  Accordingly, it is not "
"recommended for packages being backported regularly."
msgstr ""
"不安定版及びテスト版にある \"beta-tester\" 互換性バージョンは、しばしば "
"stable-backports のものとは異なります。従って、定期的にバックポートするのは推"
"奨されません。"

#. type: textblock
#: debhelper.pod:680
msgid ""
"You can always opt-out of the beta by resetting the compatibility level of "
"your package to a stable version."
msgstr ""
"パッケージの互換性レベルを安定版バージョンに戻せば、いつでもベータを辞めるこ"
"とが可能です。"

#. type: textblock
#: debhelper.pod:685
msgid "Should you still be interested in the open beta testing, please run:"
msgstr "公開ベータテストに興味がまだある場合は、以下を実行して下さい:"

#. type: verbatim
#: debhelper.pod:687
#, no-wrap
msgid ""
"  % echo beta-tester > debian/compat\n"
"\n"
msgstr ""
"  % echo beta-tester > debian/compat\n"
"\n"

#. type: textblock
#: debhelper.pod:689
msgid "You will also need to ensure that debian/control contains:"
msgstr "debian/control が以下を含むことを確認する必要もあります:"

#. type: verbatim
#: debhelper.pod:691
#, no-wrap
msgid ""
"  Build-Depends: debhelper (>= 9.20160815~)\n"
"\n"
msgstr ""
"  Build-Depends: debhelper (>= 9.20160815~)\n"
"\n"

#. type: textblock
#: debhelper.pod:693
msgid "To ensure that debhelper knows about the \"beta-tester\" compat level."
msgstr ""
"debhelper が \"beta-tester\" 互換性レベルを理解するのを保証するためです。"

#. type: =head1
#: debhelper.pod:695 dh_auto_test:46 dh_installcatalogs:62 dh_installdocs:136
#: dh_installemacsen:73 dh_installexamples:54 dh_installinit:159
#: dh_installman:83 dh_installmodules:55 dh_installudev:49 dh_installwm:55
#: dh_installxfonts:38 dh_movefiles:65 dh_strip:117 dh_usrlocal:49
#: dh_systemd_enable:73 dh_systemd_start:66
msgid "NOTES"
msgstr "付記"

#. type: =head2
#: debhelper.pod:697
msgid "Multiple binary package support"
msgstr "複数のバイナリパッケージのサポート"

#. type: textblock
#: debhelper.pod:699
msgid ""
"If your source package generates more than one binary package, debhelper "
"programs will default to acting on all binary packages when run. If your "
"source package happens to generate one architecture dependent package, and "
"another architecture independent package, this is not the correct behavior, "
"because you need to generate the architecture dependent packages in the "
"binary-arch F<debian/rules> target, and the architecture independent "
"packages in the binary-indep F<debian/rules> target."
msgstr ""
"ソースパッケージが複数のバイナリパッケージを生成する場合、デフォルトでは "
"debhelper は実行時にすべてのバイナリパッケージを生成します。この場合ソース"
"パッケージが、アーキテクチャ依存パッケージとアーキテクチャ非依存パッケージを"
"同時に生成するとしたら、この振る舞いは正しくありません。というのも、F<debian/"
"rules> では、アーキテクチャ依存パッケージを生成するなら binary-arch ターゲッ"
"ト内で生成する必要があり、アーキテクチャ非依存のパッケージならば、binary-"
"indep ターゲットで生成する必要がある為です。"

#. type: textblock
#: debhelper.pod:707
msgid ""
"To facilitate this, as well as give you more control over which packages are "
"acted on by debhelper programs, all debhelper programs accept the B<-a>, B<-"
"i>, B<-p>, and B<-s> parameters. These parameters are cumulative.  If none "
"are given, debhelper programs default to acting on all packages listed in "
"the control file, with the exceptions below."
msgstr ""
"これを容易にする為、どのパッケージが debhelper プログラムによって処理されるか"
"をよりコントロールするのと同様、すべての debhelper プログラムは B<-a>, B<-"
"i>, B<-p>, B<-s> パラメータを解釈できます。これらのパラメータは重複可能です。"
"何も指定しない場合、debhelper プログラムは、以下の例外を除いて control ファイ"
"ルに列挙されたすべてのパッケージに対して処理を行います。"

#. type: textblock
#: debhelper.pod:713
msgid ""
"First, any package whose B<Architecture> field in B<debian/control> does not "
"match the B<DEB_HOST_ARCH> architecture will be excluded (L<Debian Policy, "
"section 5.6.8>)."
msgstr ""
"まず、B<debian/control> 中の B<Architecture> フィールドが B<DEB_HOST_ARCH> "
"アーキテクチャに一致しない全てのパッケージが除外されます (L<Debian ポリシー "
"5.6.8 章>)。"

#. type: textblock
#: debhelper.pod:717
msgid ""
"Also, some additional packages may be excluded based on the contents of the "
"B<DEB_BUILD_PROFILES> environment variable and B<Build-Profiles> fields in "
"binary package stanzas in B<debian/control>, according to the draft policy "
"at L<https://wiki.debian.org/BuildProfileSpec>."
msgstr ""
"また、L<https://wiki.debian.org/BuildProfileSpec> にあるドラフトのポリシーに"
"よると、B<DEB_BUILD_PROFILES> 環境変数と B<debian/control> 中のバイナリパッ"
"ケージ節の B<Build-Profiles> フィールドの内容を元に追加でパッケージが除外され"
"ます。"

# note: it should be "Debian maintainer scripts"?
#. type: =head2
#: debhelper.pod:722
msgid "Automatic generation of Debian install scripts"
msgstr "メンテナスクリプトの自動生成"

#. type: textblock
#: debhelper.pod:724
msgid ""
"Some debhelper commands will automatically generate parts of Debian "
"maintainer scripts. If you want these automatically generated things "
"included in your existing Debian maintainer scripts, then you need to add "
"B<#DEBHELPER#> to your scripts, in the place the code should be added.  "
"B<#DEBHELPER#> will be replaced by any auto-generated code when you run "
"B<dh_installdeb>."
msgstr ""
"debhelper コマンドには、Debian メンテナスクリプトの一部を自動的に生成するもの"
"があります。もし、既存の Debian メンテナスクリプトに自動生成された部分を含む"
"ようにしたければ、コードを追加したい場所に B<#DEBHELPER#> と追記してくださ"
"い。B<#DEBHELPER#> は B<dh_installdeb> が実行される際に、自動生成されたコード"
"へ置換されます。"

#. type: textblock
#: debhelper.pod:731
msgid ""
"If a script does not exist at all and debhelper needs to add something to "
"it, then debhelper will create the complete script."
msgstr ""
"スクリプトがまったく存在しないが debhelper が何かをスクリプトに追加する必要が"
"ある場合、debhelper はスクリプトを一式生成します。"

#. type: textblock
#: debhelper.pod:734
msgid ""
"All debhelper commands that automatically generate code in this way let it "
"be disabled by the -n parameter (see above)."
msgstr ""
"-n パラメーターを指定すると、このような debhelper プログラムによるスクリプト"
"の自動生成を行わないようにできます (上記参照)。"

#. type: textblock
#: debhelper.pod:737
msgid ""
"Note that the inserted code will be shell code, so you cannot directly use "
"it in a Perl script. If you would like to embed it into a Perl script, here "
"is one way to do that (note that I made sure that $1, $2, etc are set with "
"the set command):"
msgstr ""
"挿入されるコードはシェルスクリプトなので、Perl スクリプトには直接埋め込めない"
"事に注意してください。もし何かを Perl スクリプトに埋め込みたい場合、以下に一"
"例を挙げます ($1, $2 等は set コマンドにより設定される事に注意):"

#. type: verbatim
#: debhelper.pod:742
#, no-wrap
msgid ""
"  my $temp=\"set -e\\nset -- @ARGV\\n\" . << 'EOF';\n"
"  #DEBHELPER#\n"
"  EOF\n"
"  if (system($temp)) {\n"
"     my $exit_code = ($? >> 8) & 0xff;\n"
"     my $signal = $? & 0x7f;\n"
"     if ($exit_code) {\n"
"         die(\"The debhelper script failed with error code: ${exit_code}\");\n"
"     } else {\n"
"         die(\"The debhelper script was killed by signal: ${signal}\");\n"
"     }\n"
"  }\n"
"\n"
msgstr ""
"  my $temp=\"set -e\\nset -- @ARGV\\n\" . << 'EOF';\n"
"  #DEBHELPER#\n"
"  EOF\n"
"  if (system($temp)) {\n"
"     my $exit_code = ($? >> 8) & 0xff;\n"
"     my $signal = $? & 0x7f;\n"
"     if ($exit_code) {\n"
"         die(\"debhelper スクリプトは失敗しました。エラーコード: ${exit_code}\");\n"
"     } else {\n"
"         die(\"debhelper スクリプトは以下のシグナルで終了されました: ${signal}\");\n"
"     }\n"
"  }\n"
"\n"

#. type: =head2
#: debhelper.pod:755
msgid "Automatic generation of miscellaneous dependencies."
msgstr "様々な依存関係の自動生成"

#. type: textblock
#: debhelper.pod:757
msgid ""
"Some debhelper commands may make the generated package need to depend on "
"some other packages. For example, if you use L<dh_installdebconf(1)>, your "
"package will generally need to depend on debconf. Or if you use "
"L<dh_installxfonts(1)>, your package will generally need to depend on a "
"particular version of xutils. Keeping track of these miscellaneous "
"dependencies can be annoying since they are dependent on how debhelper does "
"things, so debhelper offers a way to automate it."
msgstr ""
"debhelper は他のパッケージに依存するようなパッケージを作成することがありま"
"す。例えば、L<dh_installdebconf(1)> を使うと、ビルドしたパッケージは debconf "
"パッケージにも依存するようになります。あるいは L<dh_installxfonts(1)> を使う"
"と、特定のバージョンの xutils に依存することになります。これらの様々な依存関"
"係を追いかけるのは、debhelper がどのような処理を行うかによるために面倒なこと"
"になりがちです。そのため、debhelper は 自動的に依存関係を解決する機能を提供し"
"ます。"

#. type: textblock
#: debhelper.pod:765
msgid ""
"All commands of this type, besides documenting what dependencies may be "
"needed on their man pages, will automatically generate a substvar called B<"
"${misc:Depends}>. If you put that token into your F<debian/control> file, it "
"will be expanded to the dependencies debhelper figures you need."
msgstr ""
"他のパッケージに依存するようなパッケージを生成する debhelper コマンドは、何に"
"依存するかについて man ページに記載してある他に、B<${misc:Depends}> と呼ばれ"
"る変数を、自動的に生成した依存情報と置き換えます。もし F<debian/control> にこ"
"の変数を指定すれば、debhelper は必要とする依存関係を自動的に展開するようにな"
"ります。"

#. type: textblock
#: debhelper.pod:770
msgid ""
"This is entirely independent of the standard B<${shlibs:Depends}> generated "
"by L<dh_makeshlibs(1)>, and the B<${perl:Depends}> generated by "
"L<dh_perl(1)>.  You can choose not to use any of these, if debhelper's "
"guesses don't match reality."
msgstr ""
"この変数は、L<dh_makeshlibs(1)> により生成された標準の B<${shlibs:Depends}> "
"変数とはまったく関連を持ちません。また、L<dh_perl(1)> により生成された B<"
"${perl:Depends}> 変数も同様です。debhelper コマンドの推測が実状に合わない場合"
"は、これらを使わないようにすることも可能です。"

#. type: =head2
#: debhelper.pod:775
msgid "Package build directories"
msgstr "パッケージビルドディレクトリ"

#. type: textblock
#: debhelper.pod:777
msgid ""
"By default, all debhelper programs assume that the temporary directory used "
"for assembling the tree of files in a package is debian/I<package>."
msgstr ""
"デフォルトでは、すべての debhelper プログラムはパッケージに含めるファイル群を"
"まとめる一時ディレクトリとして debian/I<package> ディレクトリを使用します。"

#. type: textblock
#: debhelper.pod:780
msgid ""
"Sometimes, you might want to use some other temporary directory. This is "
"supported by the B<-P> flag. For example, \"B<dh_installdocs -Pdebian/tmp>"
"\", will use B<debian/tmp> as the temporary directory. Note that if you use "
"B<-P>, the debhelper programs can only be acting on a single package at a "
"time. So if you have a package that builds many binary packages, you will "
"need to also use the B<-p> flag to specify which binary package the "
"debhelper program will act on."
msgstr ""
"時折、別の一時ディレクトリを利用したくなる場合があるでしょう。この場合は、B<-"
"P> フラグを利用してください。例えば、\"B<dh_installdocs　-Pdebian/tmp>\" で"
"は B<debian/tmp> を一時ディレクトリとして利用できます。ただし、B<-P> を使う"
"と、debhelper プログラムは一度に 1 つのパッケージの処理しかできません。その"
"為、複数のバイナリパッケージを生成するような場合、どのバイナリパッケージに対"
"して debhelper が作用するかを指定するために B<-p> フラグを併用する必要があり"
"ます。"

#. type: =head2
#: debhelper.pod:788
msgid "udebs"
msgstr "udeb パッケージについて"

#. type: textblock
#: debhelper.pod:790
msgid ""
"Debhelper includes support for udebs. To create a udeb with debhelper, add "
"\"B<Package-Type: udeb>\" to the package's stanza in F<debian/control>.  "
"Debhelper will try to create udebs that comply with debian-installer policy, "
"by making the generated package files end in F<.udeb>, not installing any "
"documentation into a udeb, skipping over F<preinst>, F<postrm>, F<prerm>, "
"and F<config> scripts, etc."
msgstr ""
"debhelper は udeb もサポートしています。debhelper で udeb パッケージを作成す"
"るには、\"B<Package-Type: udeb>\" を F<debian/control> のパッケージ定義に加え"
"てください。debhelper は udeb ファイルを debian-installer ポリシーにあわせて"
"ビルドします。これは、パッケージの拡張子が F<.udeb> となるファイルで、いかな"
"るドキュメントや、F<preinst>, F<postrm>, F<prerm>, F<config> スクリプト等も省"
"いたものです。"

#. type: =head1
#: debhelper.pod:797
msgid "ENVIRONMENT"
msgstr "環境変数"

#. type: textblock
#: debhelper.pod:799
msgid ""
"The following environment variables can influence the behavior of "
"debhelper.  It is important to note that these must be actual environment "
"variables in order to function properly (not simply F<Makefile> variables). "
"To specify them properly in F<debian/rules>, be sure to \"B<export>\" them. "
"For example, \"B<export DH_VERBOSE>\"."
msgstr ""
"以下の環境変数は debhelper の振る舞いに影響を与えることができます。正しく動作"
"するためには、(単なる F<Makefile> 変数ではなく) 実際の環境変数である必要があ"
"ることに注意するのが重要です。これらを正しく F<debian/rules> で指定するには、"
"必ず \"B<export>\" してください。例えば \"B<export DH_VERBOSE>\" などとしま"
"す。"

#. type: =item
#: debhelper.pod:807
msgid "B<DH_VERBOSE>"
msgstr "B<DH_VERBOSE>"

#. type: textblock
#: debhelper.pod:809
msgid ""
"Set to B<1> to enable verbose mode. Debhelper will output every command it "
"runs. Also enables verbose build logs for some build systems like autoconf."
msgstr ""
"B<1> を指定すると冗長出力モードになります。debhelper は動作する全てのコマンド"
"について出力を行うようになります。また、autoconf のようなビルドシステムについ"
"ても冗長出力されたビルドログを有効にします。"

#. type: =item
#: debhelper.pod:812
msgid "B<DH_QUIET>"
msgstr "B<DH_QUIET>"

#. type: textblock
#: debhelper.pod:814
msgid ""
"Set to B<1> to enable quiet mode. Debhelper will not output commands calling "
"the upstream build system nor will dh print which subcommands are called and "
"depending on the upstream build system might make that more quiet, too.  "
"This makes it easier to spot important messages but makes the output quite "
"useless as buildd log.  Ignored if DH_VERBOSE is also set."
msgstr ""
"quiet モードを有効にするには B<1> を指定して下さい。debhelperは upstream のビ"
"ルドシステムの呼び出しコマンドや、dh がどのサブコマンドが呼び出されたのかも出"
"力しなくなり、upstream のビルドシステムによってはさらに静かになります。これは"
"重要なメッセージに注目するのが簡単になりますが、buildd のログとしては出力は極"
"めて使い物にならなくなります。DH_VERBOSE が同時にセットされていると無視されま"
"す。"

#. type: =item
#: debhelper.pod:821
msgid "B<DH_COMPAT>"
msgstr "B<DH_COMPAT>"

#. type: textblock
#: debhelper.pod:823
msgid ""
"Temporarily specifies what compatibility level debhelper should run at, "
"overriding any value in F<debian/compat>."
msgstr ""
"この環境変数は、debhelper をどの互換性レベルで実行するかを一時的に指定するも"
"のです。こちらを指定すると F<debian/compat> の値を上書きします。"

#. type: =item
#: debhelper.pod:826
msgid "B<DH_NO_ACT>"
msgstr "B<DH_NO_ACT>"

#. type: textblock
#: debhelper.pod:828
msgid "Set to B<1> to enable no-act mode."
msgstr "B<1> に設定すると、何もしない (no-act) モードになります。"

#. type: =item
#: debhelper.pod:830
msgid "B<DH_OPTIONS>"
msgstr "B<DH_OPTIONS>"

#. type: textblock
#: debhelper.pod:832
msgid ""
"Anything in this variable will be prepended to the command line arguments of "
"all debhelper commands."
msgstr ""
"この環境変数に指定したものは、すべての debhelper コマンドの末尾に指定されるよ"
"うになります。"

#. type: textblock
#: debhelper.pod:835
msgid ""
"When using L<dh(1)>, it can be passed options that will be passed on to each "
"debhelper command, which is generally better than using DH_OPTIONS."
msgstr ""
"L<dh(1)> を使えば、続いて呼び出される debhelper コマンドに指定したオプション"
"を渡すことができます。大抵の場合、こちらの方が DH_OPTIONS を使うよりも良い方"
"法です。"

#. type: =item
#: debhelper.pod:838
msgid "B<DH_ALWAYS_EXCLUDE>"
msgstr "B<DH_ALWAYS_EXCLUDE>"

#. type: textblock
#: debhelper.pod:840
msgid ""
"If set, this adds the value the variable is set to to the B<-X> options of "
"all commands that support the B<-X> option. Moreover, B<dh_builddeb> will "
"B<rm -rf> anything that matches the value in your package build tree."
msgstr ""
"こちらが設定されていると、B<-X> オプションをサポートするすべてのコマンドに対"
"し、B<-X> オプションの値として環境変数の値を指定します。さらに、"
"B<dh_builddeb> コマンドはビルドツリーの元で環境変数の値に基づくパターンにマッ"
"チするもの全部を B<rm -rf> するようになります。"

#. type: textblock
#: debhelper.pod:844
msgid ""
"This can be useful if you are doing a build from a CVS source tree, in which "
"case setting B<DH_ALWAYS_EXCLUDE=CVS> will prevent any CVS directories from "
"sneaking into the package you build. Or, if a package has a source tarball "
"that (unwisely) includes CVS directories, you might want to export "
"B<DH_ALWAYS_EXCLUDE=CVS> in F<debian/rules>, to make it take effect wherever "
"your package is built."
msgstr ""
"これは CVS ソースツリーからパッケージビルドをする場合に便利な場合があります。"
"例えば、B<DH_ALWAYS_EXCLUDE=CVS> を指定すれば、CVS ディレクトリがビルドの際に"
"検索されるのを防ぐことができます。あるいは、ソースの tarball にすでに CVS "
"ディレクトリが (愚かにも) 含まれている場合、F<debian/rules> で "
"B<DH_ALWAYS_EXCLUDE=CVS> 環境変数を export すれば、どこでパッケージをビルドし"
"ようとも効果を発揮するようになります。"

#. type: textblock
#: debhelper.pod:851
msgid ""
"Multiple things to exclude can be separated with colons, as in "
"B<DH_ALWAYS_EXCLUDE=CVS:.svn>"
msgstr ""
"除外したいものを複数指定したい場合は、B<DH_ALWAYS_EXCLUDE=CVS:.svn> のように"
"コロンで区切ってください。"

#. type: =head1
#: debhelper.pod:856 debhelper-obsolete-compat.pod:118 dh:1063 dh_auto_build:48
#: dh_auto_clean:51 dh_auto_configure:53 dh_auto_install:93 dh_auto_test:60
#: dh_bugfiles:131 dh_builddeb:192 dh_clean:175 dh_compress:252 dh_fixperms:148
#: dh_gconf:98 dh_gencontrol:167 dh_icons:73 dh_install:326
#: dh_installcatalogs:123 dh_installchangelogs:238 dh_installcron:76
#: dh_installdeb:215 dh_installdebconf:126 dh_installdirs:95 dh_installdocs:357
#: dh_installemacsen:135 dh_installexamples:110 dh_installifupdown:70
#: dh_installinfo:76 dh_installinit:331 dh_installlogcheck:79
#: dh_installlogrotate:51 dh_installman:264 dh_installmanpages:196
#: dh_installmenu:94 dh_installmime:61 dh_installmodules:107 dh_installpam:60
#: dh_installppp:66 dh_installudev:99 dh_installwm:115 dh_installxfonts:90
#: dh_link:146 dh_lintian:58 dh_listpackages:31 dh_makeshlibs:287
#: dh_md5sums:105 dh_movefiles:159 dh_perl:154 dh_prep:61 dh_shlibdeps:153
#: dh_strip:396 dh_testdir:54 dh_testroot:28 dh_usrlocal:116
#: dh_systemd_enable:264 dh_systemd_start:246
msgid "SEE ALSO"
msgstr "参照"

#. type: =item
#: debhelper.pod:860
msgid "F</usr/share/doc/debhelper/examples/>"
msgstr "F</usr/share/doc/debhelper/examples/>"

#. type: textblock
#: debhelper.pod:862
msgid "A set of example F<debian/rules> files that use debhelper."
msgstr ""
"debhelper を使うときの F<debian/rules> ファイルの例が格納されています。"

#. type: =item
#: debhelper.pod:864
msgid "L<http://joeyh.name/code/debhelper/>"
msgstr "L<http://joeyh.name/code/debhelper/>"

#. type: textblock
#: debhelper.pod:866
msgid "Debhelper web site."
msgstr "Debhelper の Web サイトです。"

#. type: =head1
#: debhelper.pod:870 dh:1069 dh_auto_build:54 dh_auto_clean:57
#: dh_auto_configure:59 dh_auto_install:99 dh_auto_test:66 dh_bugfiles:139
#: dh_builddeb:198 dh_clean:181 dh_compress:258 dh_fixperms:154 dh_gconf:104
#: dh_gencontrol:173 dh_icons:79 dh_install:332 dh_installcatalogs:129
#: dh_installchangelogs:244 dh_installcron:82 dh_installdeb:221
#: dh_installdebconf:132 dh_installdirs:101 dh_installdocs:363
#: dh_installemacsen:142 dh_installexamples:116 dh_installifupdown:76
#: dh_installinfo:82 dh_installlogcheck:85 dh_installlogrotate:57
#: dh_installman:270 dh_installmanpages:202 dh_installmenu:102
#: dh_installmime:67 dh_installmodules:113 dh_installpam:66 dh_installppp:72
#: dh_installudev:105 dh_installwm:121 dh_installxfonts:96 dh_link:152
#: dh_lintian:66 dh_listpackages:37 dh_makeshlibs:293 dh_md5sums:111
#: dh_movefiles:165 dh_perl:160 dh_prep:67 dh_shlibdeps:159 dh_strip:402
#: dh_testdir:60 dh_testroot:34 dh_usrlocal:122
msgid "AUTHOR"
msgstr "作者"

#. type: textblock
#: debhelper.pod:872 dh:1071 dh_auto_build:56 dh_auto_clean:59
#: dh_auto_configure:61 dh_auto_install:101 dh_auto_test:68 dh_builddeb:200
#: dh_clean:183 dh_compress:260 dh_fixperms:156 dh_gencontrol:175
#: dh_install:334 dh_installchangelogs:246 dh_installcron:84 dh_installdeb:223
#: dh_installdebconf:134 dh_installdirs:103 dh_installdocs:365
#: dh_installemacsen:144 dh_installexamples:118 dh_installifupdown:78
#: dh_installinfo:84 dh_installinit:339 dh_installlogrotate:59
#: dh_installman:272 dh_installmanpages:204 dh_installmenu:104
#: dh_installmime:69 dh_installmodules:115 dh_installpam:68 dh_installppp:74
#: dh_installudev:107 dh_installwm:123 dh_installxfonts:98 dh_link:154
#: dh_listpackages:39 dh_makeshlibs:295 dh_md5sums:113 dh_movefiles:167
#: dh_prep:69 dh_shlibdeps:161 dh_strip:404 dh_testdir:62 dh_testroot:36
msgid "Joey Hess <joeyh@debian.org>"
msgstr "Joey Hess <joeyh@debian.org>"

#. type: textblock
#: debhelper-obsolete-compat.pod:3
msgid "debhelper-obsolete-compat - List of no longer supported compat levels"
msgstr "debhelper-obsolete-compat - サポートされなくなった互換性レベル一覧"

#. type: textblock
#: debhelper-obsolete-compat.pod:7
msgid ""
"This document contains the upgrade guidelines from all compat levels which "
"are no longer supported.  Accordingly it is mostly for historical purposes "
"and to assist people upgrading from a non-supported compat level to a "
"supported level."
msgstr ""
"このドキュメントには、もはやサポートされていない全ての互換性レベルからのアッ"
"プグレードに対するガイドラインが含まれています。従って、殆どが当時の目的につ"
"いての説明と、サポートされていない互換性レベルからサポートされているレベルへ"
"のアップグレードを支援するためのものになります。"

#. type: textblock
#: debhelper-obsolete-compat.pod:12
msgid "For upgrades from supported compat levels, please see L<debhelper(7)>."
msgstr ""
"サポートされている互換性レベルからのアップグレードについては、"
"L<debhelper(7)> を参照して下さい。"

#. type: =head1
#: debhelper-obsolete-compat.pod:14
msgid "UPGRADE LIST FOR COMPAT LEVELS"
msgstr "互換性レベルの更新一覧"

#. type: textblock
#: debhelper-obsolete-compat.pod:16
msgid ""
"The following is the list of now obsolete compat levels and their changes."
msgstr "以下は過去のものとなった互換性レベルとその変更の一覧です。"

#. type: =item
#: debhelper-obsolete-compat.pod:21
msgid "v1"
msgstr "v1"

#. type: textblock
#: debhelper-obsolete-compat.pod:23
msgid ""
"This is the original debhelper compatibility level, and so it is the default "
"one. In this mode, debhelper will use F<debian/tmp> as the package tree "
"directory for the first binary package listed in the control file, while "
"using debian/I<package> for all other packages listed in the F<control> file."
msgstr ""
"これは debhelper が元来持つ互換性レベルで、これがデフォルトです。このモードで"
"は、debhelper はF<debian/tmp> を、control ファイルの最初に記載されているバイ"
"ナリパッケージのビルドディレクトリとして利用しようとします。また、debian/"
"I<package> を F<control> 内に指定されている全パッケージに対して適用します。"

#. type: =item
#: debhelper-obsolete-compat.pod:30
msgid "v2"
msgstr "v2"

#. type: textblock
#: debhelper-obsolete-compat.pod:32
msgid ""
"In this mode, debhelper will consistently use debian/I<package> as the "
"package tree directory for every package that is built."
msgstr ""
"このモードを指定すると、常に debian/I<package> を全パッケージのビルドディレク"
"トリとして利用するようになります。"

#. type: =item
#: debhelper-obsolete-compat.pod:37
msgid "v3"
msgstr "v3"

#. type: textblock
#: debhelper-obsolete-compat.pod:39
msgid "This mode works like v2, with the following additions:"
msgstr ""
"このモードは v2 のモードと同じ動作をしますが、以下の追加機能があります:"

#. type: textblock
#: debhelper-obsolete-compat.pod:45
msgid ""
"Debhelper config files support globbing via B<*> and B<?>, when appropriate. "
"To turn this off and use those characters raw, just prefix with a backslash."
msgstr ""
"debhelper の設定ファイルは、B<*> や B<?> のワイルドカードによるファイル名指定"
"が利用できます。この機能を無効にし、これらワイルドカード文字をそのままの文字"
"として扱うには、バックスラッシュを文字の前に置いてください。"

#. type: textblock
#: debhelper-obsolete-compat.pod:50
msgid ""
"B<dh_makeshlibs> makes the F<postinst> and F<postrm> scripts call "
"B<ldconfig>."
msgstr ""
"B<dh_makeshlibs> により、F<postinst> や F<postrm> スクリプトが B<ldconfig> を"
"呼び出すようになっています。"

#. type: textblock
#: debhelper-obsolete-compat.pod:54
msgid ""
"Every file in F<etc/> is automatically flagged as a conffile by "
"B<dh_installdeb>."
msgstr ""
"B<dh_installdeb> は、F<etc/> 以下のすべてのファイルを自動的に conffile として"
"扱います。"

#. type: =item
#: debhelper-obsolete-compat.pod:60
msgid "v4"
msgstr "v4"

#. type: textblock
#: debhelper-obsolete-compat.pod:62
msgid "Changes from v3 are:"
msgstr "v3 からの変更点:"

#. type: textblock
#: debhelper-obsolete-compat.pod:68
msgid ""
"B<dh_makeshlibs -V> will not include the Debian part of the version number "
"in the generated dependency line in the shlibs file."
msgstr ""
"B<dh_makeshlibs -V> は、shlibs ファイル内の生成された依存関係を示す行のバー"
"ジョン番号について、debian リビジョンを含めないようになりました。"

#. type: textblock
#: debhelper-obsolete-compat.pod:73
msgid ""
"You are encouraged to put the new B<${misc:Depends}> into F<debian/control> "
"to supplement the B<${shlibs:Depends}> field."
msgstr ""
"F<debian/control> へ、B<${shlibs:Depends}> の他に B<${misc:Depends}> を新たに"
"指定するのが推奨されるようになりました。"

#. type: textblock
#: debhelper-obsolete-compat.pod:78
msgid ""
"B<dh_fixperms> will make all files in F<bin/> directories and in F<etc/init."
"d> executable."
msgstr ""
"B<dh_fixperms> により、F<bin/> ディレクトリ及び F <etc/init.d> 以下にあるすべ"
"てのファイルに実行権限が付与されるようになりました。"

#. type: textblock
#: debhelper-obsolete-compat.pod:83
msgid "B<dh_link> will correct existing links to conform with policy."
msgstr ""
"B<dh_link>は、既存のリンクであってもポリシーに合わせ、リンクを修正するように"
"なりました。"

#. type: textblock
#: debhelper-obsolete-compat.pod:93
msgid "Changes from v4 are:"
msgstr "v4 からの変更点:"

#. type: textblock
#: debhelper-obsolete-compat.pod:99
msgid "Comments are ignored in debhelper config files."
msgstr "debhelper 設定ファイルでのコメントは無視されるようになりました。"

#. type: textblock
#: debhelper-obsolete-compat.pod:103
msgid ""
"B<dh_strip --dbg-package> now specifies the name of a package to put "
"debugging symbols in, not the packages to take the symbols from."
msgstr ""
"B<dh_strip --dbg-package> により、デバッグ用シンボルテーブルに対してパッケー"
"ジの名前を指定できるようになりました。以前はデバッグ用シンボルテーブルから"
"パッケージの名前を取り出していました。"

#. type: textblock
#: debhelper-obsolete-compat.pod:108
msgid "B<dh_installdocs> skips installing empty files."
msgstr "B<dh_installdocs> は空ファイルのインストールを飛ばします。"

#. type: textblock
#: debhelper-obsolete-compat.pod:112
msgid "B<dh_install> errors out if wildcards expand to nothing."
msgstr ""
"B<dh_install> は、ワイルドカードに該当するファイルが無い時はエラーを出力する"
"ようになりました。"

#. type: textblock
#: debhelper-obsolete-compat.pod:120 dh:1065 dh_auto_build:50 dh_auto_clean:53
#: dh_auto_configure:55 dh_auto_install:95 dh_auto_test:62 dh_builddeb:194
#: dh_clean:177 dh_compress:254 dh_fixperms:150 dh_gconf:100 dh_gencontrol:169
#: dh_install:328 dh_installcatalogs:125 dh_installchangelogs:240
#: dh_installcron:78 dh_installdeb:217 dh_installdebconf:128 dh_installdirs:97
#: dh_installdocs:359 dh_installexamples:112 dh_installifupdown:72
#: dh_installinfo:78 dh_installinit:333 dh_installlogcheck:81
#: dh_installlogrotate:53 dh_installman:266 dh_installmanpages:198
#: dh_installmime:63 dh_installmodules:109 dh_installpam:62 dh_installppp:68
#: dh_installudev:101 dh_installwm:117 dh_installxfonts:92 dh_link:148
#: dh_listpackages:33 dh_makeshlibs:289 dh_md5sums:107 dh_movefiles:161
#: dh_perl:156 dh_prep:63 dh_strip:398 dh_testdir:56 dh_testroot:30
#: dh_usrlocal:118 dh_systemd_start:248
msgid "L<debhelper(7)>"
msgstr "L<debhelper(7)>"

#. type: =head1
#: debhelper-obsolete-compat.pod:122 dh_installinit:337 dh_systemd_enable:268
#: dh_systemd_start:250
msgid "AUTHORS"
msgstr "作者"

#. type: textblock
#: debhelper-obsolete-compat.pod:124
msgid "Niels Thykier <niels@thykier.net>"
msgstr "Niels Thykier <niels@thykier.net>"

#. type: textblock
#: debhelper-obsolete-compat.pod:126
msgid "Joey Hess"
msgstr "Joey Hess"

#. type: textblock
#: dh:5
msgid "dh - debhelper command sequencer"
msgstr "dh - debhelper コマンドシーケンサー"

#. type: textblock
#: dh:15
msgid ""
"B<dh> I<sequence> [B<--with> I<addon>[B<,>I<addon> ...]] [B<--list>] "
"[S<I<debhelper options>>]"
msgstr ""
"B<dh> I<sequence> [B<--with> I<addon>[B<,>I<addon> ...]] [B<--list>] "
"[S<I<debhelper オプション>>]"

#. type: textblock
#: dh:19
msgid ""
"B<dh> runs a sequence of debhelper commands. The supported I<sequence>s "
"correspond to the targets of a F<debian/rules> file: B<build-arch>, B<build-"
"indep>, B<build>, B<clean>, B<install-indep>, B<install-arch>, B<install>, "
"B<binary-arch>, B<binary-indep>, and B<binary>."
msgstr ""
"B<dh> は一連の debhelper コマンドを実行します。F<debian/rules> ファイルに記載"
"されたターゲットに対応する I<sequence>をサポートします。サポートするターゲッ"
"ト: B<build-arch>, B<build-indep>, B<build>, B<clean>, B<install-indep>, "
"B<install-arch>, B<install>, B<binary-arch>, B<binary-indep>, B<binary> で"
"す。"

#. type: =head1
#: dh:24
msgid "OVERRIDE TARGETS"
msgstr "override ターゲット"

#. type: textblock
#: dh:26
msgid ""
"A F<debian/rules> file using B<dh> can override the command that is run at "
"any step in a sequence, by defining an override target."
msgstr ""
"B<dh> が利用する F<debian/rules> にて、override ターゲットを指定することで、"
"呼び出される一連の処理途中で動作を変更できます。"

# Build-Depend -> Build-Depends
#. type: textblock
#: dh:29
msgid ""
"To override I<dh_command>, add a target named B<override_>I<dh_command> to "
"the rules file. When it would normally run I<dh_command>, B<dh> will instead "
"call that target. The override target can then run the command with "
"additional options, or run entirely different commands instead. See examples "
"below."
msgstr ""
"ターゲット I<dh_command> を変更するためには、B<override_>I<dh_command> という"
"ターゲットを rule ファイルに記載します。こちらが指定されていると、"
"I<dh_command> が動作する代わりに B<override_>I<dh_command> ターゲットを呼び出"
"します。override ターゲットでは、コマンドにオプションを追加したり、コマンド全"
"てを置き換えたりできます。後に例を挙げます。"

# Build-Depend"s"
#. type: textblock
#: dh:35
msgid ""
"Override targets can also be defined to run only when building architecture "
"dependent or architecture independent packages.  Use targets with names like "
"B<override_>I<dh_command>B<-arch> and B<override_>I<dh_command>B<-indep>.  "
"(Note that to use this feature, you should Build-Depend on debhelper 8.9.7 "
"or above.)"
msgstr ""
"アーキテクチャ依存パッケージを作るときのみ、あるいはアーキテクチャ非依存パッ"
"ケージを作るときのみ動作するように override ターゲットを定義することもできま"
"す。その場合、B<override_>I<dh_command>B<-arch> や、"
"B<override_>I<dh_command>B<-indep> を使ってください (なお、この機能を使うに"
"は、Build-Depends 行で debhelper バージョン 8.9.7 以上を指定する必要がありま"
"す)。"

#. type: =head1
#: dh:42 dh_auto_build:29 dh_auto_clean:31 dh_auto_configure:32
#: dh_auto_install:44 dh_auto_test:32 dh_bugfiles:51 dh_builddeb:26 dh_clean:45
#: dh_compress:50 dh_fixperms:33 dh_gconf:40 dh_gencontrol:35 dh_icons:31
#: dh_install:71 dh_installcatalogs:51 dh_installchangelogs:60
#: dh_installcron:41 dh_installdebconf:62 dh_installdirs:40 dh_installdocs:76
#: dh_installemacsen:54 dh_installexamples:33 dh_installifupdown:40
#: dh_installinfo:32 dh_installinit:60 dh_installlogcheck:43
#: dh_installlogrotate:23 dh_installman:62 dh_installmanpages:41
#: dh_installmenu:45 dh_installmodules:39 dh_installpam:32 dh_installppp:36
#: dh_installudev:33 dh_installwm:35 dh_link:54 dh_makeshlibs:50 dh_md5sums:29
#: dh_movefiles:39 dh_perl:32 dh_prep:27 dh_shlibdeps:27 dh_strip:36
#: dh_testdir:24 dh_usrlocal:39 dh_systemd_enable:56 dh_systemd_start:31
msgid "OPTIONS"
msgstr "オプション"

#. type: =item
#: dh:46
msgid "B<--with> I<addon>[B<,>I<addon> ...]"
msgstr "B<--with> I<addon>[B<,>I<addon> ...]"

#. type: textblock
#: dh:48
msgid ""
"Add the debhelper commands specified by the given addon to appropriate "
"places in the sequence of commands that is run. This option can be repeated "
"more than once, or multiple addons can be listed, separated by commas.  This "
"is used when there is a third-party package that provides debhelper "
"commands. See the F<PROGRAMMING> file for documentation about the sequence "
"addon interface."
msgstr ""
"一連のコマンド中の適切な位置で実行するアドオンを、debhelper コマンドへ指定し"
"ます。このオプションは繰り返し指定することもできますし、複数のアドオンをカン"
"マ区切りで列挙して指定できます。このオプションは debhelper コマンドを提供する"
"サードパーティ製パッケージと共に利用する時に使います。F<PROGRAMMING> ファイル"
"に、一連のアドオン用インターフェースについてのドキュメントがあります。"

#. type: =item
#: dh:55
msgid "B<--without> I<addon>"
msgstr "B<--without> I<addon>"

#. type: textblock
#: dh:57
msgid ""
"The inverse of B<--with>, disables using the given addon. This option can be "
"repeated more than once, or multiple addons to disable can be listed, "
"separated by commas."
msgstr ""
"B<--with> とは逆に、指定されたアドオンを無効にします。このオプションは繰り返"
"し指定することもできますし、アドオン名をカンマ区切りで指定もできます。"

#. type: textblock
#: dh:63
msgid "List all available addons."
msgstr "利用可能なアドオン一覧を表示する。"

#. type: textblock
#: dh:65
msgid "This can be used without a F<debian/compat> file."
msgstr "これは F<debian/compat> ファイル無しで利用できます。"

#. type: textblock
#: dh:69
msgid ""
"Prints commands that would run for a given sequence, but does not run them."
msgstr ""
"指定された一連の処理でのコマンドを表示しますが、表示だけして実際にはコマンド"
"は実行しません。"

#. type: textblock
#: dh:71
msgid ""
"Note that dh normally skips running commands that it knows will do nothing.  "
"With --no-act, the full list of commands in a sequence is printed."
msgstr ""
"通常、dh は何も実行しないであろうとわかっている動作コマンドをスキップすること"
"に注意してください。--no-act を指定すると、一連の動作内でのコマンド一覧をすべ"
"て出力します。"

#. type: textblock
#: dh:76
msgid ""
"Other options passed to B<dh> are passed on to each command it runs. This "
"can be used to set an option like B<-v> or B<-X> or B<-N>, as well as for "
"more specialised options."
msgstr ""
"B<dh> に渡された他のオプションは、実行される各コマンドにも渡されます。これ"
"は、B<-v>, B<-X>, B<-N> のようなオプションをセットするのに利用できます。ま"
"た、他の特別なオプションについても同様となります。"

#. type: =head1
#: dh:80 dh_installdocs:125 dh_link:76 dh_makeshlibs:107 dh_shlibdeps:75
msgid "EXAMPLES"
msgstr "使用例"

#. type: textblock
#: dh:82
msgid ""
"To see what commands are included in a sequence, without actually doing "
"anything:"
msgstr ""
"コマンドを実際には動作させず、一連の動作でどのコマンドが実行されるかを見る:"

#. type: verbatim
#: dh:85
#, no-wrap
msgid ""
"\tdh binary-arch --no-act\n"
"\n"
msgstr ""
"\tdh binary-arch --no-act\n"
"\n"

#. type: textblock
#: dh:87
msgid ""
"This is a very simple rules file, for packages where the default sequences "
"of commands work with no additional options."
msgstr ""
"以下は非常にシンプルな rules ファイルです。ここではパッケージに対して追加オプ"
"ション無しでデフォルトのコマンド群が呼び出されます。"

#. type: verbatim
#: dh:90 dh:111 dh:124
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@\n"
"\n"
msgstr ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@\n"
"\n"

#. type: textblock
#: dh:94
msgid ""
"Often you'll want to pass an option to a specific debhelper command. The "
"easy way to do with is by adding an override target for that command."
msgstr ""
"特定の debhelper コマンドへオプションを渡したい事がよくあります。これを簡単に"
"行う方法は、そのコマンドへ override を追加することです。"

#. type: verbatim
#: dh:97 dh:182 dh:193
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@\n"
"\t\n"
msgstr ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@\n"
"\t\n"

#. type: verbatim
#: dh:101
#, no-wrap
msgid ""
"\toverride_dh_strip:\n"
"\t\tdh_strip -Xfoo\n"
"\t\n"
msgstr ""
"\toverride_dh_strip:\n"
"\t\tdh_strip -Xfoo\n"
"\t\n"

#. type: verbatim
#: dh:104
#, no-wrap
msgid ""
"\toverride_dh_auto_configure:\n"
"\t\tdh_auto_configure -- --with-foo --disable-bar\n"
"\n"
msgstr ""
"\toverride_dh_auto_configure:\n"
"\t\tdh_auto_configure -- --with-foo --disable-bar\n"
"\n"

#. type: textblock
#: dh:107
msgid ""
"Sometimes the automated L<dh_auto_configure(1)> and L<dh_auto_build(1)> "
"can't guess what to do for a strange package. Here's how to avoid running "
"either and instead run your own commands."
msgstr ""
"L<dh_auto_configure(1)> や L<dh_auto_build(1)> が処理をする際、何を処理すれば"
"よいか判断できないような変わったパッケージがたまに存在します。ここでは、"
"L<dh_auto_configure(1)> や L<dh_auto_build(1)> を実行せずに、代わりのコマンド"
"を実行させる方法を示します。 "

#. type: verbatim
#: dh:115
#, no-wrap
msgid ""
"\toverride_dh_auto_configure:\n"
"\t\t./mondoconfig\n"
"\n"
msgstr ""
"\toverride_dh_auto_configure:\n"
"\t\t./mondoconfig\n"
"\n"

#. type: verbatim
#: dh:118
#, no-wrap
msgid ""
"\toverride_dh_auto_build:\n"
"\t\tmake universe-explode-in-delight\n"
"\n"
msgstr ""
"\toverride_dh_auto_build:\n"
"\t\tmake universe-explode-in-delight\n"
"\n"

#. type: textblock
#: dh:121
msgid ""
"Another common case is wanting to do something manually before or after a "
"particular debhelper command is run."
msgstr ""
"別のよくある例として、特定の debhelper コマンドが実行される前後で手動で何かを"
"したい場合があります。"

#. type: verbatim
#: dh:128
#, no-wrap
msgid ""
"\toverride_dh_fixperms:\n"
"\t\tdh_fixperms\n"
"\t\tchmod 4755 debian/foo/usr/bin/foo\n"
"\n"
msgstr ""
"\toverride_dh_fixperms:\n"
"\t\tdh_fixperms\n"
"\t\tchmod 4755 debian/foo/usr/bin/foo\n"
"\n"

#. type: textblock
#: dh:132
msgid ""
"Python tools are not run by dh by default, due to the continual change in "
"that area. (Before compatibility level v9, dh does run B<dh_pysupport>.)  "
"Here is how to use B<dh_python2>."
msgstr ""
"この分野の状況が常に変わっているため、デフォルトでは python 関連ツール は dh "
"によって実行されません (互換性レベル v9 未満であれば、dh は B<dh_pysupport> "
"を実行します)。ここでは、B<dh_python2> をどのようにして使うかを示します。"

#. type: verbatim
#: dh:136
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --with python2\n"
"\n"
msgstr ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --with python2\n"
"\n"

#. type: textblock
#: dh:140
msgid ""
"Here is how to force use of Perl's B<Module::Build> build system, which can "
"be necessary if debhelper wrongly detects that the package uses MakeMaker."
msgstr ""
"こちらは Perl による B<Module::Build> ビルドシステムを強制的に使う方法です。"
"これは、debhelper が誤ってパッケージが MakeMaker を使っていると認識する場合に"
"必要となります。"

#. type: verbatim
#: dh:144
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --buildsystem=perl_build\n"
"\n"
msgstr ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --buildsystem=perl_build\n"
"\n"

#. type: textblock
#: dh:148
msgid ""
"Here is an example of overriding where the B<dh_auto_>I<*> commands find the "
"package's source, for a package where the source is located in a "
"subdirectory."
msgstr ""
"以下に B<dh_auto_>I<*> コマンドがどこにパッケージソースがあるかを変更する例を"
"載せます。これはサブディレクトリにソースが存在するようなパッケージで使いま"
"す。"

#. type: verbatim
#: dh:152
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --sourcedirectory=src\n"
"\n"
msgstr ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --sourcedirectory=src\n"
"\n"

#. type: textblock
#: dh:156
msgid ""
"And here is an example of how to tell the B<dh_auto_>I<*> commands to build "
"in a subdirectory, which will be removed on B<clean>."
msgstr ""
"B<dh_auto_>I<*> にサブディレクトリでビルドするように指定する方法を以下に示し"
"ます。こちらを指定すると、B<clean> 処理でこれらディレクトリが取り除かれるよう"
"になります:"

#. type: verbatim
#: dh:159
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --builddirectory=build\n"
"\n"
msgstr ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --builddirectory=build\n"
"\n"

#. type: textblock
#: dh:163
msgid ""
"If your package can be built in parallel, please either use compat 10 or "
"pass B<--parallel> to dh. Then B<dpkg-buildpackage -j> will work."
msgstr ""
"パッケージが並列ビルド可能であれば、互換性レベル 10 を使うか dh に B<--"
"parallel> を指定して下さい。すると B<dpkg-buildpackage -j> が有効になります。"

#. type: verbatim
#: dh:166
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --parallel\n"
"\n"
msgstr ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --parallel\n"
"\n"

#. type: textblock
#: dh:170
msgid ""
"If your package cannot be built reliably while using multiple threads, "
"please pass B<--no-parallel> to dh (or the relevant B<dh_auto_>I<*> command):"
msgstr ""
"パッケージが複数スレッドを使うと安定してビルド出来ない場合は、dh (あるいは関"
"連する B<dh_auto_>I<*> コマンド)に B<--no-parallel> を指定して下さい。"

#. type: verbatim
#: dh:175
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --no-parallel\n"
"\n"
msgstr ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --no-parallel\n"
"\n"

#. type: textblock
#: dh:179
msgid ""
"Here is a way to prevent B<dh> from running several commands that you don't "
"want it to run, by defining empty override targets for each command."
msgstr ""
"ここでは、B<dh> に、実行してほしくないコマンドを実行させないようにする方法を"
"示します。その場合、それらのコマンドに対する override ターゲットを空にするこ"
"とにより行います。"

#. type: verbatim
#: dh:186
#, no-wrap
msgid ""
"\t# Commands not to run:\n"
"\toverride_dh_auto_test override_dh_compress override_dh_fixperms:\n"
"\n"
msgstr ""
"\t# 実行させたくないコマンド:\n"
"\toverride_dh_auto_test override_dh_compress override_dh_fixperms:\n"
"\n"

#. type: textblock
#: dh:189
msgid ""
"A long build process for a separate documentation package can be separated "
"out using architecture independent overrides.  These will be skipped when "
"running build-arch and binary-arch sequences."
msgstr ""
"ドキュメントパッケージを作成するのに時間がかかる場合があります。この場合、"
"アーキテクチャ非依存用の override ターゲットを使ってビルドを分離することがで"
"きます。こうすると、build-arch や binary-arch を実行するとき、ドキュメント"
"パッケージのビルドが省略されます。"

#. type: verbatim
#: dh:197
#, no-wrap
msgid ""
"\toverride_dh_auto_build-indep:\n"
"\t\t$(MAKE) -C docs\n"
"\n"
msgstr ""
"\toverride_dh_auto_build-indep:\n"
"\t\t$(MAKE) -C docs\n"
"\n"

#. type: verbatim
#: dh:200
#, no-wrap
msgid ""
"\t# No tests needed for docs\n"
"\toverride_dh_auto_test-indep:\n"
"\n"
msgstr ""
"\t# doc ターゲット実行時はテストは不要\n"
"\toverride_dh_auto_test-indep:\n"
"\n"

#. type: verbatim
#: dh:203
#, no-wrap
msgid ""
"\toverride_dh_auto_install-indep:\n"
"\t\t$(MAKE) -C docs install\n"
"\n"
msgstr ""
"\toverride_dh_auto_install-indep:\n"
"\t\t$(MAKE) -C docs install\n"
"\n"

#. type: textblock
#: dh:206
msgid ""
"Adding to the example above, suppose you need to chmod a file, but only when "
"building the architecture dependent package, as it's not present when "
"building only documentation."
msgstr ""
"上の例に加え、ファイルに chmod を実行しなければならないがそれはアーキテクチャ"
"依存パッケージをビルドする際のみ必要で、ドキュメントのみをビルドする時には実"
"行しないとしたらどうなるでしょうか。"

#. type: verbatim
#: dh:210
#, no-wrap
msgid ""
"\toverride_dh_fixperms-arch:\n"
"\t\tdh_fixperms\n"
"\t\tchmod 4755 debian/foo/usr/bin/foo\n"
"\n"
msgstr ""
"\toverride_dh_fixperms-arch:\n"
"\t\tdh_fixperms\n"
"\t\tchmod 4755 debian/foo/usr/bin/foo\n"
"\n"

#. type: =head1
#: dh:214
msgid "INTERNALS"
msgstr "内部動作"

#. type: textblock
#: dh:216
msgid ""
"If you're curious about B<dh>'s internals, here's how it works under the "
"hood."
msgstr ""
"B<dh> の内部動作に興味がある人向けに、以下に内部でどのように動作しているのか"
"を記載します。"

#. type: textblock
#: dh:218
msgid ""
"In compat 10 (or later), B<dh> creates a stamp file F<debian/debhelper-build-"
"stamp> after the build step(s) are complete to avoid re-running them.  "
"Inside an override target, B<dh_*> commands will create a log file F<debian/"
"package.debhelper.log> to keep track of which packages the command(s) have "
"been run for.  These log files are then removed once the override target is "
"complete."
msgstr ""
"互換性レベル 10 (とそれ以降) では、B<dh> はビルド工程の完了後、再動作を避ける"
"ためにスタンプファイル F<debian/debhelper-build-stamp> を作成します。"
"override ターゲット内では、B<dh_*> コマンドはどのパッケージに対してコマンドが"
"実行されたのか記録を取るためにログファイル F<debian/package.debhelper.log> を"
"生成します。これらのログファイルは override ターゲットが完了した際に削除され"
"ます。"

#. type: textblock
#: dh:225
msgid ""
"In compat 9 or earlier, each debhelper command will record when it's "
"successfully run in F<debian/package.debhelper.log>. (Which B<dh_clean> "
"deletes.) So B<dh> can tell which commands have already been run, for which "
"packages, and skip running those commands again."
msgstr ""
"互換性レベル 9 とそれ以前では、各 debhelper コマンドは F<debian/package."
"debhelper.log> に実行がうまく行ったものを記録します (これは B<dh_clean> が消"
"去します)。これにより、B<dh> は既にどのコマンドが実行されたか、あるいはどの"
"パッケージに対して実行されたか、何のコマンドを再びスキップすればよいのかがわ"
"かります。"

#. type: textblock
#: dh:230
msgid ""
"Each time B<dh> is run (in compat 9 or earlier), it examines the log, and "
"finds the last logged command that is in the specified sequence. It then "
"continues with the next command in the sequence. The B<--until>, B<--"
"before>, B<--after>, and B<--remaining> options can override this behavior "
"(though they were removed in compat 10)."
msgstr ""
"(互換性レベル 9 とそれ以前では) B<dh> が動作すると、ログを検査し、指定された"
"一連の処理にてどんなコマンドが最後に実行されたと記録されているかを調べます。"
"そして、次に実行すべきコマンドを実行します。 B<--until>, B<--before>, B<--"
"after>, B<--remaining> オプションにより、この振る舞いを変更できます (ただし、"
"互換性レベル 10 ではこれらは削除されています)。"

#. type: textblock
#: dh:236
msgid ""
"A sequence can also run dependent targets in debian/rules.  For example, the "
"\"binary\" sequence runs the \"install\" target."
msgstr ""
"dh に処理の流れの名前を指定することにより、debian/rules に記載した依存関係に"
"あるターゲットも実行されます。例えば、\"binary\" という処理の流れを指定する"
"と、\"install\" ターゲットも実行されます。"

#. type: textblock
#: dh:239
msgid ""
"B<dh> uses the B<DH_INTERNAL_OPTIONS> environment variable to pass "
"information through to debhelper commands that are run inside override "
"targets. The contents (and indeed, existence) of this environment variable, "
"as the name might suggest, is subject to change at any time."
msgstr ""
"B<dh> は、B<DH_INTERNAL_OPTIONS> 環境変数をチェックし、override ターゲットの"
"中で実行される debhelper コマンドに情報を渡します。この環境変数に記載されてい"
"る内容は (実際には環境変数が存在していると) 、その環境変数の名前が示唆すると"
"おり、どの時点でも debhelper コマンドの動作に影響を与えます。"

#. type: textblock
#: dh:244
msgid ""
"Commands in the B<build-indep>, B<install-indep> and B<binary-indep> "
"sequences are passed the B<-i> option to ensure they only work on "
"architecture independent packages, and commands in the B<build-arch>, "
"B<install-arch> and B<binary-arch> sequences are passed the B<-a> option to "
"ensure they only work on architecture dependent packages."
msgstr ""
"B<build-indep>, B<install-indep>, B<binary-indep> の一連の処理に記載されてい"
"るコマンドには、アーキテクチャ非依存パッケージをビルドする時にだけ確実に作用"
"するように B<-i> オプションを使って情報が引き渡されます。B<build-arch>, "
"B<install-arch>, B<binary-arch> の一連の処理に対しては、B<-a> にて引き渡さ"
"れ、アーキテクチャ依存パッケージにのみ確実に作用するように動作します。 "

#. type: =head1
#: dh:250
msgid "DEPRECATED OPTIONS"
msgstr "廃止されたオプション"

#. type: textblock
#: dh:252
msgid ""
"The following options are deprecated. It's much better to use override "
"targets instead.  They are B<not> available in compat 10."
msgstr ""
"以下のオプションは廃止されました。代わりに override ターゲットを使う事を強く"
"推奨します。互換性レベル 10 では利用B<できません>。"

#. type: =item
#: dh:258
msgid "B<--until> I<cmd>"
msgstr "B<--until> I<cmd>"

#. type: textblock
#: dh:260
msgid "Run commands in the sequence until and including I<cmd>, then stop."
msgstr ""
"処理中、I<cmd> で指定されたコマンドに遭遇するまで実行し、最後に I<cmd> を実行"
"して停止します。"

#. type: =item
#: dh:262
msgid "B<--before> I<cmd>"
msgstr "B<--before> I<cmd>"

#. type: textblock
#: dh:264
msgid "Run commands in the sequence before I<cmd>, then stop."
msgstr "I<cmd> で指定されたコマンドまで実行して停止します。"

#. type: =item
#: dh:266
msgid "B<--after> I<cmd>"
msgstr "B<--after> I<cmd>"

#. type: textblock
#: dh:268
msgid "Run commands in the sequence that come after I<cmd>."
msgstr "I<cmd> で指定されたコマンドに続いて一連のコマンドを実行します。"

#. type: =item
#: dh:270
msgid "B<--remaining>"
msgstr "B<--remaining>"

#. type: textblock
#: dh:272
msgid "Run all commands in the sequence that have yet to be run."
msgstr "一連の処理のうち、未だ実行していないコマンドを実行します。"

#. type: textblock
#: dh:276
msgid ""
"In the above options, I<cmd> can be a full name of a debhelper command, or a "
"substring. It'll first search for a command in the sequence exactly matching "
"the name, to avoid any ambiguity. If there are multiple substring matches, "
"the last one in the sequence will be used."
msgstr ""
"以上のオプションでは、I<cmd> は debhelper コマンドの完全な名前を指定するか、"
"その一部の名前を指定することになります。あいまいさを排除するため、最初に完全"
"な名前で検索が行われます。名前が名前の一部で指定の場合に、複数の候補が見つか"
"ることがありますが、その場合は処理の一連の流れの中で一番最後に見つかったもの"
"が利用されます。"

#. type: textblock
#: dh:1067 dh_auto_build:52 dh_auto_clean:55 dh_auto_configure:57
#: dh_auto_install:97 dh_auto_test:64 dh_bugfiles:137 dh_builddeb:196
#: dh_clean:179 dh_compress:256 dh_fixperms:152 dh_gconf:102 dh_gencontrol:171
#: dh_icons:77 dh_install:330 dh_installchangelogs:242 dh_installcron:80
#: dh_installdeb:219 dh_installdebconf:130 dh_installdirs:99 dh_installdocs:361
#: dh_installemacsen:140 dh_installexamples:114 dh_installifupdown:74
#: dh_installinfo:80 dh_installinit:335 dh_installlogrotate:55
#: dh_installman:268 dh_installmanpages:200 dh_installmenu:100
#: dh_installmime:65 dh_installmodules:111 dh_installpam:64 dh_installppp:70
#: dh_installudev:103 dh_installwm:119 dh_installxfonts:94 dh_link:150
#: dh_lintian:62 dh_listpackages:35 dh_makeshlibs:291 dh_md5sums:109
#: dh_movefiles:163 dh_perl:158 dh_prep:65 dh_shlibdeps:157 dh_strip:400
#: dh_testdir:58 dh_testroot:32 dh_usrlocal:120
msgid "This program is a part of debhelper."
msgstr "このプログラムは debhelper の一部です。"

#. type: textblock
#: dh_auto_build:5
msgid "dh_auto_build - automatically builds a package"
msgstr "dh_auto_build - 自動的にパッケージをビルドする"

#. type: textblock
#: dh_auto_build:15
msgid ""
"B<dh_auto_build> [S<I<build system options>>] [S<I<debhelper options>>] "
"[S<B<--> I<params>>]"
msgstr ""
"B<dh_auto_build> [S<I<build system オプション>>] [S<I<debhelper オプション"
">>] [S<B<--> I<パラメータ>>]"

#. type: textblock
#: dh_auto_build:19
msgid ""
"B<dh_auto_build> is a debhelper program that tries to automatically build a "
"package. It does so by running the appropriate command for the build system "
"it detects the package uses. For example, if a F<Makefile> is found, this is "
"done by running B<make> (or B<MAKE>, if the environment variable is set). If "
"there's a F<setup.py>, or F<Build.PL>, it is run to build the package."
msgstr ""
"B<dh_auto_build> は、パッケージを自動的にビルドしようとする debhelper プログ"
"ラムです。パッケージが利用していると検知したビルドシステムについて、適切なコ"
"マンドを実行してビルドを行います。例えばもし F<Makefile> が見つかれば、"
"B<make> を実行して処理を行います (あるいは B<MAKE> 環境変数が設定されている場"
"合です)。F<setup.py> または F<Build.PL> が存在すれば、これを実行してパッケー"
"ジをビルドします。"

#. type: textblock
#: dh_auto_build:25
msgid ""
"This is intended to work for about 90% of packages. If it doesn't work, "
"you're encouraged to skip using B<dh_auto_build> at all, and just run the "
"build process manually."
msgstr ""
"このコマンドは約 90% のパッケージについて処理が行えるようにしています。もしう"
"まく動作しないようなパッケージに遭遇した場合は、B<dh_auto_build> を完全に省略"
"して、ビルド作業を手動で実行してください。"

#. type: textblock
#: dh_auto_build:31 dh_auto_clean:33 dh_auto_configure:34 dh_auto_install:46
#: dh_auto_test:34
msgid ""
"See L<debhelper(7)/B<BUILD SYSTEM OPTIONS>> for a list of common build "
"system selection and control options."
msgstr ""
"L<debhelper(7)/B<ビルドシステム用オプション>> には、よく使われるビルドシステ"
"ムと、制御オプションが列挙されています。"

#. type: =item
#: dh_auto_build:36 dh_auto_clean:38 dh_auto_configure:39 dh_auto_install:57
#: dh_auto_test:39 dh_builddeb:40 dh_gencontrol:39 dh_installdebconf:70
#: dh_installinit:124 dh_makeshlibs:101 dh_shlibdeps:38
msgid "B<--> I<params>"
msgstr "B<--> I<params>"

#. type: textblock
#: dh_auto_build:38
msgid ""
"Pass I<params> to the program that is run, after the parameters that "
"B<dh_auto_build> usually passes."
msgstr ""
"I<params> を B<dh_autobuild> にて実行しようとしているプログラムへ渡します。こ"
"の B<--> の後に指定したパラメータが渡されます。"

#. type: textblock
#: dh_auto_clean:5
msgid "dh_auto_clean - automatically cleans up after a build"
msgstr "dh_auto_clean - ビルド後、自動的にビルドディレクトリを消去する"

#. type: textblock
#: dh_auto_clean:16
msgid ""
"B<dh_auto_clean> [S<I<build system options>>] [S<I<debhelper options>>] "
"[S<B<--> I<params>>]"
msgstr ""
"B<dh_auto_clean> [S<I<build system オプション>>] [S<I<debhelper オプション"
">>] [S<B<--> I<パラメータ>>]"

#. type: textblock
#: dh_auto_clean:20
msgid ""
"B<dh_auto_clean> is a debhelper program that tries to automatically clean up "
"after a package build. It does so by running the appropriate command for the "
"build system it detects the package uses. For example, if there's a "
"F<Makefile> and it contains a B<distclean>, B<realclean>, or B<clean> "
"target, then this is done by running B<make> (or B<MAKE>, if the environment "
"variable is set). If there is a F<setup.py> or F<Build.PL>, it is run to "
"clean the package."
msgstr ""
"B<dh_auto_clean> はパッケージビルド完了後に自動的にディレクトリを消去しようと"
"する debhelpr プログラムです。このプログラムはパッケージのビルドに必要なビル"
"ドシステムを割り出し、それに適したコマンドを実行する事で消去を行います。例え"
"ば、F<Makefile> が存在し、かつ、そのファイルの中に B<distclean>, "
"B<realclean>, B<clean> ターゲットが存在する場合、B<make> を実行することにより"
"消去を行います (あるいは、B<MAKE> 環境変数が設定されている時も同様です)。も"
"し F<setup.py> や F<Build.PL> が存在するのであれば、これらを実行してパッケー"
"ジビルドディレクトリを消去します。"

#. type: textblock
#: dh_auto_clean:27
msgid ""
"This is intended to work for about 90% of packages. If it doesn't work, or "
"tries to use the wrong clean target, you're encouraged to skip using "
"B<dh_auto_clean> at all, and just run B<make clean> manually."
msgstr ""
"このコマンドは約 90 %のパッケージにて動作するように作られています。もし、うま"
"く動作しないようなパッケージに遭遇した場合、間違った clean ターゲットを使おう"
"としてしまうような場合、B<dh_auto_clean> をまったく使わずに、手動で "
"B<makeclean> を実行するのをお勧めします。"

#. type: textblock
#: dh_auto_clean:40
msgid ""
"Pass I<params> to the program that is run, after the parameters that "
"B<dh_auto_clean> usually passes."
msgstr ""
"I<params> を実行するプログラムに渡すには、B<dh_auto_clean> に通常指定するパラ"
"メータの後に、I<params> を指定してください。"

#. type: textblock
#: dh_auto_configure:5
msgid "dh_auto_configure - automatically configure a package prior to building"
msgstr "dh_auto_configure - パッケージビルド前に自動的に configure を行う"

#. type: textblock
#: dh_auto_configure:15
msgid ""
"B<dh_auto_configure> [S<I<build system options>>] [S<I<debhelper options>>] "
"[S<B<--> I<params>>]"
msgstr ""
"B<dh_auto_configure> [S<I<build system オプション>>] [S<I<debhelper オプショ"
"ン>>] [S<B<--> I<パラメータ>>]"

#. type: textblock
#: dh_auto_configure:19
msgid ""
"B<dh_auto_configure> is a debhelper program that tries to automatically "
"configure a package prior to building. It does so by running the appropriate "
"command for the build system it detects the package uses.  For example, it "
"looks for and runs a F<./configure> script, F<Makefile.PL>, F<Build.PL>, or "
"F<cmake>. A standard set of parameters is determined and passed to the "
"program that is run. Some build systems, such as make, do not need a "
"configure step; for these B<dh_auto_configure> will exit without doing "
"anything."
msgstr ""
"B<dh_auto_configure> はパッケージをビルドする前に自動的に configure を実行す"
"る debhelper プログラムです。このプログラムはパッケージのビルドに必要なビルド"
"システムを割り出し、それに適したコマンドを実行して設定を行います。例えば、"
"F<./configure> スクリプト、F<Makefile.PL>、F<Build.PL>、F<cmake> を探して実行"
"します。一連の標準パラメータが指定され、実行するプログラムに引き渡されます。"
"なお、make のようなビルドシステムの場合、事前に configure の実行が不要な場合"
"があります。この場合 B<dh_auto_configure> は何もせずに終了します。"

#. type: textblock
#: dh_auto_configure:28
msgid ""
"This is intended to work for about 90% of packages. If it doesn't work, "
"you're encouraged to skip using B<dh_auto_configure> at all, and just run "
"F<./configure> or its equivalent manually."
msgstr ""
"このコマンドは 90% のパッケージで動作するように作られています。もし、動作しな"
"いようなパッケージがあった場合は、B<dh_auto_configure> を全く使わないようにし"
"て、代わりに F<./configure> や、同等の動作を行うコマンドを手動で実行してくだ"
"さい。"

#. type: textblock
#: dh_auto_configure:41
msgid ""
"Pass I<params> to the program that is run, after the parameters that "
"B<dh_auto_configure> usually passes. For example:"
msgstr ""
"I<params> を実行するプログラムに渡すには、B<dh_auto_configure> に通常指定する"
"パラメータの後に、B<--> を、次に I<params> を指定してください。例:"

#. type: verbatim
#: dh_auto_configure:44
#, no-wrap
msgid ""
"  dh_auto_configure -- --with-foo --enable-bar\n"
"\n"
msgstr ""
"  dh_auto_configure -- --with-foo --enable-bar\n"
"\n"

#. type: textblock
#: dh_auto_install:5
msgid "dh_auto_install - automatically runs make install or similar"
msgstr "dh_auto_install - make install や類似コマンドを自動的に実行する"

#. type: textblock
#: dh_auto_install:18
msgid ""
"B<dh_auto_install> [S<I<build system options>>] [S<I<debhelper options>>] "
"[S<B<--> I<params>>]"
msgstr ""
"B<dh_auto_install> [S<I<build system オプション>>] [S<I<debhelper オプション"
">>] [S<B<--> I<params>>]"

#. type: textblock
#: dh_auto_install:22
msgid ""
"B<dh_auto_install> is a debhelper program that tries to automatically "
"install built files. It does so by running the appropriate command for the "
"build system it detects the package uses. For example, if there's a "
"F<Makefile> and it contains a B<install> target, then this is done by "
"running B<make> (or B<MAKE>, if the environment variable is set). If there "
"is a F<setup.py> or F<Build.PL>, it is used. Note that the Ant build system "
"does not support installation, so B<dh_auto_install> will not install files "
"built using Ant."
msgstr ""
"B<dh_auto_install> プログラムは、ビルドしたファイルを自動的にインストールしよ"
"うとする debhelper プログラムです。パッケージが利用するビルドシステムを判定"
"し、そのビルドシステムに対して適切なコマンドを実行することでインストールを行"
"います。例えば、F<Makefile> が存在し、中に B<install> ターゲットが存在する場"
"合 (あるいは、B<MAKE> 環境変数が設定されている場合)、B<make> を実行します)。"
"もし、F<setup.py> や F<Build.PL> が存在すれば、こちらが利用されます。なお、"
"Ant ビルドシステムはインストールをサポートしていません。そのため、"
"B<dh_auto_install> は Ant を使ってビルドしたファイルをインストールしないこと"
"に注意してください。"

#. type: textblock
#: dh_auto_install:30
msgid ""
"Unless B<--destdir> option is specified, the files are installed into debian/"
"I<package>/ if there is only one binary package. In the multiple binary "
"package case, the files are instead installed into F<debian/tmp/>, and "
"should be moved from there to the appropriate package build directory using "
"L<dh_install(1)>."
msgstr ""
"B<--destdir> オプションを指定せず単一のバイナリのみ生成する場合、ファイルは "
"debian/I<package>/ 以下にインストールされます。また、B<--destdir> オプション"
"を指定せずに複数のバイナリパッケージを生成する場合は、代わりに F<debian/tmp/"
"> 以下にインストールされます。この場合、生成したファイルは、L<dh_install(1)> "
"を使って適切なパッケージビルドディレクトリに移動する必要があります。"

#. type: textblock
#: dh_auto_install:36
msgid ""
"B<DESTDIR> is used to tell make where to install the files.  If the Makefile "
"was generated by MakeMaker from a F<Makefile.PL>, it will automatically set "
"B<PREFIX=/usr> too, since such Makefiles need that."
msgstr ""
"B<DESTDIR> は生成したファイルをどこに置くべきかを指定する時に利用します。も"
"し Makefileが F<Makefile.PL> を使って MakeMaker から生成される場合、生成され"
"た Makefile の為に、さらに自動的に B<PREFIX=/usr> がインストールディレクトリ"
"として指定されます。"

#. type: textblock
#: dh_auto_install:40
msgid ""
"This is intended to work for about 90% of packages. If it doesn't work, or "
"tries to use the wrong install target, you're encouraged to skip using "
"B<dh_auto_install> at all, and just run make install manually."
msgstr ""
"このコマンドはほぼ 90 %のパッケージに対してうまく動作するように設計されていま"
"す。うまく動かない場合、あるいは、間違ったインストールターゲットを使ってしま"
"うような場合には、B<dh_auto_install> を完全に省略して make install を手動で実"
"行することを推奨します。"

#. type: =item
#: dh_auto_install:51 dh_builddeb:30
msgid "B<--destdir=>I<directory>"
msgstr "B<--destdir=>I<directory>"

#. type: textblock
#: dh_auto_install:53
msgid ""
"Install files into the specified I<directory>. If this option is not "
"specified, destination directory is determined automatically as described in "
"the L</B<DESCRIPTION>> section."
msgstr ""
"指定した I<directory> 以下にファイルをインストールします。このオプションを指"
"定しない場合、インストール先は L</B<説明>> 章で説明するディレクトリになるよう"
"に自動的に指定されます。"

#. type: textblock
#: dh_auto_install:59
msgid ""
"Pass I<params> to the program that is run, after the parameters that "
"B<dh_auto_install> usually passes."
msgstr ""
"I<params> を実行するプログラムに渡すには、B<dh_auto_install> に通常指定するパ"
"ラメータの後に I<param> を指定してください。"

#. type: textblock
#: dh_auto_test:5
msgid "dh_auto_test - automatically runs a package's test suites"
msgstr "dh_auto_test - パッケージのテストスイートを自動的に実行する"

#. type: textblock
#: dh_auto_test:16
msgid ""
"B<dh_auto_test> [S<I<build system options>>] [S<I<debhelper options>>] "
"[S<B<--> I<params>>]"
msgstr ""
"B<dh_auto_test> [S<I<build system オプション>>] [S<I<debhelper オプション>>] "
"[S<B<--> I<params>>]"

#. type: textblock
#: dh_auto_test:20
msgid ""
"B<dh_auto_test> is a debhelper program that tries to automatically run a "
"package's test suite. It does so by running the appropriate command for the "
"build system it detects the package uses. For example, if there's a Makefile "
"and it contains a B<test> or B<check> target, then this is done by running "
"B<make> (or B<MAKE>, if the environment variable is set). If the test suite "
"fails, the command will exit nonzero. If there's no test suite, it will exit "
"zero without doing anything."
msgstr ""
"B<dh_auto_test> は、パッケージ付属のテストスイートを自動的に実行しようとする"
"プログラムです。パッケージがどのようなビルドシステムを必要とするかを判定し、"
"適切なコマンドを実行する事でこれを行います。例えば、もし Makefile が存在し、"
"B<test> や B<check> ターゲットが存在する (あるいは環境変数 B<MAKE> が設定され"
"ている) 場合、B<make> を実行します もし、テストスイートが失敗に終わった場合、"
"このコマンドは OS へのコマンドのステータスとして、0 以外を返して終了します。"
"もし、テスト用のターゲットが全く存在しなければ、何もせず 0 を返して終了しま"
"す。"

#. type: textblock
#: dh_auto_test:28
msgid ""
"This is intended to work for about 90% of packages with a test suite. If it "
"doesn't work, you're encouraged to skip using B<dh_auto_test> at all, and "
"just run the test suite manually."
msgstr ""
"このコマンドは、テストスイートを含む 90 %のパッケージに対して動作するように作"
"られています。もしうまく動作しないようであれば、B<dh_auto_test> を完全に省略"
"し、テストスイートを手動で実行するようにしてください。"

#. type: textblock
#: dh_auto_test:41
msgid ""
"Pass I<params> to the program that is run, after the parameters that "
"B<dh_auto_test> usually passes."
msgstr ""
"I<params> を動作するプログラムに渡したければ、B<dh_auto_test> へ通常指定する"
"パラメータの後に I<params> を指定してください。"

#. type: textblock
#: dh_auto_test:48
msgid ""
"If the B<DEB_BUILD_OPTIONS> environment variable contains B<nocheck>, no "
"tests will be performed."
msgstr ""
"B<DEB_BUILD_OPTIONS> 環境変数に B<nocheck> が含まれていれば、テストは実行され"
"ません。"

#. type: textblock
#: dh_bugfiles:5
msgid ""
"dh_bugfiles - install bug reporting customization files into package build "
"directories"
msgstr ""
"dh_bugfiles - カスタマイズされたバグレポート用ファイルをインストールする"

#. type: textblock
#: dh_bugfiles:15
msgid "B<dh_bugfiles> [B<-A>] [S<I<debhelper options>>]"
msgstr "B<dh_bugfiles> [B<-A>] [S<I<debhelper オプション>>]"

#. type: textblock
#: dh_bugfiles:19
msgid ""
"B<dh_bugfiles> is a debhelper program that is responsible for installing bug "
"reporting customization files (bug scripts and/or bug control files and/or "
"presubj files) into package build directories."
msgstr ""
"B<dh_bugfiles> は、バグレポートのカスタマイズ用ファイル (バグスクリプト、バグ"
"コントロールファイル、指定済み subject 用ファイル) をパッケージビルドディレク"
"トリへインストールする debhelper プログラムです。"

#. type: =head1
#: dh_bugfiles:23 dh_clean:32 dh_compress:33 dh_gconf:24 dh_install:39
#: dh_installcatalogs:37 dh_installchangelogs:36 dh_installcron:22
#: dh_installdeb:23 dh_installdebconf:35 dh_installdirs:26 dh_installdocs:22
#: dh_installemacsen:28 dh_installexamples:23 dh_installifupdown:23
#: dh_installinfo:22 dh_installinit:28 dh_installlogcheck:22 dh_installman:52
#: dh_installmenu:26 dh_installmime:22 dh_installmodules:29 dh_installpam:22
#: dh_installppp:22 dh_installudev:23 dh_installwm:25 dh_link:42 dh_lintian:22
#: dh_makeshlibs:27 dh_movefiles:27 dh_systemd_enable:39
msgid "FILES"
msgstr "ファイル"

#. type: =item
#: dh_bugfiles:27
msgid "debian/I<package>.bug-script"
msgstr "debian/I<package>.bug-script"

#. type: textblock
#: dh_bugfiles:29
msgid ""
"This is the script to be run by the bug reporting program for generating a "
"bug report template. This file is installed as F<usr/share/bug/package> in "
"the package build directory if no other types of bug reporting customization "
"files are going to be installed for the package in question. Otherwise, this "
"file is installed as F<usr/share/bug/package/script>. Finally, the installed "
"script is given execute permissions."
msgstr ""
"このファイルは、バグレポートの雛形を生成するバグ報告用プログラムによって実行"
"されるスクリプトです。処理対象のパッケージについて、他にバグレポートのカスタ"
"マイズ用ファイルがインストールされない場合、このファイルがパッケージビルド"
"ディレクトリ以下に F<usr/share/bug/package> としてインストールされます。カス"
"タマイズ用ファイルがインストールされる場合は、このスクリプトファイルは F<usr/"
"share/bug/package/script> としてインストールされます。そして、インストールさ"
"れたファイルには実行権限が付与されます。"

#. type: =item
#: dh_bugfiles:36
msgid "debian/I<package>.bug-control"
msgstr "debian/I<package>.bug-control"

#. type: textblock
#: dh_bugfiles:38
msgid ""
"It is the bug control file containing some directions for the bug reporting "
"tool. This file is installed as F<usr/share/bug/package/control> in the "
"package build directory."
msgstr ""
"バグレポート用ツールのディレクトリ群の名前が記載されるバグコントロールファイ"
"ルとなります。このファイルは、パッケージビルドディレクトリへ F<usr/share/bug/"
"package/control> としてインストールされます。"

#. type: =item
#: dh_bugfiles:42
msgid "debian/I<package>.bug-presubj"
msgstr "debian/I<package>.bug-presubj"

#. type: textblock
#: dh_bugfiles:44
msgid ""
"The contents of this file are displayed to the user by the bug reporting "
"tool before allowing the user to write a bug report on the package to the "
"Debian Bug Tracking System. This file is installed as F<usr/share/bug/"
"package/presubj> in the package build directory."
msgstr ""
"ユーザに Debian Bug Tracking System へバグレポートを記入させる前に、本ファイ"
"ルの中身がバグレポートツールにて表示されます。このファイルはF<usr/share/bug/"
"package/presubj> としてパッケージビルドディレクトリ以下にインストールされま"
"す。"

#. type: textblock
#: dh_bugfiles:57
msgid ""
"Install F<debian/bug-*> files to ALL packages acted on when respective "
"F<debian/package.bug-*> files do not exist. Normally, F<debian/bug-*> will "
"be installed to the first package only."
msgstr ""
"F<debian/package.bug-*> が存在しない場合、ビルドされる全パッケージに "
"F<debian/bug-*> がインストールされます。通常なら、F<debian/bug-*> は "
"F<debian/control> に記載されている、最初のパッケージへのみインストールされる"
"ものです。"

#. type: textblock
#: dh_bugfiles:133
msgid "F</usr/share/doc/reportbug/README.developers.gz>"
msgstr "F</usr/share/doc/reportbug/README.developers.gz>"

#. type: textblock
#: dh_bugfiles:135 dh_lintian:60
msgid "L<debhelper(1)>"
msgstr "L<debhelper(1)>"

#. type: textblock
#: dh_bugfiles:141
msgid "Modestas Vainius <modestas@vainius.eu>"
msgstr "Modestas Vainius <modestas@vainius.eu>"

#. type: textblock
#: dh_builddeb:5
msgid "dh_builddeb - build Debian binary packages"
msgstr "dh_builddeb - Debianバイナリパッケージのビルドを行う"

#. type: textblock
#: dh_builddeb:15
msgid ""
"B<dh_builddeb> [S<I<debhelper options>>] [B<--destdir=>I<directory>] [B<--"
"filename=>I<name>] [S<B<--> I<params>>]"
msgstr ""
"B<dh_builddeb> [S<I<debhelper オプション>>] [B<--destdir=>I<ディレクトリ>] "
"[B<--filename=>I<名前>] [S<B<--> I<パラメータ>>]"

#. type: textblock
#: dh_builddeb:19
msgid ""
"B<dh_builddeb> simply calls L<dpkg-deb(1)> to build a Debian package or "
"packages.  It will also build dbgsym packages when L<dh_strip(1)> and "
"L<dh_gencontrol(1)> have prepared them."
msgstr ""
"B<dh_builddeb> は、Debian パッケージもしくはパッケージ群をビルドするため "
"L<dpkg-deb(1)> を単に呼びだすコマンドです。L<dh_strip(1)> と "
"L<dh_gencontrol(1)> が準備されている場合には dbgsym パッケージもビルドしま"
"す。"

#. type: textblock
#: dh_builddeb:23
msgid ""
"It supports building multiple binary packages in parallel, when enabled by "
"DEB_BUILD_OPTIONS."
msgstr ""
"このコマンドは、DEB_BUILD_OPTIONS 環境変数に並列実行のオプションを設定するこ"
"とで、複数のバイナリを並行してビルドできます。"

#. type: textblock
#: dh_builddeb:32
msgid ""
"Use this if you want the generated F<.deb> files to be put in a directory "
"other than the default of \"F<..>\"."
msgstr ""
"デフォルトの \"F<..>\" 以外のディレクトリに生成された F<.deb> ファイル群を置"
"きたい場合に本オプションを使ってください。"

#. type: =item
#: dh_builddeb:35
msgid "B<--filename=>I<name>"
msgstr "B<--filename=>I<name>"

#. type: textblock
#: dh_builddeb:37
msgid ""
"Use this if you want to force the generated .deb file to have a particular "
"file name. Does not work well if more than one .deb is generated!"
msgstr ""
"生成する .deb ファイルに特定のファイル名を強制的に指定したい場合にこのオプ"
"ションを利用してください。複数の .deb ファイルが生成される場合にはうまく動作"
"しません!"

#. type: textblock
#: dh_builddeb:42
msgid "Pass I<params> to L<dpkg-deb(1)> when it is used to build the package."
msgstr "パッケージをビルドする時に、I<params> を L<dpkg-deb(1)> へ渡します。"

#. type: =item
#: dh_builddeb:45
msgid "B<-u>I<params>"
msgstr "B<-u>I<params>"

#. type: textblock
#: dh_builddeb:47
msgid ""
"This is another way to pass I<params> to L<dpkg-deb(1)>.  It is deprecated; "
"use B<--> instead."
msgstr ""
"これは I<params> を L<dpkg-deb(1)> へ渡す為の別の手段となります。本オプション"
"は廃止されています、代わりに B<--> を使ってください。"

#. type: textblock
#: dh_clean:5
msgid "dh_clean - clean up package build directories"
msgstr "dh_clean - パッケージビルドディレクトリを消去する"

#. type: textblock
#: dh_clean:15
msgid ""
"B<dh_clean> [S<I<debhelper options>>] [B<-k>] [B<-d>] [B<-X>I<item>] "
"[S<I<path> ...>]"
msgstr ""
"B<dh_clean> [S<I<debhelper オプション>>] [B<-k>] [B<-d>] [B<-X>I<item>] "
"[S<I<path> ...>]"

# FIXME: why-no-wrap?
#. type: verbatim
#: dh_clean:19
#, no-wrap
msgid ""
"B<dh_clean> is a debhelper program that is responsible for cleaning up after a\n"
"package is built. It removes the package build directories, and removes some\n"
"other files including F<debian/files>, and any detritus left behind by other\n"
"debhelper commands. It also removes common files that should not appear in a\n"
"Debian diff:\n"
"  #*# *~ DEADJOE *.orig *.rej *.SUMS TAGS .deps/* *.P *-stamp\n"
"\n"
msgstr ""
"B<dh_clean >はパッケージビルド後に掃除をする役目の debhelper コマンドです。\n"
"これはパッケージビルドディレクトリや、F<debian/files> を含むファイル、\n"
"他の debhelper コマンドが残してしまったゴミファイルを取り除きます。\n"
"以下のような、Debian diff に含まれてはならないようなありふれたファイルも\n"
"取り除きます。\n"
"  #*# *~ DEADJOE *.orig *.rej *.SUMS TAGS .deps/* *.P *-stamp\n"
"\n"

#. type: textblock
#: dh_clean:26
msgid ""
"It does not run \"make clean\" to clean up after the build process. Use "
"L<dh_auto_clean(1)> to do things like that."
msgstr ""
"このコマンドはビルドが完了後、掃除をするために \"make clean\" を実行しませ"
"ん。\"make clean\" を実行するような事がしたければ、L<dh_auto_clean(1)> を利用"
"してください。"

#. type: textblock
#: dh_clean:29
msgid ""
"B<dh_clean> should be the last debhelper command run in the B<clean> target "
"in F<debian/rules>."
msgstr ""
"B<dh_clean> は F<debian/rules> の B<clean> ターゲットで実行される一番最後の "
"debhelper コマンドであるべきです。"

#. type: =item
#: dh_clean:36
msgid "F<debian/clean>"
msgstr "F<debian/clean>"

#. type: textblock
#: dh_clean:38
msgid "Can list other paths to be removed."
msgstr "消去されるパスの一覧を出力できます。"

#. type: textblock
#: dh_clean:40
msgid ""
"Note that directories listed in this file B<must> end with a trailing "
"slash.  Any content in these directories will be removed as well."
msgstr ""
"このファイル内で記載されているディレクトリは最後がスラッシュで終わるB<必要が"
"あります>。これらのディレクトリ内の内容は同様に削除されます。"

#. type: =item
#: dh_clean:49 dh_installchangelogs:64
msgid "B<-k>, B<--keep>"
msgstr "B<-k>, B<--keep>"

#. type: textblock
#: dh_clean:51
msgid "This is deprecated, use L<dh_prep(1)> instead."
msgstr "これは廃止されています。代わりに L<dh_prep(1)> を利用してください。"

#. type: textblock
#: dh_clean:53
msgid "The option is removed in compat 11."
msgstr "このオプションは互換性レベル 11 で廃止されています。"

#. type: =item
#: dh_clean:55
msgid "B<-d>, B<--dirs-only>"
msgstr "B<-d>, B<--dirs-only>"

#. type: textblock
#: dh_clean:57
msgid ""
"Only clean the package build directories, do not clean up any other files at "
"all."
msgstr ""
"パッケージビルドディレクトリを削除するだけで、他のファイルには一切手をつけま"
"せん。"

#. type: =item
#: dh_clean:60 dh_prep:31
msgid "B<-X>I<item> B<--exclude=>I<item>"
msgstr "B<-X>I<item> B<--exclude=>I<item>"

#. type: textblock
#: dh_clean:62
msgid ""
"Exclude files that contain I<item> anywhere in their filename from being "
"deleted, even if they would normally be deleted. You may use this option "
"multiple times to build up a list of things to exclude."
msgstr ""
"通常は消されるはずのファイルであっても、I<item> をファイル名の一部として含む"
"もの全部を消去候補から除外します。本オプションを何度も指定することで、除外候"
"補を複数指定することが可能です。"

#. type: =item
#: dh_clean:66
msgid "I<path> ..."
msgstr "I<path> ..."

#. type: textblock
#: dh_clean:68
msgid "Delete these I<path>s too."
msgstr "これらの I<path> も消去します。"

#. type: textblock
#: dh_clean:70
#, fuzzy
msgid ""
"Note that directories passed as arguments B<must> end with a trailing "
"slash.  Any content in these directories will be removed as well."
msgstr ""
"引数として渡されるディレクトリはスラッシュ (/) 付きで終わることがB<必須>で"
"あることに注意して下さい。これらのディレクトリ中の内容は同様に削除されます。"

#. type: textblock
#: dh_compress:5
msgid ""
"dh_compress - compress files and fix symlinks in package build directories"
msgstr ""
"dh_compress - ビルドディレクトリでファイル圧縮とシンボリックリンクの修正を行"
"う"

#. type: textblock
#: dh_compress:17
msgid ""
"B<dh_compress> [S<I<debhelper options>>] [B<-X>I<item>] [B<-A>] "
"[S<I<file> ...>]"
msgstr ""
"B<dh_compress> [S<I<debhelper オプション>>] [B<-X>I<項目>] [B<-A>] [S<I<ファ"
"イル> ...>]"

#. type: textblock
#: dh_compress:21
msgid ""
"B<dh_compress> is a debhelper program that is responsible for compressing "
"the files in package build directories, and makes sure that any symlinks "
"that pointed to the files before they were compressed are updated to point "
"to the new files."
msgstr ""
"B<dh_compress> はパッケージビルドディレクトリにあるファイルを圧縮する役割を担"
"う debhelper プログラムです。また、圧縮されるファイルをシンボリックリンクが指"
"し示していた場合、圧縮後も正しく指すようにシンボリックリンクを更新します。"

#. type: textblock
#: dh_compress:26
msgid ""
"By default, B<dh_compress> compresses files that Debian policy mandates "
"should be compressed, namely all files in F<usr/share/info>, F<usr/share/"
"man>, files in F<usr/share/doc> that are larger than 4k in size, (except the "
"F<copyright> file, F<.html> and other web files, image files, and files that "
"appear to be already compressed based on their extensions), and all "
"F<changelog> files. Plus PCF fonts underneath F<usr/share/fonts/X11/>"
msgstr ""
"デフォルトでは、B<dh_compress> は Debian ポリシーマニュアルの規則に従い圧縮す"
"べきとされるファイルを圧縮します。この場合の圧縮対象のファイルの例としては、"
"F<usr/share/info>、F<usr/share/man> の以下の全ファイル、F<usr/share/doc> 以下"
"にある 4k を 越えるサイズの全ファイル (但し、F<copyright>、F<.html> ファイ"
"ル、画像ファイル、また拡張子からすでに圧縮されていることがすでに明らかなファ"
"イルは対象から除外されます) 、全 F<changelog> ファイルとなります。加えて "
"F<usr/share/fonts/X11/> 以下の PCF フォントファイルも圧縮対象となります。"

#. type: =item
#: dh_compress:37
msgid "debian/I<package>.compress"
msgstr "debian/I<package>.compress"

#. type: textblock
#: dh_compress:39
msgid "These files are deprecated."
msgstr "これらのファイルは廃止されました。"

#. type: textblock
#: dh_compress:41
#, fuzzy
msgid ""
"If this file exists, the default files are not compressed. Instead, the file "
"is ran as a shell script, and all filenames that the shell script outputs "
"will be compressed. The shell script will be run from inside the package "
"build directory. Note though that using B<-X> is a much better idea in "
"general; you should only use a F<debian/package.compress> file if you really "
"need to."
msgstr ""
"このファイルが存在すると、デフォルトで圧縮対象となるファイルは、圧縮されなく"
"なります。代わりにこのファイルはシェルスクリプトとして実行され、シェルスクリ"
"プトの実行結果として得られるファイル名が圧縮対象となります。このシェルスクリ"
"プトはパッケージビルドディレクトリ以下で実行されます。とはいえ、注意して欲し"
"いのは、通常の用途では B<-X> の方が適していることです。その為、F<debian/"
"package.compress> を使いたい場合は、本当に必要な時に限るべきです。"

#. type: textblock
#: dh_compress:56
msgid ""
"Exclude files that contain F<item> anywhere in their filename from being "
"compressed. For example, B<-X.tiff> will exclude TIFF files from "
"compression.  You may use this option multiple times to build up a list of "
"things to exclude."
msgstr ""
"ファイル名に F<item> が含まれると、このファイルは圧縮対象から除外されます。た"
"とえば、B<-X.tiff> を指定すると、TIFF ファイルは圧縮されなくなります。また除"
"外するものを複数指定するには、このオプションを複数並べることにより指定できま"
"す。"

#. type: textblock
#: dh_compress:63
msgid ""
"Compress all files specified by command line parameters in ALL packages "
"acted on."
msgstr ""
"処理対象となる全パッケージを対象に、コマンドラインパラメータで指定したファイ"
"ル全てを圧縮します。"

#. type: =item
#: dh_compress:66 dh_installdocs:118 dh_installexamples:47 dh_installinfo:41
#: dh_installmanpages:45 dh_movefiles:56 dh_testdir:28
msgid "I<file> ..."
msgstr "I<file> ..."

#. type: textblock
#: dh_compress:68
msgid "Add these files to the list of files to compress."
msgstr "これらファイルを圧縮対象のファイルとして追加します。"

#. type: =head1
#: dh_compress:72 dh_perl:62 dh_strip:131 dh_usrlocal:55
msgid "CONFORMS TO"
msgstr "確認すべき事"

#. type: textblock
#: dh_compress:74
msgid "Debian policy, version 3.0"
msgstr "Debian ポリシー バージョン 3.0"

#. type: textblock
#: dh_fixperms:5
msgid "dh_fixperms - fix permissions of files in package build directories"
msgstr "dh_fixperms - パッケージビルドディレクトリ内のファイル権限を修正する"

#. type: textblock
#: dh_fixperms:16
msgid "B<dh_fixperms> [S<I<debhelper options>>] [B<-X>I<item>]"
msgstr "B<dh_fixperms> [S<I<debhelper options>>] [B<-X>I<item>]"

#. type: textblock
#: dh_fixperms:20
msgid ""
"B<dh_fixperms> is a debhelper program that is responsible for setting the "
"permissions of files and directories in package build directories to a sane "
"state -- a state that complies with Debian policy."
msgstr ""
"B<dh_fixperms> はパッケージビルドディレクトリ配下でファイルとディレクトリの権"
"限を設定する役割の debhelper プログラムです。また、設定される権限は正しいも"
"の、つまり Debian ポリシーに従って設定されます。"

#. type: textblock
#: dh_fixperms:24
msgid ""
"B<dh_fixperms> makes all files in F<usr/share/doc> in the package build "
"directory (excluding files in the F<examples/> directory) be mode 644. It "
"also changes the permissions of all man pages to mode 644. It makes all "
"files be owned by root, and it removes group and other write permission from "
"all files. It removes execute permissions from any libraries, headers, Perl "
"modules, or desktop files that have it set. It makes all files in the "
"standard F<bin> and F<sbin> directories, F<usr/games/> and F<etc/init.d> "
"executable (since v4). Finally, it removes the setuid and setgid bits from "
"all files in the package."
msgstr ""
"B<dh_fixperms> はパッケージビルドディレクトリ以下の F<usr/share/doc> にあるす"
"べてのファイル (F<examples/> 以下のファイルは除きます) のパーミッションを "
"644 に設定します。また、すべての man ページのパーミッションも 644 に変更しま"
"す。さらにこれらのファイルの所有者を root に設定し、全てのファイルから group "
"や others に対する書き込み権限を除去します。また、ライブラリ、ヘッダファイ"
"ル、Perl モジュール、そして desktop ファイルに実行権限が付与されている場合に"
"権限を取り除きます。F<bin>、F<sbin>、F<usr/games/>、F<etc/init.d> ディレクト"
"リ以下にあるファイルについては実行権限を付与します (互換性レベル v4 から利用"
"できます)。最後に、パッケージ内の全てのファイルに対して setuid と setgid ビッ"
"トが付与されている場合はこれらを無効にします。"

#. type: =item
#: dh_fixperms:37
msgid "B<-X>I<item>, B<--exclude> I<item>"
msgstr "B<-X>I<item>, B<--exclude> I<item>"

#. type: textblock
#: dh_fixperms:39
msgid ""
"Exclude files that contain I<item> anywhere in their filename from having "
"their permissions changed. You may use this option multiple times to build "
"up a list of things to exclude."
msgstr ""
"パーミッションの変更対象のファイルから、I<item> をファイル名の一部に持つもの"
"を除外します。除外対象を列挙したい場合は、このオプションを複数回指定します。"

#. type: textblock
#: dh_gconf:5
msgid "dh_gconf - install GConf defaults files and register schemas"
msgstr ""
"dh_gconf - GConf デフォルトファイルをインストールし、スキーマに登録する"

#. type: textblock
#: dh_gconf:15
msgid "B<dh_gconf> [S<I<debhelper options>>] [B<--priority=>I<priority>]"
msgstr "B<dh_gconf> [S<I<debhelper options>>] [B<--priority=>I<priority>]"

#. type: textblock
#: dh_gconf:19
msgid ""
"B<dh_gconf> is a debhelper program that is responsible for installing GConf "
"defaults files and registering GConf schemas."
msgstr ""
"B<dh_gconf> は GConf 用デフォルトファイルをインストールし、GConf スキーマに登"
"録する役割を担う debhelper プログラムです。"

#. type: textblock
#: dh_gconf:22
msgid ""
"An appropriate dependency on gconf2 will be generated in B<${misc:Depends}>."
msgstr "gconf2 に関する適切な依存関係が B<${misc:Depends}> に生成されます。"

#. type: =item
#: dh_gconf:28
msgid "debian/I<package>.gconf-defaults"
msgstr "debian/I<package>.gconf-defaults"

#. type: textblock
#: dh_gconf:30
msgid ""
"Installed into F<usr/share/gconf/defaults/10_package> in the package build "
"directory, with I<package> replaced by the package name."
msgstr ""
"パッケージビルドディレクトリにある F<usr/share/gconf/defaults/10_package> へ"
"インストールが行われます。なお、I<package> はパッケージ名で置き換えられます。"

#. type: =item
#: dh_gconf:33
msgid "debian/I<package>.gconf-mandatory"
msgstr "debian/I<package>.gconf-mandatory"

#. type: textblock
#: dh_gconf:35
msgid ""
"Installed into F<usr/share/gconf/mandatory/10_package> in the package build "
"directory, with I<package> replaced by the package name."
msgstr ""
"パッケージビルドディレクトリにある F<usr/share/gconf/mandatory/10_package> に"
"インストールされます。なお、I<package> はパッケージ名で置き換えられます。"

#. type: =item
#: dh_gconf:44
msgid "B<--priority> I<priority>"
msgstr "B<--priority> I<priority>"

#. type: textblock
#: dh_gconf:46
msgid ""
"Use I<priority> (which should be a 2-digit number) as the defaults priority "
"instead of B<10>. Higher values than ten can be used by derived "
"distributions (B<20>), CDD distributions (B<50>), or site-specific packages "
"(B<90>)."
msgstr ""
"I<priority> (これは2桁の数字である必要があります) をデフォルトの優先順位であ"
"る B<10> の代わりに利用します。用途によっては 10 より大きな値を利用することが"
"できます。例えば、派生ディストリビューションの場合 (B<20>)、CDD ディストリ"
"ビューション (B<50>)、あるいはサイト独自のパッケージ (B<90>) となります。"

#. type: textblock
#: dh_gconf:106
msgid "Ross Burton <ross@burtonini.com> Josselin Mouette <joss@debian.org>"
msgstr "Ross Burton <ross@burtonini.com> Josselin Mouette <joss@debian.org>"

#. type: textblock
#: dh_gencontrol:5
msgid "dh_gencontrol - generate and install control file"
msgstr "dh_gencontrol - control ファイルを生成し、インストールする"

#. type: textblock
#: dh_gencontrol:15
msgid "B<dh_gencontrol> [S<I<debhelper options>>] [S<B<--> I<params>>]"
msgstr "B<dh_gencontrol> [S<I<debhelper options>>] [S<B<--> I<params>>]"

#. type: textblock
#: dh_gencontrol:19
msgid ""
"B<dh_gencontrol> is a debhelper program that is responsible for generating "
"control files, and installing them into the I<DEBIAN> directory with the "
"proper permissions."
msgstr ""
"B<dh_gencontrol> は I<DEBIAN> ディレクトリ以下に control ファイルを生成し、適"
"切な権限を持つようにインストールする役目を持つ debhelper プログラムです。"

#. type: textblock
#: dh_gencontrol:23
msgid ""
"This program is merely a wrapper around L<dpkg-gencontrol(1)>, which calls "
"it once for each package being acted on (plus related dbgsym packages), and "
"passes in some additional useful flags."
msgstr ""
"このプログラムは単に L<dpkg-gencontrol(1)> のラッパーです。処理を行うべきそれ"
"ぞれのパッケージ (関連する dbgsym パッケージも含む) に対し L<dpkg-"
"gencontrol(1)> を都度呼び出し、同時にいくつかの便利なフラグも渡します。"

#. type: textblock
#: dh_gencontrol:27
#, fuzzy
msgid ""
"B<Note> that if you use B<dh_gencontrol>, you must also use "
"L<dh_builddeb(1)> to build the packages.  Otherwise, your build may fail to "
"build as B<dh_gencontrol> (via L<dpkg-gencontrol(1)>) declares which "
"packages are built.  As debhelper automatically generates dbgsym packages, "
"it some times adds additional packages, which will be built by "
"L<dh_builddeb(1)>."
msgstr ""

#. type: textblock
#: dh_gencontrol:41
msgid "Pass I<params> to L<dpkg-gencontrol(1)>."
msgstr "I<params> を L<dpkg-gencontrol(1)> へ渡します。"

#. type: =item
#: dh_gencontrol:43
msgid "B<-u>I<params>, B<--dpkg-gencontrol-params=>I<params>"
msgstr "B<-u>I<params>, B<--dpkg-gencontrol-params=>I<params>"

#. type: textblock
#: dh_gencontrol:45
msgid ""
"This is another way to pass I<params> to L<dpkg-gencontrol(1)>.  It is "
"deprecated; use B<--> instead."
msgstr ""
"これは、I<params> を L<dpkg-gencontrol(1)> へ渡す別のやり方です。このオプショ"
"ンは廃止されたので、代わりに　B<--> を使ってください。"

#. type: textblock
#: dh_icons:5
msgid "dh_icons - Update caches of Freedesktop icons"
msgstr "dh_icons - Freedesktop 規格のアイコンキャッシュを更新する"

#. type: textblock
#: dh_icons:16
msgid "B<dh_icons> [S<I<debhelper options>>] [B<-n>]"
msgstr "B<dh_icons> [S<I<debhelper options>>] [B<-n>]"

#. type: textblock
#: dh_icons:20
msgid ""
"B<dh_icons> is a debhelper program that updates caches of Freedesktop icons "
"when needed, using the B<update-icon-caches> program provided by GTK+2.12.  "
"Currently this program does not handle installation of the files, though it "
"may do so at a later date, so should be run after icons are installed in the "
"package build directories."
msgstr ""
"B<dh_icons> は、GTK+2.12 が提供する B<update-icon-caches> プログラムを使い、"
"必要に応じて Freedesktop 規格のアイコンキャッシュを更新する debhelper プログ"
"ラムです。現在のところ、このプログラムはアイコンキャッシュファイルをインス"
"トールしませんが、将来的は行うでしょう。ですから、アイコンがパッケージビルド"
"ディレクトリにインストールされた後で実行される必要があります。"

#. type: textblock
#: dh_icons:26
msgid ""
"It takes care of adding maintainer script fragments to call B<update-icon-"
"caches> for icon directories. (This is not done for gnome and hicolor icons, "
"as those are handled by triggers.)  These commands are inserted into the "
"maintainer scripts by L<dh_installdeb(1)>."
msgstr ""
"アイコンディレクトリに対して B<update-icon-caches> を呼び出すメンテナスクリプ"
"ト部分の追加を行います (GNOME と hicolor アイコンについては行わず、これらはト"
"リガーによって処理されます)。これらのコマンドは、L<dh_installdeb(1)> によりメ"
"ンテナスクリプトへ組み込まれます。"

#. type: =item
#: dh_icons:35 dh_installcatalogs:55 dh_installdebconf:66 dh_installemacsen:58
#: dh_installinit:64 dh_installmenu:49 dh_installmodules:43 dh_installwm:45
#: dh_makeshlibs:84 dh_usrlocal:43
msgid "B<-n>, B<--no-scripts>"
msgstr "B<-n>, B<--no-scripts>"

#. type: textblock
#: dh_icons:37
msgid "Do not modify maintainer scripts."
msgstr "メンテナスクリプトの変更を行いません。"

#. type: textblock
#: dh_icons:75
msgid "L<debhelper>"
msgstr "L<debhelper>"

#. type: textblock
#: dh_icons:81
msgid ""
"Ross Burton <ross@burtonini.com> Jordi Mallach <jordi@debian.org> Josselin "
"Mouette <joss@debian.org>"
msgstr ""
"Ross Burton <ross@burtonini.com> Jordi Mallach <jordi@debian.org> "
"JosselinMouette <joss@debian.org>"

#. type: textblock
#: dh_install:5
msgid "dh_install - install files into package build directories"
msgstr "dh_install - パッケージビルドディレクトリにファイルをインストールする"

#. type: textblock
#: dh_install:16
msgid ""
"B<dh_install> [B<-X>I<item>] [B<--autodest>] [B<--sourcedir=>I<dir>] "
"[S<I<debhelper options>>] [S<I<file|dir> ... I<destdir>>]"
msgstr ""
"B<dh_install> [B<-X>I<item>] [B<--autodest>] [B<--sourcedir=>I<dir>] "
"[S<I<debhelper options>>] [S<I<file|dir> ... I<destdir>>]"

#. type: textblock
#: dh_install:20
msgid ""
"B<dh_install> is a debhelper program that handles installing files into "
"package build directories. There are many B<dh_install>I<*> commands that "
"handle installing specific types of files such as documentation, examples, "
"man pages, and so on, and they should be used when possible as they often "
"have extra intelligence for those particular tasks. B<dh_install>, then, is "
"useful for installing everything else, for which no particular intelligence "
"is needed. It is a replacement for the old B<dh_movefiles> command."
msgstr ""
"B<dh_install> はパッケージビルドディレクトリにファイルをインストールする "
"debhelper プログラムです。なお、沢山の B<dh_install>I<*> コマンドは、文章や"
"例、あるいは man ページ等のファイルの種類に応じたインストールを担います。こち"
"らのコマンドは、特定の処理を行う為に各々専用の処理を持っていますので、可能な"
"限り、これらのファイルをインストールするときには、B<dh_install>I<*> コマンド"
"を使ってください。なお、B<dh_install> は、ファイルにあわせた特別な処理が不要"
"なファイルをインストールする時に使うと良いでしょう。B<dh_install> は、以前存"
"在した B<dh_movefiles> コマンドを置き換えるコマンドです。"

#. type: textblock
#: dh_install:28
msgid ""
"This program may be used in one of two ways. If you just have a file or two "
"that the upstream Makefile does not install for you, you can run "
"B<dh_install> on them to move them into place. On the other hand, maybe you "
"have a large package that builds multiple binary packages. You can use the "
"upstream F<Makefile> to install it all into F<debian/tmp>, and then use "
"B<dh_install> to copy directories and files from there into the proper "
"package build directories."
msgstr ""
"このプログラムは２つの用途で利用されます。１つ目は、単に１つ２つのファイルに"
"ついて開発元 (upstream) の Makefile がインストールをしようとしない時、"
"B<dh_install> を使ってこれらのファイルを目的の場所へ移動できます。２つ目とし"
"ては、複数のバイナリパッケージをビルドするような大きなパッケージの元で利用す"
"る場合であり、開発元 (upstream) の Makefile により、F<debian/tmp> へ一旦インス"
"トールしてから、B<dh_install> を使って適切なパッケージビルドディレクトリへ"
"ディレクトリとファイルをコピーするのに使うというものです。"

#. type: textblock
#: dh_install:35
msgid ""
"From debhelper compatibility level 7 on, B<dh_install> will fall back to "
"looking in F<debian/tmp> for files, if it doesn't find them in the current "
"directory (or wherever you've told it to look using B<--sourcedir>)."
msgstr ""
"debhelper の互換性レベル 7 から、 B<dh_install> はファイルをカレントディレク"
"トリで見つけられなければ (あるいは B<--sourcedir> オプションを使って指定した"
"ディレクトリの中を探してファイルが見けられなければ) 、自動的に F<debian/tmp> "
"を探しにいくようになりました"

#. type: =item
#: dh_install:43
msgid "debian/I<package>.install"
msgstr "debian/I<package>.install"

#. type: textblock
#: dh_install:45
msgid ""
"List the files to install into each package and the directory they should be "
"installed to. The format is a set of lines, where each line lists a file or "
"files to install, and at the end of the line tells the directory it should "
"be installed in. The name of the files (or directories) to install should be "
"given relative to the current directory, while the installation directory is "
"given relative to the package build directory. You may use wildcards in the "
"names of the files to install (in v3 mode and above)."
msgstr ""
"各々のパッケージにインストールすべきファイルと、これらファイルがインストール"
"されるべきディレクトリを列挙します。フォーマットとしては、一連の行から成り、"
"１つの行には、最初に１つもしくは複数のインストールしたいファイルを書き、行の"
"最後の部分には、インストールされる先のディレクトリ名を書いていきます。ファイ"
"ルの名前 (あるいはディレクトリの名前) について、インストールしたい側はカレン"
"トディレクトリからの相対パスで、また、インストールされる側のディレクトリの場"
"合はパッケージビルドディレクトリからの相対パスで記載する必要があります。イン"
"ストールする側のファイル名にはワイルドカードを使う事ができます (この機能は互"
"換性レベルv3以上で利用可能です)。"

#. type: textblock
#: dh_install:53
msgid ""
"Note that if you list exactly one filename or wildcard-pattern on a line by "
"itself, with no explicit destination, then B<dh_install> will automatically "
"guess the destination to use, the same as if the --autodest option were used."
msgstr ""
"明示的にインストール先を記述せず、ただ１つのファイル名もしくはワイルドカード"
"パターンを指定した行を列挙した場合は、--autodest オプションが使われた時同様"
"に B<dh_install> は自動的に利用されるインストール先を推測します。"

#. type: =item
#: dh_install:58
msgid "debian/not-installed"
msgstr "debian/not-installed"

#. type: textblock
#: dh_install:60
#, fuzzy
msgid ""
"List the files that are deliberately not installed in I<any> binary "
"package.  Paths listed in this file are (I<only>) ignored by the check done "
"via B<--list-missing> (or B<--fail-missing>).  However, it is B<not> a "
"method to exclude files from being installed.  Please use B<--exclude> for "
"that."
msgstr ""

#. type: textblock
#: dh_install:66
msgid ""
"Please keep in mind that dh_install will B<not> expand wildcards in this "
"file."
msgstr ""
"dh_install は、このファイル内でワイルドカードをB<展開しない>点に注意して下さ"
"い。"

#. type: =item
#: dh_install:75
msgid "B<--list-missing>"
msgstr "B<--list-missing>"

#. type: textblock
#: dh_install:77
msgid ""
"This option makes B<dh_install> keep track of the files it installs, and "
"then at the end, compare that list with the files in the source directory. "
"If any of the files (and symlinks) in the source directory were not "
"installed to somewhere, it will warn on stderr about that."
msgstr ""
"このオプションにより、B<dh_install> はインストールするファイル群を記録し、そ"
"して最後にソースディレクトリにあるファイルの一覧と比較します。もし、ソース"
"ファイル中のファイル (もしくはシンボリックリンク) でインストールされていない"
"ものが発見されると、警告を標準エラー出力に表示します。"

#. type: textblock
#: dh_install:82
msgid ""
"This may be useful if you have a large package and want to make sure that "
"you don't miss installing newly added files in new upstream releases."
msgstr ""
"このオプションは大きなパッケージをつくろうとしていたり、開発元 (upstream) の新"
"しいリリースにて新たに増えたファイルをインストールし忘れないようにする時に便"
"利です。"

#. type: textblock
#: dh_install:85
msgid ""
"Note that files that are excluded from being moved via the B<-X> option are "
"not warned about."
msgstr ""
"B<-X> オプションで除外したファイルは警告対象から除外される事にご注意くださ"
"い。"

#. type: =item
#: dh_install:88
msgid "B<--fail-missing>"
msgstr "B<--fail-missing>"

#. type: textblock
#: dh_install:90
msgid ""
"This option is like B<--list-missing>, except if a file was missed, it will "
"not only list the missing files, but also fail with a nonzero exit code."
msgstr ""
"このオプションは B<--list-missing> と同じようなものですが、ファイルがインス"
"トールされていないものがあるのを発見すると、そのファイルを列挙して教えてくれ"
"るだけでなく、終了コードとして 0 以外を返して処理を失敗します。"

#. type: textblock
#: dh_install:95 dh_installexamples:44
msgid ""
"Exclude files that contain I<item> anywhere in their filename from being "
"installed."
msgstr ""
"I<item> をファイル名の一部として含んでいるファイルをインストール候補から除外"
"します。"

#. type: =item
#: dh_install:98 dh_movefiles:43
msgid "B<--sourcedir=>I<dir>"
msgstr "B<--sourcedir=>I<dir>"

#. type: textblock
#: dh_install:100
msgid "Look in the specified directory for files to be installed."
msgstr "インストールするファイルを指定されたディレクトリ内で探します。"

#. type: textblock
#: dh_install:102
msgid ""
"Note that this is not the same as the B<--sourcedirectory> option used by "
"the B<dh_auto_>I<*> commands. You rarely need to use this option, since "
"B<dh_install> automatically looks for files in F<debian/tmp> in debhelper "
"compatibility level 7 and above."
msgstr ""
"このオプションは、B<dh_auto_>I<*> にあるような B<--sourcedirectory> とは異な"
"る事に注意が必要です。このコマンドではあまりこのオプションは利用する機会があ"
"りません。というのも B<dh_install> は互換性レベル v7 以上では自動的に "
"F<debian/tmp> へファイルを探しに行く為です。"

#. type: =item
#: dh_install:107
msgid "B<--autodest>"
msgstr "B<--autodest>"

#. type: textblock
#: dh_install:109
#, fuzzy
msgid ""
"Guess as the destination directory to install things to. If this is "
"specified, you should not list destination directories in F<debian/package."
"install> files or on the command line. Instead, B<dh_install> will guess as "
"follows:"
msgstr ""
"インストール先のディレクトリを推定します。このオプションを指定した場合、"
"F<debian/package.install> ファイルや、コマンドラインにインストール先のディレ"
"クトリを列挙してはいけません。代わりに B<dh_install> は以下のルールに従いイン"
"ストール先ディレクトリを推定します:"

#. type: textblock
#: dh_install:114
msgid ""
"Strip off F<debian/tmp> (or the sourcedir if one is given) from the front of "
"the filename, if it is present, and install into the dirname of the "
"filename. So if the filename is F<debian/tmp/usr/bin>, then that directory "
"will be copied to F<debian/package/usr/>. If the filename is F<debian/tmp/"
"etc/passwd>, it will be copied to F<debian/package/etc/>."
msgstr ""
"まず、インストール元のファイル名の先頭から F<debian/tmp> の文字列 (あるいは指"
"定されていればソースディレクトリ名) を取り除きます。ファイル名が残っていれ"
"ば、これをディレクトリ名としてその中にインストールします。つまり、ソースディ"
"レクトリとして F<debian/tmp/usr/bin> が与えられると、ファイルのコピー先のディ"
"レクトリは F<debian/package/usr/> となります。ファイル名が F<debian/tmp/etc/"
"passwd> であれば、F<debian/package/etc/> へ行われます。"

#. type: =item
#: dh_install:120
msgid "I<file|dir> ... I<destdir>"
msgstr "I<file|dir> ... I<destdir>"

#. type: textblock
#: dh_install:122
msgid ""
"Lists files (or directories) to install and where to install them to.  The "
"files will be installed into the first package F<dh_install> acts on."
msgstr ""
"インストールするファイル (またはディレクトリ) と、どこへインストールするかに"
"ついて列挙します。ファイルは F<dh_install> が処理する最初のパッケージへインス"
"トールされます。"

#. type: =head1
#: dh_install:301
msgid "LIMITATIONS"
msgstr "制限事項"

#. type: textblock
#: dh_install:303
msgid ""
"B<dh_install> cannot rename files or directories, it can only install them "
"with the names they already have into wherever you want in the package build "
"tree."
msgstr ""
"B<dh_install> はファイルやディレクトリをリネームできません。パッケージビルド"
"ツリー内のどこへでも望む場所へ、既に付けられた名前でそれらをインストールする"
"ことだけが可能です。"

#. type: textblock
#: dh_install:307
msgid ""
"However, renaming can be achieved by using B<dh-exec> with compatibility "
"level 9 or later.  An example debian/I<package>.install file using B<dh-"
"exec> could look like:"
msgstr ""
"ですが、リネームは互換性レベル 9 以上で B<dh-exec> を使うことで実現できます。"
"B<dh-exec> を使う debian/I<package>.install ファイルの例は以下のようになります:"

#. type: verbatim
#: dh_install:311
#, no-wrap
msgid ""
" #!/usr/bin/dh-exec\n"
" debian/default.conf => /etc/my-package/start.conf\n"
"\n"
msgstr ""
" #!/usr/bin/dh-exec\n"
" debian/default.conf => /etc/my-package/start.conf\n"
"\n"

#. type: textblock
#: dh_install:314
msgid "Please remember the following three things:"
msgstr "以下の 3 点に留意して下さい:"

#. type: =item
#: dh_install:318
msgid ""
"* The package must be using compatibility level 9 or later (see "
"L<debhelper(7)>)"
msgstr ""
"* パッケージは互換性レベル 9 以降を使う必要があります (L<debhelper(7)> 参照)"

#. type: =item
#: dh_install:320
msgid "* The package will need a build-dependency on dh-exec."
msgstr "* パッケージは dh-exec へのビルド依存が必要になります。"

#. type: =item
#: dh_install:322
msgid "* The install file must be marked as executable."
msgstr "* install ファイルは実行可能になっている必要があります。"

#. type: textblock
#: dh_installcatalogs:5
msgid "dh_installcatalogs - install and register SGML Catalogs"
msgstr "dh_installcatalogs - SGML カタログファイルをインストール・登録する"

#. type: textblock
#: dh_installcatalogs:17
msgid "B<dh_installcatalogs> [S<I<debhelper options>>] [B<-n>]"
msgstr "B<dh_installcatalogs> [S<I<debhelper options>>] [B<-n>]"

#. type: textblock
#: dh_installcatalogs:21
msgid ""
"B<dh_installcatalogs> is a debhelper program that installs and registers "
"SGML catalogs. It complies with the Debian XML/SGML policy."
msgstr ""
"B<dh_installcatalogs> は SGML カタログをインストールし登録するプログラムで"
"す。この動作は Debian XML/SGML ポリシーに準拠します。"

#. type: textblock
#: dh_installcatalogs:24
msgid ""
"Catalogs will be registered in a supercatalog, in F</etc/sgml/I<package>."
"cat>."
msgstr ""
"カタログは F</etc/sgml/I<package>.cat> にある上位カタログに登録されます。"

#. type: textblock
#: dh_installcatalogs:27
#, fuzzy
msgid ""
"This command automatically adds maintainer script snippets for registering "
"and unregistering the catalogs and supercatalogs (unless B<-n> is used). "
"These snippets are inserted into the maintainer scripts and the B<triggers> "
"file by B<dh_installdeb>; see L<dh_installdeb(1)> for an explanation of "
"Debhelper maintainer script snippets."
msgstr ""
"このコマンドは、カタログや上位カタログを登録・解除する為のメンテナスクリプト"
"のスニペットを (B<-n> を指定しなければ) 自動的に付け加えます。これらのスニ"
"ペットは B<dh_installdeb> によりメンテナスクリプトへ挿入されます。Debhelper "
"メンテナスクリプトのスニペットについては、L<dh_installdeb(1)> を参照くださ"
"い。"

#. type: textblock
#: dh_installcatalogs:34
msgid ""
"A dependency on B<sgml-base> will be added to B<${misc:Depends}>, so be sure "
"your package uses that variable in F<debian/control>."
msgstr ""
"B<sgml-base> への依存関係に関する情報は B<${misc:Depends}> へ追加されるので、"
"F<debian/control> で必ずこの変数を使ってください。"

#. type: =item
#: dh_installcatalogs:41
msgid "debian/I<package>.sgmlcatalogs"
msgstr "debian/I<package>.sgmlcatalogs"

#. type: textblock
#: dh_installcatalogs:43
msgid ""
"Lists the catalogs to be installed per package. Each line in that file "
"should be of the form C<I<source> I<dest>>, where I<source> indicates where "
"the catalog resides in the source tree, and I<dest> indicates the "
"destination location for the catalog under the package build area. I<dest> "
"should start with F</usr/share/sgml/>."
msgstr ""
"パッケージ毎にインストールすべきカタログを列挙します。このファイルには、各々"
"の行が C<I<source> I<dest>> の形式で指定されている必要があります。ここで、"
"I<source> はインストール元のカタログがソースのどこに入っているかを示し、ま"
"た、I<dest> にはビルド領域以下のどこにカタログをインストールすべきかを示しま"
"す。I<dest> は F</usr/share/sgml/> から始まる必要があります。"

#. type: textblock
#: dh_installcatalogs:57
#, fuzzy
msgid ""
"Do not modify F<postinst>/F<postrm>/F<prerm> scripts nor add an activation "
"trigger."
msgstr ""
"F<postinst>/F<postrm>/F<prerm> スクリプトを変更したり、アクティベーションの"
"トリガーを追加しないでください。"

#. type: textblock
#: dh_installcatalogs:64 dh_installemacsen:75 dh_installinit:161
#: dh_installmodules:57 dh_installudev:51 dh_installwm:57 dh_usrlocal:51
msgid ""
"Note that this command is not idempotent. L<dh_prep(1)> should be called "
"between invocations of this command. Otherwise, it may cause multiple "
"instances of the same text to be added to maintainer scripts."
msgstr ""
"このコマンドは複数回実行しても安全なコマンドではありません。このコマンドを複"
"数回呼び出す際には必ず間に L<dh_prep(1)> を挿入してください。さもないと、メン"
"テナスクリプト中に同じ内容のコードを繰り返し挿入してしまいます。"

#. type: textblock
#: dh_installcatalogs:127
msgid "F</usr/share/doc/sgml-base-doc/>"
msgstr "F</usr/share/doc/sgml-base-doc/>"

#. type: textblock
#: dh_installcatalogs:131
msgid "Adam Di Carlo <aph@debian.org>"
msgstr "Adam Di Carlo <aph@debian.org>"

#. type: textblock
#: dh_installchangelogs:5
msgid ""
"dh_installchangelogs - install changelogs into package build directories"
msgstr ""
"dh_installchangelogs - ビルドディレクトリに changelog をインストールする"

#. type: textblock
#: dh_installchangelogs:15
msgid ""
"B<dh_installchangelogs> [S<I<debhelper options>>] [B<-k>] [B<-X>I<item>] "
"[I<upstream>]"
msgstr ""
"B<dh_installchangelogs> [S<I<debhelper options>>] [B<-k>] [B<-X>I<item>] "
"[I<upstream>]"

#. type: textblock
#: dh_installchangelogs:19
msgid ""
"B<dh_installchangelogs> is a debhelper program that is responsible for "
"installing changelogs into package build directories."
msgstr ""
"B<dh_installchangelogs> はパッケージビルドディレクトリに changelog をインス"
"トールを担当する debhelper コマンドです。"

#. type: textblock
#: dh_installchangelogs:22
msgid ""
"An upstream F<changelog> file may be specified as an option. If none is "
"specified, it looks for files with names that seem likely to be changelogs.  "
"(In compatibility level 7 and above.)"
msgstr ""
"開発元 (upstream) に入っている F<changelog> ファイルはオプションとしても指定で"
"きます。何も指定しない場合、changelog とおぼしき名前を持つファイルを探しに行"
"きます (これは互換レベル v7 以上で行われます)。"

#. type: textblock
#: dh_installchangelogs:26
msgid ""
"If there is an upstream F<changelog> file, it will be installed as F<usr/"
"share/doc/package/changelog> in the package build directory."
msgstr ""
"開発元 (upstream) の F<changelog> ファイルがある場合、パッケージビルドディレク"
"トリ中に F<usr/share/doc/package/changelog> としてインストールされます。"

#. type: textblock
#: dh_installchangelogs:29
#, fuzzy
msgid ""
"If the upstream changelog is an F<html> file (determined by file extension), "
"it will be installed as F<usr/share/doc/package/changelog.html> instead. If "
"the html changelog is converted to plain text, that variant can be specified "
"as a second upstream changelog file. When no plain text variant is "
"specified, a short F<usr/share/doc/package/changelog> is generated, pointing "
"readers at the html changelog file."
msgstr ""
"開発元 (upstream) の changelog が F<html> ファイルである場合 (ファイル拡張子で判断され"
"ます)、代わりに F<usr/share/doc/package/changelog.html> としてインストールさ"
"れます。html changelog が平文テキストに変換されると、亜種は２番めの upstream changelog ファイルとして指定できます。平文ではない"

#. type: =item
#: dh_installchangelogs:40
msgid "F<debian/changelog>"
msgstr "F<debian/changelog>"

#. type: =item
#: dh_installchangelogs:42
msgid "F<debian/NEWS>"
msgstr "F<debian/NEWS>"

#. type: =item
#: dh_installchangelogs:44
msgid "debian/I<package>.changelog"
msgstr "debian/I<package>.changelog"

#. type: =item
#: dh_installchangelogs:46
msgid "debian/I<package>.NEWS"
msgstr "debian/I<package>.NEWS"

#. type: textblock
#: dh_installchangelogs:48
msgid ""
"Automatically installed into usr/share/doc/I<package>/ in the package build "
"directory."
msgstr ""
"これらのファイルは、パッケージビルドディレクトリ以下の usr/share/doc/"
"I<package>/ 配下に自動的にインストールされます。"

#. type: textblock
#: dh_installchangelogs:51
msgid ""
"Use the package specific name if I<package> needs a different F<NEWS> or "
"F<changelog> file."
msgstr ""
"I<package> が異なる F<NEWS> や F<changelog> ファイル名を使う必要がある場合は、"
"パッケージ固有の名前を指定してください。"

#. type: textblock
#: dh_installchangelogs:54
msgid ""
"The F<changelog> file is installed with a name of changelog for native "
"packages, and F<changelog.Debian> for non-native packages.  The F<NEWS> file "
"is always installed with a name of F<NEWS.Debian>."
msgstr ""
" F<changelog> ファイルは native パッケージ向けには changelog の名前でインス"
"トールされ、非 native パッケージ向けには F<changelog.Debian> としてインストー"
"ルされます。F<NEWS> は必ず F<NEWS.Debian> の名前でインストールされます。"

#. type: textblock
#: dh_installchangelogs:66
#, fuzzy
msgid ""
"Keep the original name of the upstream changelog. This will be accomplished "
"by installing the upstream changelog as F<changelog>, and making a symlink "
"from that to the original name of the F<changelog> file. This can be useful "
"if the upstream changelog has an unusual name, or if other documentation in "
"the package refers to the F<changelog> file."
msgstr ""
"開発元 (upstream) 付属の changelog の名前を保持します。これは開発元 (upstream) 付"
"属の changelog をF<changelog> としてインストールし、F<changelog> ファイルの元"
"の名前でそのファイルにシンボリックリンクを張ります。これは開発元 (upstream) の "
"changelog が通常ではない名前の場合、あるいはパッケージに含まれる別のドキュメ"
"ントが F<changelog> ファイルを参照している時に便利かもしれません。"

#. type: textblock
#: dh_installchangelogs:74
msgid ""
"Exclude upstream F<changelog> files that contain I<item> anywhere in their "
"filename from being installed."
msgstr ""
"I<item> をファイル名に含む開発元 (upstream) の F<changelog> ファイルをインス"
"トール候補から除外します。"

#. type: =item
#: dh_installchangelogs:77
msgid "I<upstream>"
msgstr "I<upstream>"

#. type: textblock
#: dh_installchangelogs:79
msgid "Install this file as the upstream changelog."
msgstr "このファイルを開発元 (upstream) の changelog としてインストールします。"

#. type: textblock
#: dh_installcron:5
msgid "dh_installcron - install cron scripts into etc/cron.*"
msgstr "dh_installcron - cron スクリプトを etc/cron.* へインストールする"

#. type: textblock
#: dh_installcron:15
msgid "B<dh_installcron> [S<B<debhelper options>>] [B<--name=>I<name>]"
msgstr "B<dh_installcron> [S<B<debhelper options>>] [B<--name=>I<name>]"

#. type: textblock
#: dh_installcron:19
msgid ""
"B<dh_installcron> is a debhelper program that is responsible for installing "
"cron scripts."
msgstr ""
"B<dh_installcron> は cron スクリプトをインストールする役目の debhelper プログ"
"ラムです。"

#. type: =item
#: dh_installcron:26
msgid "debian/I<package>.cron.daily"
msgstr "debian/I<package>.cron.daily"

#. type: =item
#: dh_installcron:28
msgid "debian/I<package>.cron.weekly"
msgstr "debian/I<package>.cron.weekly"

#. type: =item
#: dh_installcron:30
msgid "debian/I<package>.cron.monthly"
msgstr "debian/I<package>.cron.monthly"

#. type: =item
#: dh_installcron:32
msgid "debian/I<package>.cron.hourly"
msgstr "debian/I<package>.cron.hourly"

#. type: =item
#: dh_installcron:34
msgid "debian/I<package>.cron.d"
msgstr "debian/I<package>.cron.d"

#. type: textblock
#: dh_installcron:36
msgid ""
"Installed into the appropriate F<etc/cron.*/> directory in the package build "
"directory."
msgstr ""
"これは、パッケージビルドディレクトリ以下にある適切な F<etc/cron.*/> にそれぞ"
"れインストールされます。"

#. type: =item
#: dh_installcron:45 dh_installifupdown:44 dh_installinit:129
#: dh_installlogcheck:47 dh_installlogrotate:27 dh_installmodules:47
#: dh_installpam:36 dh_installppp:40 dh_installudev:37 dh_systemd_enable:64
msgid "B<--name=>I<name>"
msgstr "B<--name=>I<name>"

#. type: textblock
#: dh_installcron:47
#, fuzzy
msgid ""
"Look for files named F<debian/package.name.cron.*> and install them as F<etc/"
"cron.*/name>, instead of using the usual files and installing them as the "
"package name."
msgstr ""
"F<debian/package.name.cron.*> という名前のファイルを探して F<etc/cron.*/"
"name> としてインストールします。これは、通常のファイルを使わず、また、パッ"
"ケージの名前でインストールしたく無い時に使います。"

#. type: textblock
#: dh_installdeb:5
msgid "dh_installdeb - install files into the DEBIAN directory"
msgstr "dh_installdeb - DEBIAN ディレクトリにファイルをインストールする"

#. type: textblock
#: dh_installdeb:15
msgid "B<dh_installdeb> [S<I<debhelper options>>]"
msgstr "B<dh_installdeb> [S<I<debhelper options>>]"

#. type: textblock
#: dh_installdeb:19
msgid ""
"B<dh_installdeb> is a debhelper program that is responsible for installing "
"files into the F<DEBIAN> directories in package build directories with the "
"correct permissions."
msgstr ""
"B<dh_installdeb> は、パッケージビルドディレクトリにある F<DEBIAN> ディレクト"
"リ以下に、適切な権限を持った状態でファイルをインストールする役目の debhelper "
"プログラムです。"

#. type: =item
#: dh_installdeb:27
msgid "I<package>.postinst"
msgstr "I<package>.postinst"

#. type: =item
#: dh_installdeb:29
msgid "I<package>.preinst"
msgstr "I<package>.preinst"

#. type: =item
#: dh_installdeb:31
msgid "I<package>.postrm"
msgstr "I<package>.postrm"

#. type: =item
#: dh_installdeb:33
msgid "I<package>.prerm"
msgstr "I<package>.prerm"

#. type: textblock
#: dh_installdeb:35
msgid "These maintainer scripts are installed into the F<DEBIAN> directory."
msgstr ""
"これらのメンテナスクリプトは F<DEBIAN> ディレクトリ以下にインストールされま"
"す。"

#. type: textblock
#: dh_installdeb:37
msgid ""
"Inside the scripts, the token B<#DEBHELPER#> is replaced with shell script "
"snippets generated by other debhelper commands."
msgstr ""
"スクリプト中の B<#DEBHELPER#> の文言は、他の debhelper コマンドが生成するシェ"
"ルスクリプトのスニペットで置き換えられます。"

#. type: =item
#: dh_installdeb:40
msgid "I<package>.triggers"
msgstr "I<package>.triggers"

#. type: =item
#: dh_installdeb:42
msgid "I<package>.shlibs"
msgstr "I<package>.shlibs"

#. type: textblock
#: dh_installdeb:44
msgid "These control files are installed into the F<DEBIAN> directory."
msgstr ""
"これらのファイル群は F<DEBIAN> ディレクトリ以下にインストールされます。"

#. type: textblock
#: dh_installdeb:46
msgid ""
"Note that I<package>.shlibs is only installed in compat level 9 and "
"earlier.  In compat 10, please use L<dh_makeshlibs(1)>."
msgstr ""

#. type: =item
#: dh_installdeb:49
msgid "I<package>.conffiles"
msgstr "I<package>.conffiles"

#. type: textblock
#: dh_installdeb:51
msgid "This control file will be installed into the F<DEBIAN> directory."
msgstr ""
"この control ファイルは F<DEBIAN> ディレクトリ以下にインストールされます。"

#. type: textblock
#: dh_installdeb:53
msgid ""
"In v3 compatibility mode and higher, all files in the F<etc/> directory in a "
"package will automatically be flagged as conffiles by this program, so there "
"is no need to list them manually here."
msgstr ""
"互換性レベルが v3 以上の場合、パッケージ内の F<etc/> 以下の全ファイルは、この"
"プログラムにより conffile として自動的にフラグがつけらます。その為、いちいち"
"自分で列挙する必要はありません。"

#. type: =item
#: dh_installdeb:57
msgid "I<package>.maintscript"
msgstr "I<package>.maintscript"

#. type: textblock
#: dh_installdeb:59
msgid ""
"Lines in this file correspond to L<dpkg-maintscript-helper(1)> commands and "
"parameters.  However, the \"maint-script-parameters\" should I<not> be "
"included as debhelper will add those automatically."
msgstr ""

#. type: textblock
#: dh_installdeb:63
msgid "Example:"
msgstr "例:"

#. type: verbatim
#: dh_installdeb:65
#, no-wrap
msgid ""
"    # Correct\n"
"    rm_conffile /etc/obsolete.conf 0.2~ foo\n"
"    # INCORRECT\n"
"    rm_conffile /etc/obsolete.conf 0.2~ foo -- \"$@\"\n"
"\n"
msgstr ""
"    # 正解\n"
"    rm_conffile /etc/obsolete.conf 0.2~ foo\n"
"    # 不正解\n"
"    rm_conffile /etc/obsolete.conf 0.2~ foo -- \"$@\"\n"
"\n"

#. type: textblock
#: dh_installdeb:70
#, fuzzy
msgid ""
"In compat 10 or later, any shell metacharacters will be escaped, so "
"arbitrary shell code cannot be inserted here.  For example, a line such as "
"C<mv_conffile /etc/oldconffile /etc/newconffile> will insert maintainer "
"script snippets into all maintainer scripts sufficient to move that conffile."
msgstr ""
"このファイルに入っている各行は L<dpkg-maintscript-helper(1)> コマンドとパラ"
"メータに関するものです。シェルのメタキャラクタはエスケープされるため、任意の"
"シェルスクリプトをここに挿入することはできません。例えば、C<mv_conffile /etc/"
"oldconffile /etc/newconffile> のような行は、F</etc/oldconffile> をこの行で示"
"される F</etc/newconffile> へ移動できるように、全てのメンテナスクリプトに追加"
"のスクリプトを挿入することを意味します。"

#. type: textblock
#: dh_installdeb:76
#, fuzzy
msgid ""
"It was also the intention to escape shell metacharacters in previous compat "
"levels.  However, it did not work properly and as such it was possible to "
"embed arbitrary shell code in earlier compat levels."
msgstr ""

#. type: textblock
#: dh_installdebconf:5
msgid ""
"dh_installdebconf - install files used by debconf in package build "
"directories"
msgstr ""
"dh_installdebconf - ビルドディレクトリの debconf が使うファイルをインストール"
"する"

#. type: textblock
#: dh_installdebconf:15
msgid ""
"B<dh_installdebconf> [S<I<debhelper options>>] [B<-n>] [S<B<--> I<params>>]"
msgstr ""
"B<dh_installdebconf> [S<I<debhelper options>>] [B<-n>] [S<B<--> I<params>>]"

#. type: textblock
#: dh_installdebconf:19
msgid ""
"B<dh_installdebconf> is a debhelper program that is responsible for "
"installing files used by debconf into package build directories."
msgstr ""
"B<dh_installdebconf> は、debconf により使われるファイルをパッケージビルドディ"
"レクトリへインストールする役割を持つ debhelper プログラムです。"

#. type: textblock
#: dh_installdebconf:22
#, fuzzy
msgid ""
"It also automatically generates the F<postrm> commands needed to interface "
"with debconf. The commands are added to the maintainer scripts by "
"B<dh_installdeb>. See L<dh_installdeb(1)> for an explanation of how that "
"works."
msgstr ""
"このコマンドは debconf に整合するのに必要な F<postrm> ファイルを自動的に生成"
"します。このコマンドは B<dh_installdeb> によりメンテナスクリプトへ追加されま"
"す。この追加に関する動作についての説明は、L<dh_installdeb(1)> にあります。"

#. type: textblock
#: dh_installdebconf:27
msgid ""
"Note that if you use debconf, your package probably needs to depend on it "
"(it will be added to B<${misc:Depends}> by this program)."
msgstr ""
"debconf を使うと、パッケージは debconf に対して依存するという事に注意してくだ"
"さい (本プログラムにより B<${misc:Depends}> へ依存関係の追加が行われます)。"

#. type: textblock
#: dh_installdebconf:30
msgid ""
"Note that for your config script to be called by B<dpkg>, your F<postinst> "
"needs to source debconf's confmodule. B<dh_installdebconf> does not install "
"this statement into the F<postinst> automatically as it is too hard to do it "
"right."
msgstr ""
"B<dpkg> により設定用スクリプトが呼び出されることになりますが、F<postinst> "
"ファイルには debconf の confmodule を含める必要があることに注意してください。"
"B<dh_installdebconf> はこの作業を F<postinst> へ自動的に挿入しません。という"
"のも、これを自動的に正しく行うのは非常に難しいからです。"

#. type: =item
#: dh_installdebconf:39
msgid "debian/I<package>.config"
msgstr "debian/I<package>.config"

#. type: textblock
#: dh_installdebconf:41
msgid ""
"This is the debconf F<config> script, and is installed into the F<DEBIAN> "
"directory in the package build directory."
msgstr ""
"これはdebconfの F<config> スクリプトです。パッケージビルドディレクトリ以下に"
"ある F<DEBIAN> ディレクトリにインストールされます。"

#. type: textblock
#: dh_installdebconf:44
msgid ""
"Inside the script, the token B<#DEBHELPER#> is replaced with shell script "
"snippets generated by other debhelper commands."
msgstr ""
"本スクリプト内に記載されている B<#DEBHELPER#> という文言は他の debhelper コマ"
"ンドにより生成されたシェルスクリプトのスニペットによって置き換えられます。"

#. type: =item
#: dh_installdebconf:47
msgid "debian/I<package>.templates"
msgstr "debian/I<package>.templates"

#. type: textblock
#: dh_installdebconf:49
msgid ""
"This is the debconf F<templates> file, and is installed into the F<DEBIAN> "
"directory in the package build directory."
msgstr ""
"これは debconf の F<templates> ファイルです。パッケージビルドディレクトリの "
"F<DEBIAN> ディレクトリ以下にインストールされます。 "

#. type: =item
#: dh_installdebconf:52
msgid "F<debian/po/>"
msgstr "F<debian/po/>"

#. type: textblock
#: dh_installdebconf:54
msgid ""
"If this directory is present, this program will automatically use "
"L<po2debconf(1)> to generate merged templates files that include the "
"translations from there."
msgstr ""
"もしこのディレクトリが存在すれば、このプログラムは自動的に L<po2debconf(1)> "
"を呼び出し、このディレクトリ以下にある翻訳されたファイルを含む結合された "
"debconf テンプレートファイルを生成します。"

#. type: textblock
#: dh_installdebconf:58
msgid "For this to work, your package should build-depend on F<po-debconf>."
msgstr ""
"これが動作する為には、F<po-debconf> に関するビルド依存の指定がパッケージに必"
"要です。"

#. type: textblock
#: dh_installdebconf:68
msgid "Do not modify F<postrm> script."
msgstr "F<postrm> ファイルの変更を行いません。"

#. type: textblock
#: dh_installdebconf:72
msgid "Pass the params to B<po2debconf>."
msgstr "B<po2debconf> へパラメータを引き渡します。"

#. type: textblock
#: dh_installdirs:5
msgid "dh_installdirs - create subdirectories in package build directories"
msgstr ""
"dh_installdirs - パッケージビルドディレクトリ以下にサブディレクトリを作成する"

#. type: textblock
#: dh_installdirs:15
msgid "B<dh_installdirs> [S<I<debhelper options>>] [B<-A>] [S<I<dir> ...>]"
msgstr "B<dh_installdirs> [S<I<debhelper options>>] [B<-A>] [S<I<dir> ...>]"

#. type: textblock
#: dh_installdirs:19
msgid ""
"B<dh_installdirs> is a debhelper program that is responsible for creating "
"subdirectories in package build directories."
msgstr ""
"B<dh_installdirs> はパッケージビルドディレクトリ以下にサブディレクトリを作成"
"する役目を持つ debhelper プログラムです。"

#. type: textblock
#: dh_installdirs:22
#, fuzzy
msgid ""
"Many packages can get away with omitting the call to B<dh_installdirs> "
"completely.  Notably, other B<dh_*> commands are expected to create "
"directories as needed."
msgstr ""

#. type: =item
#: dh_installdirs:30
msgid "debian/I<package>.dirs"
msgstr "debian/I<package>.dirs"

#. type: textblock
#: dh_installdirs:32
msgid "Lists directories to be created in I<package>."
msgstr "I<package> 以下に作るディレクトリを列挙します"

#. type: textblock
#: dh_installdirs:34
#, fuzzy
msgid ""
"Generally, there is no need to list directories created by the upstream "
"build system or directories needed by other B<debhelper> commands."
msgstr ""

#. type: textblock
#: dh_installdirs:46
msgid ""
"Create any directories specified by command line parameters in ALL packages "
"acted on, not just the first."
msgstr ""
"コマンドラインパラメータに指定されたディレクトリを作成します。この場合、最初"
"のパッケージのみならず全パッケージに作用します。"

#. type: =item
#: dh_installdirs:49
msgid "I<dir> ..."
msgstr "I<dir> ..."

#. type: textblock
#: dh_installdirs:51
msgid ""
"Create these directories in the package build directory of the first package "
"acted on. (Or in all packages if B<-A> is specified.)"
msgstr ""
"動作する最初のパッケージのパッケージビルドディレクトリ以下に指定されたディレ"
"クトリを作成します (あるいは、B<-A> が指定されれば、全パッケージのパッケージ"
"ビルドディレクトリに対して行われます)。"

#. type: textblock
#: dh_installdocs:5
msgid "dh_installdocs - install documentation into package build directories"
msgstr ""
"dh_installdocs - パッケージビルドディレクトリ以下にドキュメントをインストール"
"する"

#. type: textblock
#: dh_installdocs:15
msgid ""
"B<dh_installdocs> [S<I<debhelper options>>] [B<-A>] [B<-X>I<item>] "
"[S<I<file> ...>]"
msgstr ""
"B<dh_installdocs> [S<I<debhelper options>>] [B<-A>] [B<-X>I<item>] "
"[S<I<file> ...>]"

#. type: textblock
#: dh_installdocs:19
msgid ""
"B<dh_installdocs> is a debhelper program that is responsible for installing "
"documentation into F<usr/share/doc/package> in package build directories."
msgstr ""
"B<dh_installdocs> はパッケージビルドディレクトリ以下にある F<usr/share/doc/"
"package> ディレクトリへドキュメントをインストールする役割を持つ debhelper プ"
"ログラムです。"

#. type: =item
#: dh_installdocs:26
msgid "debian/I<package>.docs"
msgstr "debian/I<package>.docs"

#. type: textblock
#: dh_installdocs:28
msgid "List documentation files to be installed into I<package>."
msgstr ""
"I<package> にインストールすべきドキュメントファイルの一覧を列挙します。"

#. type: textblock
#: dh_installdocs:30
msgid ""
"In compat 11 (or later), these will be installed into F</usr/share/doc/"
"mainpackage>.  Previously it would be F</usr/share/doc/package>."
msgstr ""

#. type: =item
#: dh_installdocs:34
msgid "F<debian/copyright>"
msgstr "F<debian/copyright>"

#. type: textblock
#: dh_installdocs:36
#, fuzzy
msgid ""
"The copyright file is installed into all packages, unless a more specific "
"copyright file is available."
msgstr ""
"より特定の copyright ファイルが利用できない限り、copyright ファイルは全ての"
"パッケージにインストールされます。"

#. type: =item
#: dh_installdocs:39
msgid "debian/I<package>.copyright"
msgstr "debian/I<package>.copyright"

#. type: =item
#: dh_installdocs:41
msgid "debian/I<package>.README.Debian"
msgstr "debian/I<package>.README.Debian"

#. type: =item
#: dh_installdocs:43
msgid "debian/I<package>.TODO"
msgstr "debian/I<package>.TODO"

#. type: textblock
#: dh_installdocs:45
#, fuzzy
msgid ""
"Each of these files is automatically installed if present for a I<package>."
msgstr "I<package> があれば、これらのファイルは自動的にインストールされます。"

#. type: =item
#: dh_installdocs:48
msgid "F<debian/README.Debian>"
msgstr "F<debian/README.Debian>"

#. type: =item
#: dh_installdocs:50
msgid "F<debian/TODO>"
msgstr "F<debian/TODO>"

#. type: textblock
#: dh_installdocs:52
msgid ""
"These files are installed into the first binary package listed in debian/"
"control."
msgstr ""
"これらのファイルは debian/control に最初に記載されているバイナリパッケージへ"
"インストールされます。"

#. type: textblock
#: dh_installdocs:55
msgid ""
"Note that F<README.debian> files are also installed as F<README.Debian>, and "
"F<TODO> files will be installed as F<TODO.Debian> in non-native packages."
msgstr ""
"非 native パッケージの元では、F<README.debian> ファイルは F<README.Debian> と"
"してインストールされ、F<TODO> ファイルは F<TODO.Debian> としてインストールさ"
"れます。"

#. type: =item
#: dh_installdocs:58
msgid "debian/I<package>.doc-base"
msgstr "debian/I<package>.doc-base"

#. type: textblock
#: dh_installdocs:60
#, fuzzy
msgid ""
"Installed as doc-base control files. Note that the doc-id will be determined "
"from the B<Document:> entry in the doc-base control file in question. In the "
"event that multiple doc-base files in a single source package share the same "
"doc-id, they will be installed to usr/share/doc-base/package instead of usr/"
"share/doc-base/doc-id."
msgstr ""
"doc-base 制御ファイルとしてインストールされます。なお、doc-id は doc-base 制"
"御ファイル中の B<Document:> エントリから決定されます。"

#. type: =item
#: dh_installdocs:66
msgid "debian/I<package>.doc-base.*"
msgstr "debian/I<package>.doc-base.*"

#. type: textblock
#: dh_installdocs:68
#, fuzzy
msgid ""
"If your package needs to register more than one document, you need multiple "
"doc-base files, and can name them like this. In the event that multiple doc-"
"base files of this style in a single source package share the same doc-id, "
"they will be installed to usr/share/doc-base/package-* instead of usr/share/"
"doc-base/doc-id."
msgstr ""
"usr/share/doc-base/doc-id の代わりに usr/share/doc-base/package-* にインス"
"トールされます。"

#. type: textblock
#: dh_installdocs:82 dh_installinfo:38 dh_installman:68
msgid ""
"Install all files specified by command line parameters in ALL packages acted "
"on."
msgstr ""
"全パッケージに対して、コマンドラインパラメータに指定されたファイルを全てイン"
"ストールします。"

#. type: textblock
#: dh_installdocs:87
msgid ""
"Exclude files that contain I<item> anywhere in their filename from being "
"installed. Note that this includes doc-base files."
msgstr ""
"インストール対象のファイルから、I<item> をファイル名に含むものを除外します。"
"これには doc-base のファイルも含む点に注意ください。"

#. type: =item
#: dh_installdocs:90
msgid "B<--link-doc=>I<package>"
msgstr "B<--link-doc=>I<package>"

#. type: textblock
#: dh_installdocs:92
msgid ""
"Make the documentation directory of all packages acted on be a symlink to "
"the documentation directory of I<package>. This has no effect when acting on "
"I<package> itself, or if the documentation directory to be created already "
"exists when B<dh_installdocs> is run. To comply with policy, I<package> must "
"be a binary package that comes from the same source package."
msgstr ""
"処理対象の全パッケージのドキュメンテーションディレクトリを、I<package> のド"
"キュメンテーションディレクトリへのシンボリックリンクを張ることにより作成しま"
"す。この動作は I<package> そのものには行われず、また、B<dh_installdocs> が動"
"作する時に既に存在しているディレクトリに対しては行われません。ポリシーに準拠"
"する為、I<package> は同じソースパッケージからビルドされるバイナリパッケージで"
"ある必要があります。"

#. type: textblock
#: dh_installdocs:98
msgid ""
"debhelper will try to avoid installing files into linked documentation "
"directories that would cause conflicts with the linked package. The B<-A> "
"option will have no effect on packages with linked documentation "
"directories, and F<copyright>, F<changelog>, F<README.Debian>, and F<TODO> "
"files will not be installed."
msgstr ""
"debhelper はファイルをインストール時にシンボリックリンク先のパッケージとの競"
"合を避ける為、シンボリックリンクで作成されているドキュメンテーションディレク"
"トリにはファイルをインストールしません。B<-A> オプションはシンボリックリンク"
"で作成されたディレクトリには作用しません。さらに、この場合、F<copyright>, "
"F<changelog>, F<README.Debian>, F<TODO> ファイルはインストールされません。"

#. type: textblock
#: dh_installdocs:104
#, fuzzy
msgid ""
"(An older method to accomplish the same thing, which is still supported, is "
"to make the documentation directory of a package be a dangling symlink, "
"before calling B<dh_installdocs>.)"
msgstr ""
"(同じ作用をする古い手法で、かつ、現在もなおサポートされているやり方として、"
"B<dh_installdocs> を起動する前に、シンボリックリンクの指し示す先が実際には存"
"在しないディレクトリへのシンボリックリンクをパッケージのドキュメンテーション"
"ディレクトリとして、あらかじめ作成しておくという手があります)。"

#. type: textblock
#: dh_installdocs:108
msgid ""
"B<CAVEAT>: If a previous version of the package was built without this "
"option and is now built with it (or vice-versa), it requires a \"dir to "
"symlink\" (or \"symlink to dir\") migration.  Since debhelper has no "
"knowledge of previous versions, you have to enable this migration itself."
msgstr ""

#. type: textblock
#: dh_installdocs:114
#, fuzzy
msgid ""
"This can be done by providing a \"debian/I<package>.maintscript\" file and "
"using L<dh_installdeb(1)> to provide the relevant maintainer script snippets."
msgstr ""

#. type: textblock
#: dh_installdocs:120
msgid ""
"Install these files as documentation into the first package acted on. (Or in "
"all packages if B<-A> is specified)."
msgstr ""
"作業予定の最初のパッケージに、これらのファイルをドキュメントファイルとしてイ"
"ンストールします (あるいは B<-A> が指定されている場合は、ビルド予定の全ての"
"パッケージに対してインストールします) "

#. type: textblock
#: dh_installdocs:127
msgid "This is an example of a F<debian/package.docs> file:"
msgstr "以下が F<debian/package.docs> ファイルの例です:"

#. type: verbatim
#: dh_installdocs:129
#, no-wrap
msgid ""
"  README\n"
"  TODO\n"
"  debian/notes-for-maintainers.txt\n"
"  docs/manual.txt\n"
"  docs/manual.pdf\n"
"  docs/manual-html/\n"
"\n"
msgstr ""
"  README\n"
"  TODO\n"
"  debian/notes-for-maintainers.txt\n"
"  docs/manual.txt\n"
"  docs/manual.pdf\n"
"  docs/manual-html/\n"
"\n"

#. type: textblock
#: dh_installdocs:138
#, fuzzy
msgid ""
"Note that B<dh_installdocs> will happily copy entire directory hierarchies "
"if you ask it to (similar to B<cp -a>). If it is asked to install a "
"directory, it will install the complete contents of the directory."
msgstr ""
"B<dh_installdocs> は、B<cp -a> と同じようにディレクトリ全体の階層まるごとコ"
"ピーするように指定するのが良いと思われます。これはディレクトリをインストール"
"するように指定する事により行い、この場合、ディレクトリの中身全部がインストー"
"ルされます。"

#. type: textblock
#: dh_installemacsen:5
msgid "dh_installemacsen - register an Emacs add on package"
msgstr "dh_installemacsen - Emacsのアドオンパッケージを登録する"

#. type: textblock
#: dh_installemacsen:15
msgid ""
"B<dh_installemacsen> [S<I<debhelper options>>] [B<-n>] [B<--priority=>I<n>] "
"[B<--flavor=>I<foo>]"
msgstr ""
"B<dh_installemacsen> [S<I<debhelper options>>] [B<-n>] [B<--priority=>I<n>] "
"[B<--flavor=>I<foo>]"

#. type: textblock
#: dh_installemacsen:19
msgid ""
"B<dh_installemacsen> is a debhelper program that is responsible for "
"installing files used by the Debian B<emacsen-common> package into package "
"build directories."
msgstr ""
"B<dh_installemacsen> は、Debian B<emacsen-common> パッケージに利用されるファ"
"イルをパッケージビルドディレクトリへインストールする役目の debhelper プログラ"
"ムです。"

#. type: textblock
#: dh_installemacsen:23
msgid ""
"It also automatically generates the F<preinst> F<postinst> and F<prerm> "
"commands needed to register a package as an Emacs add on package. The "
"commands are added to the maintainer scripts by B<dh_installdeb>. See "
"L<dh_installdeb(1)> for an explanation of how this works."
msgstr ""
"パッケージを Emacs アドオンパッケージとして登録するのに必要な F<postinst>, "
"F<prerm>, F<prerm> を自動的に生成します。B<dh_installdeb> によって、コマンド"
"がメンテナスクリプトに追加されます。どのように動作するかについては、"
"L<dh_installdeb(1)> を参照ください。"

#. type: =item
#: dh_installemacsen:32
msgid "debian/I<package>.emacsen-compat"
msgstr "debian/I<package>.emacsen-compat"

#. type: textblock
#: dh_installemacsen:34
msgid ""
"Installed into F<usr/lib/emacsen-common/packages/compat/package> in the "
"package build directory."
msgstr ""
"パッケージビルドディレクトリ内の F<usr/lib/emacsen-common/packages/compat/"
"package> へインストールされます。"

#. type: =item
#: dh_installemacsen:37
msgid "debian/I<package>.emacsen-install"
msgstr "debian/I<package>.emacsen-install"

#. type: textblock
#: dh_installemacsen:39
msgid ""
"Installed into F<usr/lib/emacsen-common/packages/install/package> in the "
"package build directory."
msgstr ""
"パッケージビルドディレクトリ内の F<usr/lib/emacsen-common/packages/install/"
"package> へインストールされます。"

#. type: =item
#: dh_installemacsen:42
msgid "debian/I<package>.emacsen-remove"
msgstr "debian/I<package>.emacsen-remove"

#. type: textblock
#: dh_installemacsen:44
msgid ""
"Installed into F<usr/lib/emacsen-common/packages/remove/package> in the "
"package build directory."
msgstr ""
"パッケージビルドディレクトリ内の F<usr/lib/emacsen-common/packages/remove/"
"package> へインストールされます。"

#. type: =item
#: dh_installemacsen:47
msgid "debian/I<package>.emacsen-startup"
msgstr "debian/I<package>.emacsen-startup"

#. type: textblock
#: dh_installemacsen:49
msgid ""
"Installed into etc/emacs/site-start.d/50I<package>.el in the package build "
"directory. Use B<--priority> to use a different priority than 50."
msgstr ""
"パッケージビルドディレクトリの etc/emacs/site-start.d/50I<package>.el へイン"
"ストールします。優先順位を 50 以外を指定するには B<--priority> を使います。"

#. type: textblock
#: dh_installemacsen:60 dh_usrlocal:45
msgid "Do not modify F<postinst>/F<prerm> scripts."
msgstr "F<postinst>/F<prerm> を変更しません。"

#. type: =item
#: dh_installemacsen:62 dh_installwm:39
msgid "B<--priority=>I<n>"
msgstr "B<--priority=>I<n>"

#. type: textblock
#: dh_installemacsen:64
msgid "Sets the priority number of a F<site-start.d> file. Default is 50."
msgstr ""
"F<site-start.d> ファイルに関して優先順位を指定します。デフォルトは 50 です。"

#. type: =item
#: dh_installemacsen:66
msgid "B<--flavor=>I<foo>"
msgstr "B<--flavor=>I<foo>"

#. type: textblock
#: dh_installemacsen:68
msgid ""
"Sets the flavor a F<site-start.d> file will be installed in. Default is "
"B<emacs>, alternatives include B<xemacs> and B<emacs20>."
msgstr ""
"インストール予定の F<site-start.d> ファイルの形式を設定します。デフォルトは "
"B<emacs> で、他に B<xemacs> と B<emacs20> 形式が存在します。"

#. type: textblock
#: dh_installemacsen:137
msgid "L<debhelper(7)> L</usr/share/doc/emacsen-common/debian-emacs-policy.gz>"
msgstr ""
"L<debhelper(7)> L</usr/share/doc/emacsen-common/debian-emacs-policy.gz>"

#. type: textblock
#: dh_installexamples:5
msgid ""
"dh_installexamples - install example files into package build directories"
msgstr ""
"dh_installexamples - 参考ファイルをビルドディレクトリへインストールする"

#. type: textblock
#: dh_installexamples:15
msgid ""
"B<dh_installexamples> [S<I<debhelper options>>] [B<-A>] [B<-X>I<item>] "
"[S<I<file> ...>]"
msgstr ""
"B<dh_installexamples> [S<I<debhelper options>>] [B<-A>] [B<-X>I<item>] "
"[S<I<file> ...>]"

#. type: textblock
#: dh_installexamples:19
msgid ""
"B<dh_installexamples> is a debhelper program that is responsible for "
"installing examples into F<usr/share/doc/package/examples> in package build "
"directories."
msgstr ""
"B<dh_installexamples> はパッケージビルドディレクトリにある F<usr/share/doc/"
"package/examples> へ参考ファイルをインストールする役割の debhelper プログラム"
"です。"

#. type: =item
#: dh_installexamples:27
msgid "debian/I<package>.examples"
msgstr "debian/I<package>.examples"

#. type: textblock
#: dh_installexamples:29
#, fuzzy
msgid "Lists example files or directories to be installed."
msgstr ""
"インストールする予定の例を示すファイルもしくは、ディレクトリを指定します。"

#. type: textblock
#: dh_installexamples:39
#, fuzzy
msgid ""
"Install any files specified by command line parameters in ALL packages acted "
"on."
msgstr ""
"作業予定の全てのパッケージに対して、コマンドラインパラメータで指定されたファ"
"イルをインストールします。"

#. type: textblock
#: dh_installexamples:49
msgid ""
"Install these files (or directories) as examples into the first package "
"acted on. (Or into all packages if B<-A> is specified.)"
msgstr ""
"作業を行う最初のパッケージに、指定されたファイル (あるいはディレクトリ) を例"
"を示す物としてインストールします (あるいは、B<-A>が指定された場合は、全ての"
"パッケージに対してインストールを行います)。"

#. type: textblock
#: dh_installexamples:56
msgid ""
"Note that B<dh_installexamples> will happily copy entire directory "
"hierarchies if you ask it to (similar to B<cp -a>). If it is asked to "
"install a directory, it will install the complete contents of the directory."
msgstr ""
"特記すべき事として、もし指定されれば (B<cp -a> のように) 、ディレクトリ以下ま"
"るごとコピーするようにすると便利です。もし、インストールもとディレクトリを指"
"定すれば、このコマンドはディレクトリ以下全部をインストールします。"

#. type: textblock
#: dh_installifupdown:5
msgid "dh_installifupdown - install if-up and if-down hooks"
msgstr "dh_installifupdown - if-up と if-down フックをインストールします"

#. type: textblock
#: dh_installifupdown:15
msgid "B<dh_installifupdown> [S<I<debhelper options>>] [B<--name=>I<name>]"
msgstr "B<dh_installifupdown> [S<I<debhelper options>>] [B<--name=>I<name>]"

#. type: textblock
#: dh_installifupdown:19
msgid ""
"B<dh_installifupdown> is a debhelper program that is responsible for "
"installing F<if-up>, F<if-down>, F<if-pre-up>, and F<if-post-down> hook "
"scripts into package build directories."
msgstr ""
"B<dh_installifupdown> は F<if-up>, F<if-down>, F<if-pre-up>, F<if-post-down> "
"フックをパッケージビルドディレクトリ以下にインストールする為の debhelper プロ"
"グラムです。"

#. type: =item
#: dh_installifupdown:27
msgid "debian/I<package>.if-up"
msgstr "debian/I<package>.if-up"

#. type: =item
#: dh_installifupdown:29
msgid "debian/I<package>.if-down"
msgstr "debian/I<package>.if-down"

#. type: =item
#: dh_installifupdown:31
msgid "debian/I<package>.if-pre-up"
msgstr "debian/I<package>.if-pre-up"

#. type: =item
#: dh_installifupdown:33
msgid "debian/I<package>.if-post-down"
msgstr "debian/I<package>.if-post-down"

#. type: textblock
#: dh_installifupdown:35
msgid ""
"These files are installed into etc/network/if-*.d/I<package> in the package "
"build directory."
msgstr ""
"これらファイルは、パッケージビルドディレクトリ以下にある、etc/network/if-*.d/"
"I<package> 以下にインストールされます。"

#. type: textblock
#: dh_installifupdown:46
msgid ""
"Look for files named F<debian/package.name.if-*> and install them as F<etc/"
"network/if-*/name>, instead of using the usual files and installing them as "
"the package name."
msgstr ""
"F<debian/package.name.if-*> ファイルを見つけ出し、F<etc/network/if-*/name> へ"
"インストールします。この時、本オプションを指定しない時に行われるような、通常"
"ファイルのインストールとは違い、ファイルがパッケージ名としてインストールされ"
"る事はありません。"

#. type: textblock
#: dh_installinfo:5
msgid "dh_installinfo - install info files"
msgstr "dh_installinfo - info ファイルをインストールする"

#. type: textblock
#: dh_installinfo:15
msgid "B<dh_installinfo> [S<I<debhelper options>>] [B<-A>] [S<I<file> ...>]"
msgstr "B<dh_installinfo> [S<I<debhelper options>>] [B<-A>] [S<I<file> ...>]"

#. type: textblock
#: dh_installinfo:19
msgid ""
"B<dh_installinfo> is a debhelper program that is responsible for installing "
"info files into F<usr/share/info> in the package build directory."
msgstr ""
"B<dh_installinfo> は、パッケージビルドディレクトリ内の F<usr/share/info> ディ"
"レクトリ以下に info ファイルをインストールします。"

#. type: =item
#: dh_installinfo:26
msgid "debian/I<package>.info"
msgstr "debian/I<package>.info"

#. type: textblock
#: dh_installinfo:28
msgid "List info files to be installed."
msgstr "インストールすべき info ファイルを列挙したものです。"

#. type: textblock
#: dh_installinfo:43
msgid ""
"Install these info files into the first package acted on. (Or in all "
"packages if B<-A> is specified)."
msgstr ""
"こちらにて指定される info ファイルを、処理を行う最初のパッケージにインストー"
"ルします (B<-A> が指定されていれば、全パッケージに対してインストールされま"
"す) "

#. type: textblock
#: dh_installinit:5
msgid ""
"dh_installinit - install service init files into package build directories"
msgstr ""
"dh_installinit - ビルドディレクトリに service init ファイルをインストールする"

#. type: textblock
#: dh_installinit:16
msgid ""
"B<dh_installinit> [S<I<debhelper options>>] [B<--name=>I<name>] [B<-n>] [B<-"
"R>] [B<-r>] [B<-d>] [S<B<--> I<params>>]"
msgstr ""
"B<dh_installinit> [S<I<debhelper options>>] [B<--name=>I<name>] [B<-n>] [B<-"
"R>] [B<-r>] [B<-d>] [S<B<--> I<params>>]"

#. type: textblock
#: dh_installinit:20
#, fuzzy
msgid ""
"B<dh_installinit> is a debhelper program that is responsible for installing "
"init scripts with associated defaults files, as well as upstart job files, "
"and systemd service files into package build directories."
msgstr ""
"B<dh_installlint> は、デフォルトで利用される init スクリプトと、アップスター"
"ト用のジョブファイルをパッケージビルドディレクトリへインストールする役目の "
"debhelper プログラムです。"

#. type: textblock
#: dh_installinit:24
msgid ""
"It also automatically generates the F<postinst> and F<postrm> and F<prerm> "
"commands needed to set up the symlinks in F</etc/rc*.d/> to start and stop "
"the init scripts."
msgstr ""
"このコマンドは、F</etc/rc*.d/> 以下にシンボリックリンクを張り、start と stop "
"手続きを持つような init スクリプトをセットアップするのに必要な F<postinst>, "
"F<postrm>, F<prerm> コマンドを自動的に生成します。"

#. type: =item
#: dh_installinit:32
msgid "debian/I<package>.init"
msgstr "debian/I<package>.init"

#. type: textblock
#: dh_installinit:34
msgid ""
"If this exists, it is installed into etc/init.d/I<package> in the package "
"build directory."
msgstr ""
"もし本ファイルが存在すれば、パッケージビルドディレクトリ以下の etc/init/"
"I<package> ディレクトリにインストールされます。"

#. type: =item
#: dh_installinit:37
msgid "debian/I<package>.default"
msgstr "debian/I<package>.default"

#. type: textblock
#: dh_installinit:39
msgid ""
"If this exists, it is installed into etc/default/I<package> in the package "
"build directory."
msgstr ""
"もしこちらが存在すれば、パッケージビルドディレクトリ内の etc/default/"
"I<package> へこのファイルをインストールします。"

#. type: =item
#: dh_installinit:42
msgid "debian/I<package>.upstart"
msgstr "debian/I<package>.upstart"

#. type: textblock
#: dh_installinit:44
msgid ""
"If this exists, it is installed into etc/init/I<package>.conf in the package "
"build directory."
msgstr ""
"もし本ファイルが存在すれば、パッケージビルドディレクトリ以下に etc/init/"
"I<package>.conf ファイルとしてインストールされます。"

#. type: =item
#: dh_installinit:47 dh_systemd_enable:43
msgid "debian/I<package>.service"
msgstr "debian/I<package>.service"

#. type: textblock
#: dh_installinit:49
#, fuzzy
msgid ""
"If this exists, it is installed into lib/systemd/system/I<package>.service "
"in the package build directory. Only used in compat levels 10 and below."
msgstr ""
"もし本ファイルが存在すれば、パッケージビルドディレクトリ以下に etc/init/"
"I<package>.conf ファイルとしてインストールされます。"

#. type: =item
#: dh_installinit:52 dh_systemd_enable:48
msgid "debian/I<package>.tmpfile"
msgstr "debian/I<package>.tmpfile"

#. type: textblock
#: dh_installinit:54
#, fuzzy
msgid ""
"If this exists, it is installed into usr/lib/tmpfiles.d/I<package>.conf in "
"the package build directory. (The tmpfiles.d mechanism is currently only "
"used by systemd.) Only used in compat levels 10 and below."
msgstr ""
"もし本ファイルが存在すれば、パッケージビルドディレクトリ以下に etc/init/"
"I<package>.conf ファイルとしてインストールされます。"

#. type: textblock
#: dh_installinit:66
msgid "Do not modify F<postinst>/F<postrm>/F<prerm> scripts."
msgstr "F<postinst>/F<postrm>/F<prerm> スクリプトは変更しないでください。"

#. type: =item
#: dh_installinit:68
msgid "B<-o>, B<--only-scripts>"
msgstr "B<-o>, B<--only-scripts>"

#. type: textblock
#: dh_installinit:70
#, fuzzy
msgid ""
"Only modify F<postinst>/F<postrm>/F<prerm> scripts, do not actually install "
"any init script, default files, upstart job or systemd service file. May be "
"useful if the file is shipped and/or installed by upstream in a way that "
"doesn't make it easy to let B<dh_installinit> find it."
msgstr ""
"本オプションが指定されていると、実際に init スクリプト、デフォルトに使うファ"
"イル、upstart 用 job ファイルをインストールせず、F<postinst>/F<postrm>/"
"F<prerm> スクリプトを変更するだけの動作となります。もし、initスクリプトや、"
"upstart 用 job ファイルが、B<dh_installinit> にて容易に見つけられないようなや"
"り方で、開発元 (upstream) に含まれていたり、あるいはインストールされているよう"
"な場合に都合が良いです。"

#. type: textblock
#: dh_installinit:75
#, fuzzy
msgid ""
"B<Caveat>: This will bypass all the regular checks and I<unconditionally> "
"modify the scripts.  You will almost certainly want to use this with B<-p> "
"to limit, which packages are affected by the call.  Example:"
msgstr ""

#. type: verbatim
#: dh_installinit:80
#, no-wrap
msgid ""
" override_dh_installinit:\n"
"\tdh_installinit -pfoo --only-scripts\n"
"\tdh_installinit --remaining\n"
"\n"
msgstr ""
" override_dh_installinit:\n"
"\tdh_installinit -pfoo --only-scripts\n"
"\tdh_installinit --remaining\n"
"\n"

#. type: =item
#: dh_installinit:84
msgid "B<-R>, B<--restart-after-upgrade>"
msgstr "B<-R>, B<--restart-after-upgrade>"

#. type: textblock
#: dh_installinit:86
#, fuzzy
msgid ""
"Do not stop the init script until after the package upgrade has been "
"completed.  This is the default behaviour in compat 10."
msgstr ""
"パッケージのアップグレードが完了するまで init スクリプトの stop 手続きを呼び"
"出さないようにします。これはこのコマンドについて、デフォルトの振る舞いとは異"
"なります。通常は、F<prerm> にて stop 手続きが呼ばれ、F<postinst> が start 手"
"続きを再び呼び出します。"

#. type: textblock
#: dh_installinit:89
#, fuzzy
msgid ""
"In early compat levels, the default was to stop the script in the F<prerm>, "
"and starts it again in the F<postinst>."
msgstr ""
"パッケージのアップグレードが完了するまで init スクリプトの stop 手続きを呼び"
"出さないようにします。これはこのコマンドについて、デフォルトの振る舞いとは異"
"なります。通常は、F<prerm> にて stop 手続きが呼ばれ、F<postinst> が start 手"
"続きを再び呼び出します。"

#. type: textblock
#: dh_installinit:92 dh_systemd_start:43
msgid ""
"This can be useful for daemons that should not have a possibly long downtime "
"during upgrade. But you should make sure that the daemon will not get "
"confused by the package being upgraded while it's running before using this "
"option."
msgstr ""
"このオプションは、アップグレード中に長く動作が停止してはいけないような "
"daemon を扱う際に便利です。しかしながら、このオプションを利用して "
"dh_installinit が処理をしている間のアップグレード途中のパッケージを daemon が"
"参照して混乱しないことを保証する必要があります。"

#. type: =item
#: dh_installinit:97 dh_systemd_start:48
msgid "B<--no-restart-after-upgrade>"
msgstr "B<--no-restart-after-upgrade>"

#. type: textblock
#: dh_installinit:99 dh_systemd_start:50
msgid ""
"Undo a previous B<--restart-after-upgrade> (or the default of compat 10).  "
"If no other options are given, this will cause the service to be stopped in "
"the F<prerm> script and started again in the F<postinst> script."
msgstr ""

#. type: =item
#: dh_installinit:104 dh_systemd_start:55
msgid "B<-r>, B<--no-stop-on-upgrade>, B<--no-restart-on-upgrade>"
msgstr "B<-r>, B<--no-stop-on-upgrade>, B<--no-restart-on-upgrade>"

#. type: textblock
#: dh_installinit:106
msgid "Do not stop init script on upgrade."
msgstr "init スクリプトをアップグレード中には停止させません。"

#. type: =item
#: dh_installinit:108 dh_systemd_start:59
msgid "B<--no-start>"
msgstr "B<--no-start>"

#. type: textblock
#: dh_installinit:110
msgid ""
"Do not start the init script on install or upgrade, or stop it on removal.  "
"Only call B<update-rc.d>. Useful for rcS scripts."
msgstr ""
"インストール時、あるいはアップグレード時に init スクリプトを start させませ"
"ん。あるいは、パッケージを削除する時にも stop 手続きが呼ばれなくなります。そ"
"の一方で、B<update-rc.d> のみ呼び出されます。本オプションは rcS スクリプトを"
"インストールする際に便利です。"

#. type: =item
#: dh_installinit:113
msgid "B<-d>, B<--remove-d>"
msgstr "B<-d>, B<--remove-d>"

#. type: textblock
#: dh_installinit:115
#, fuzzy
msgid ""
"Remove trailing B<d> from the name of the package, and use the result for "
"the filename the upstart job file is installed as in F<etc/init/> , and for "
"the filename the init script is installed as in etc/init.d and the default "
"file is installed as in F<etc/default/>. This may be useful for daemons with "
"names ending in B<d>. (Note: this takes precedence over the B<--init-script> "
"parameter described below.)"
msgstr ""
"パッケージ名の最後の B<d> を取り除いたものをF<etc/init/>以下にインストールす"
"るupstart 用 job ファイルの名前として利用します。あるいは、etc/init.d 以下に"
"インストールするinitスクリプトの名前として利用します。さらに、F<etc/default/"
"> 以下にインストールするファイルとしても利用します。これは、名前の最後が "
"B<d> で終わるような daemon プログラムに便利な場合があります (後に述べる B<--"
"init-script> パラメータが作用するより前に実行されます)。"

#. type: =item
#: dh_installinit:122
msgid "B<-u>I<params> B<--update-rcd-params=>I<params>"
msgstr "B<-u>I<params> B<--update-rcd-params=>I<params>"

#. type: textblock
#: dh_installinit:126
msgid ""
"Pass I<params> to L<update-rc.d(8)>. If not specified, B<defaults> will be "
"passed to L<update-rc.d(8)>."
msgstr ""
"I<params> を L<update-rc.d(8)> へ渡します。もし指定されていなければ、"
"B<defaults> パラメータが L<update-rc.d(8)> へ渡されます。"

#. type: textblock
#: dh_installinit:131
msgid ""
"Install the init script (and default file) as well as upstart job file using "
"the filename I<name> instead of the default filename, which is the package "
"name. When this parameter is used, B<dh_installinit> looks for and installs "
"files named F<debian/package.name.init>, F<debian/package.name.default> and "
"F<debian/package.name.upstart> instead of the usual F<debian/package.init>, "
"F<debian/package.default> and F<debian/package.upstart>."
msgstr ""
"パッケージ名の代わりに、I<name> をファイル名とするファイルを、upstart 用 job "
"ファイルや、init スクリプト (あるいはデフォルトのファイル) として利用します。"
"このパラメータが利用されると、B<dh_installinit> は F<debian/package.name."
"upstart>、F<debian/package.name.init>、F<debian/package.name.default> を探"
"し、インストールを行います。この場合、通常使われる F<debian/package."
"upstart>、F<debian/package.init>、F<debian/package.default> は利用されませ"
"ん。"

#. type: =item
#: dh_installinit:139
msgid "B<--init-script=>I<scriptname>"
msgstr "B<--init-script=>I<scriptname>"

#. type: textblock
#: dh_installinit:141
msgid ""
"Use I<scriptname> as the filename the init script is installed as in F<etc/"
"init.d/> (and also use it as the filename for the defaults file, if it is "
"installed). If you use this parameter, B<dh_installinit> will look to see if "
"a file in the F<debian/> directory exists that looks like F<package."
"scriptname> and if so will install it as the init script in preference to "
"the files it normally installs."
msgstr ""
"I<scriptname> を F<etc/init.d/> 以下にインストールする init スクリプトのファ"
"イル名として利用します (デフォルトのファイルがインストールされるなら、その時"
"の名前として利用する場合もあります) 。もしこのパラメータを利用すると、"
"B<dh_installinit> は F<debian/> ディレクトリ以下に F<package.scriptname> のよ"
"うな名前のファイルがあるかどうかを探し、通常インストールするファイルよりも、"
"優先してこのような名前を持つファイルを init スクリプトとして扱うようになりま"
"す。"

#. type: textblock
#: dh_installinit:148
msgid ""
"This parameter is deprecated, use the B<--name> parameter instead. This "
"parameter is incompatible with the use of upstart jobs."
msgstr ""
"このパラメータは廃止されています。代わりに B<--name> パラメータを利用くださ"
"い。なお、B<--init-script=>I<scriptname> では upstart 用 job ファイルを扱うよ"
"うには出来ていません。"

#. type: =item
#: dh_installinit:151
msgid "B<--error-handler=>I<function>"
msgstr "B<--error-handler=>I<function>"

#. type: textblock
#: dh_installinit:153
msgid ""
"Call the named shell I<function> if running the init script fails. The "
"function should be provided in the F<prerm> and F<postinst> scripts, before "
"the B<#DEBHELPER#> token."
msgstr ""
"もしinitスクリプトの動作が失敗に終わった時、シェル関数の I<function> を呼び出"
"すようにします。この関数は、F<prerm> や F<postinst> の中で定義されていなけれ"
"ばならず、また、B<#DEBHELPER#> 句が現れるよりも前に定義されている必要がありま"
"す。 "

#. type: textblock
#: dh_installinit:341
msgid "Steve Langasek <steve.langasek@canonical.com>"
msgstr "Steve Langasek <steve.langasek@canonical.com>"

#. type: textblock
#: dh_installinit:343
msgid "Michael Stapelberg <stapelberg@debian.org>"
msgstr "Michael Stapelberg <stapelberg@debian.org>"

#. type: textblock
#: dh_installlogcheck:5
msgid "dh_installlogcheck - install logcheck rulefiles into etc/logcheck/"
msgstr ""
"dh_installlogcheck - etc/logcheck/ に logcheck 用ルールファイルをインストール"
"する"

#. type: textblock
#: dh_installlogcheck:15
msgid "B<dh_installlogcheck> [S<I<debhelper options>>]"
msgstr "B<dh_installlogcheck> [S<I<debhelper options>>]"

#. type: textblock
#: dh_installlogcheck:19
msgid ""
"B<dh_installlogcheck> is a debhelper program that is responsible for "
"installing logcheck rule files."
msgstr ""
"B<dh_installlogcheck> は logcheck 用のルール定義ファイルをインストールする役"
"目の debhelper プログラムです。"

#. type: =item
#: dh_installlogcheck:26
msgid "debian/I<package>.logcheck.cracking"
msgstr "debian/I<package>.logcheck.cracking"

#. type: =item
#: dh_installlogcheck:28
msgid "debian/I<package>.logcheck.violations"
msgstr "debian/I<package>.logcheck.violations"

#. type: =item
#: dh_installlogcheck:30
msgid "debian/I<package>.logcheck.violations.ignore"
msgstr "debian/I<package>.logcheck.violations.ignore"

#. type: =item
#: dh_installlogcheck:32
msgid "debian/I<package>.logcheck.ignore.workstation"
msgstr "debian/I<package>.logcheck.ignore.workstation"

#. type: =item
#: dh_installlogcheck:34
msgid "debian/I<package>.logcheck.ignore.server"
msgstr "debian/I<package>.logcheck.ignore.server"

#. type: =item
#: dh_installlogcheck:36
msgid "debian/I<package>.logcheck.ignore.paranoid"
msgstr "debian/I<package>.logcheck.ignore.paranoid"

#. type: textblock
#: dh_installlogcheck:38
msgid ""
"Each of these files, if present, are installed into corresponding "
"subdirectories of F<etc/logcheck/> in package build directories."
msgstr ""
"これらのファイルが存在する場合、パッケージビルドディレクトリ内の F<etc/"
"logcheck/> サブディレクトリ以下にファイルに応じてインストールされます。"

#. type: textblock
#: dh_installlogcheck:49
msgid ""
"Look for files named F<debian/package.name.logcheck.*> and install them into "
"the corresponding subdirectories of F<etc/logcheck/>, but use the specified "
"name instead of that of the package."
msgstr ""
"F<debian/package.name.logcheck.*> の名前を持つファイルを探し、これらを F<etc/"
"logcheck/> 以下の各ファイルに応じた場所へインストールします。この時、パッケー"
"ジの名前を使わず指定された名前を利用します。"

#. type: verbatim
#: dh_installlogcheck:83
#, no-wrap
msgid ""
"This program is a part of debhelper.\n"
"    \n"
msgstr ""
"このプログラムはdebhelperの一部です。\n"
"    \n"

#. type: textblock
#: dh_installlogcheck:87
msgid "Jon Middleton <jjm@debian.org>"
msgstr "Jon Middleton <jjm@debian.org>"

#. type: textblock
#: dh_installlogrotate:5
msgid "dh_installlogrotate - install logrotate config files"
msgstr "dh_installlogrotate - logrotate用設定ファイルをインストールする"

#. type: textblock
#: dh_installlogrotate:15
msgid "B<dh_installlogrotate> [S<I<debhelper options>>] [B<--name=>I<name>]"
msgstr "B<dh_installlogrotate> [S<I<debhelper options>>] [B<--name=>I<name>]"

#. type: textblock
#: dh_installlogrotate:19
msgid ""
"B<dh_installlogrotate> is a debhelper program that is responsible for "
"installing logrotate config files into F<etc/logrotate.d> in package build "
"directories.  Files named F<debian/package.logrotate> are installed."
msgstr ""
"B<dh_installlogrotate> はパッケージビルドディレクトリ内にある F<etc/"
"logrotate.d> へ logrotate 用設定ファイルをインストールする役目の debhelper プ"
"ログラムとなります。F<debian/package.logrotate> という名前を持つファイル群が"
"インストールされます。"

#. type: textblock
#: dh_installlogrotate:29
msgid ""
"Look for files named F<debian/package.name.logrotate> and install them as "
"F<etc/logrotate.d/name>, instead of using the usual files and installing "
"them as the package name."
msgstr ""
"F<debian/package.name.logrotate> という名前を持つファイルを探し、F<etc/"
"logrotate.d/name> としてインストールを行います。この場合、通常使うファイルを"
"利用せず、パッケージ名を持つファイルとしてインストールは行いません。"

#. type: textblock
#: dh_installman:5
msgid "dh_installman - install man pages into package build directories"
msgstr ""
"dh_installman - パッケージビルドディレクトリ以下に man ページをインストールす"
"る"

#. type: textblock
#: dh_installman:16
msgid "B<dh_installman> [S<I<debhelper options>>] [S<I<manpage> ...>]"
msgstr "B<dh_installman> [S<I<debhelper options>>] [S<I<manpage> ...>]"

#. type: textblock
#: dh_installman:20
msgid ""
"B<dh_installman> is a debhelper program that handles installing man pages "
"into the correct locations in package build directories. You tell it what "
"man pages go in your packages, and it figures out where to install them "
"based on the section field in their B<.TH> or B<.Dt> line. If you have a "
"properly formatted B<.TH> or B<.Dt> line, your man page will be installed "
"into the right directory, with the right name (this includes proper handling "
"of pages with a subsection, like B<3perl>, which are placed in F<man3>, and "
"given an extension of F<.3perl>). If your B<.TH> or B<.Dt> line is incorrect "
"or missing, the program may guess wrong based on the file extension."
msgstr ""
"B<dh_installman> は、パッケージビルドディレクトリ内の正しい位置に man ページ"
"をインストールするd ebhelper プログラムです。パッケージにどんな man ページが"
"入っているかを指定すると、各 man ページに記載されている B<.TH> や B<.Dt> 行に"
"ある章番号に基づき man ページをどこにインストールすれば良いかを見つけ出しま"
"す。書式どおりの正しい B<.TH> や B<.Dt> があれば、その man ページは正しいディ"
"レクトリに、正しい名前でインストールされます (これは、例えば B<3perl>で あれ"
"ば、適切なサブセクションに対する man ページとして扱われ、F<man3> 以下にインス"
"トールされ、F<.3perl> という拡張子が与えられるという事も含みます)。もし、B<."
"TH> や B<.Dt> が間違っていたり、あるいはなかったりした場合、プログラムはイン"
"ストールしようとしている man ページのファイルの拡張子から、間違った判断をする"
"可能性があります。"

#. type: textblock
#: dh_installman:30
msgid ""
"It also supports translated man pages, by looking for extensions like F<."
"ll.8> and F<.ll_LL.8>, or by use of the B<--language> switch."
msgstr ""
"このコマンドは翻訳された man ページについても、F<.ll.8> や F<.ll_LL.8> の拡張"
"子に持つファイルを探す事により、あるいは、B<--language> を指定することによっ"
"て扱います。"

#. type: textblock
#: dh_installman:33
msgid ""
"If B<dh_installman> seems to install a man page into the wrong section or "
"with the wrong extension, this is because the man page has the wrong section "
"listed in its B<.TH> or B<.Dt> line. Edit the man page and correct the "
"section, and B<dh_installman> will follow suit. See L<man(7)> for details "
"about the B<.TH> section, and L<mdoc(7)> for the B<.Dt> section. If "
"B<dh_installman> seems to install a man page into a directory like F</usr/"
"share/man/pl/man1/>, that is because your program has a name like F<foo.pl>, "
"and B<dh_installman> assumes that means it is translated into Polish. Use "
"B<--language=C> to avoid this."
msgstr ""
"B<dh_installman> が間違った章番号や、間違った拡張子をつけて man ページをイン"
"ストールするように見えるときがあります。これは、man ページが間違った章番号を "
"B<.TH> や B<.Dt> 行に列挙しているのが原因です。この場合、man ページを編集し"
"て、章番号を正しくすれば、B<dh_installman> は意図どおりに動作するようになりま"
"す。B<.TH> 章についての詳細は L<man(7)> を参照ください。さらに、B<.Dt> 章につ"
"いては、L<mdoc(7)> を参照ください。また、B<dh_installman> が F</usr/share/"
"man/pl/man1/> のようなディレクトリへ man ページをインストールしてしまう場合が"
"あります。これは、パッケージにF <foo.pl> のような名前を持つファイルがあり、"
"B<dh_installman> がこれをポーランド語への翻訳済み man ページと勘違いする時と"
"なります。この動作を避けるには、B<--language=C> を利用してください。"

#. type: textblock
#: dh_installman:43
msgid ""
"After the man page installation step, B<dh_installman> will check to see if "
"any of the man pages in the temporary directories of any of the packages it "
"is acting on contain F<.so> links. If so, it changes them to symlinks."
msgstr ""
"B<dh_installman> は、man ページをインストールした後に、処理を行ったパッケージ"
"内の一時ディレクトリ以下にある全 man ページを対象に、F<.so> リンクを含むかど"
"うかを確認します。もし存在するようであれば、その man ページ本体をシンボリック"
"リンクへ変更します。"

#. type: textblock
#: dh_installman:47
msgid ""
"Also, B<dh_installman> will use man to guess the character encoding of each "
"manual page and convert it to UTF-8. If the guesswork fails for some reason, "
"you can override it using an encoding declaration. See L<manconv(1)> for "
"details."
msgstr ""
"また、B<dh_installman> は man コマンドを使って、man ページの文字コードを推定"
"し、UTF-8 に変換します。この推定作業は失敗に終わる事があるので、文字コード宣"
"言文を使って検出されるべき文字コードの情報を上書きできます。詳細については "
"L<manconv(1)> を参照ください。"

#. type: =item
#: dh_installman:56
msgid "debian/I<package>.manpages"
msgstr "debian/I<package>.manpages"

#. type: textblock
#: dh_installman:58
msgid "Lists man pages to be installed."
msgstr "インストールされるべき man ページを列挙したものです。"

#. type: =item
#: dh_installman:71
msgid "B<--language=>I<ll>"
msgstr "B<--language=>I<ll>"

#. type: textblock
#: dh_installman:73
msgid ""
"Use this to specify that the man pages being acted on are written in the "
"specified language."
msgstr ""
"処理予定の man ページがどんな言語で記載されているかをこちらのオプションを使っ"
"て指定します。"

#. type: =item
#: dh_installman:76
msgid "I<manpage> ..."
msgstr "I<manpage> ..."

#. type: textblock
#: dh_installman:78
msgid ""
"Install these man pages into the first package acted on. (Or in all packages "
"if B<-A> is specified)."
msgstr ""
"最初に処理するパッケージにこれらの man ページをインストールします (あるいは、"
"B<-A> が指定された場合は、全パッケージにインストールを行います) "

#. type: textblock
#: dh_installman:85
msgid ""
"An older version of this program, L<dh_installmanpages(1)>, is still used by "
"some packages, and so is still included in debhelper.  It is, however, "
"deprecated, due to its counterintuitive and inconsistent interface. Use this "
"program instead."
msgstr ""
"本プログラムの昔のバージョンのプログラムである L<dh_installmanpages(1)> を未"
"だに利用しているパッケージが存在します。また、L<dh_installmanpages(1)> は未だ"
"に debhelper に梱包されています。しかしながら、このプログラムは、非直感的で統"
"一されていないインターフェースの為に、すでに廃止となっています。代わりに本プ"
"ログラムを使ってください。"

#. type: textblock
#: dh_installmanpages:5
msgid "dh_installmanpages - old-style man page installer (deprecated)"
msgstr ""
"dh_installmanpages - 古いスタイルの man ページのインストール用プログラム (廃"
"止)"

#. type: textblock
#: dh_installmanpages:16
msgid "B<dh_installmanpages> [S<I<debhelper options>>] [S<I<file> ...>]"
msgstr "B<dh_installmanpages> [S<I<debhelper options>>] [S<I<file> ...>]"

#. type: textblock
#: dh_installmanpages:20
msgid ""
"B<dh_installmanpages> is a debhelper program that is responsible for "
"automatically installing man pages into F<usr/share/man/> in package build "
"directories."
msgstr ""
"B<dh_installmanpages> はパッケージビルドディレクトリ以下にある F<usr/share/"
"man/> ディレクトリへ man ページを自動的にインストールする役目の debhelper プ"
"ログラムです。"

#. type: textblock
#: dh_installmanpages:24
msgid ""
"This is a DWIM-style program, with an interface unlike the rest of "
"debhelper. It is deprecated, and you are encouraged to use "
"L<dh_installman(1)> instead."
msgstr ""
"これは、いわゆる「良きに計らえ (DWIM)」スタイルのプログラムであり、"
"他の debhelper とはインターフェース仕様が異なります。本プログラムは廃止さ"
"れているので、代わりに L<dh_installman(1)> コマンドを使うようにしてください。"

#. type: textblock
#: dh_installmanpages:28
msgid ""
"B<dh_installmanpages> scans the current directory and all subdirectories for "
"filenames that look like man pages. (Note that only real files are looked "
"at; symlinks are ignored.) It uses L<file(1)> to verify that the files are "
"in the correct format. Then, based on the files' extensions, it installs "
"them into the correct man directory."
msgstr ""
"B<dh_installmanpages> は man ページらしき名前を持つファイルを、カレントディレ"
"クトリや、カレントディレクトリ以下の全てのサブディレクトリで探し回ります "
"(ファイルの実体のみが対象となります。つまり、シンボリックリンクは無視されま"
"す)。本プログラムは、L<file(1)> コマンドを使ってファイルが正しいフォーマット"
"であるかを検証します。その為、拡張子にしたがい、処理対象の man ページを正し"
"い man ページ用ディレクトリへインストールします。"

#. type: textblock
#: dh_installmanpages:34
msgid ""
"All filenames specified as parameters will be skipped by "
"B<dh_installmanpages>.  This is useful if by default it installs some man "
"pages that you do not want to be installed."
msgstr ""
"パラメータとして指定されているファイルは、全て B<dh_installmanpages> により無"
"視されます。これは、デフォルトでは意図しない場所に man ページがインストールさ"
"れてしまう場合に便利です。"

#. type: textblock
#: dh_installmanpages:38
msgid ""
"After the man page installation step, B<dh_installmanpages> will check to "
"see if any of the man pages are F<.so> links. If so, it changes them to "
"symlinks."
msgstr ""
"manページのインストールが終わったあと、B<dh_installmanpages> は処理対象の "
"man ページが F<.so> リンクの対象であるかどうかを調べます。もしそうであれば、"
"こちらをシンボリックリンクへ変更します。"

#. type: textblock
#: dh_installmanpages:47
msgid ""
"Do not install these files as man pages, even if they look like valid man "
"pages."
msgstr ""
"有効な man ページのようにみえても、これらファイルを man ページとしてインス"
"トールしないようにします。"

#. type: =head1
#: dh_installmanpages:52
msgid "BUGS"
msgstr "バグ"

#. type: textblock
#: dh_installmanpages:54
msgid ""
"B<dh_installmanpages> will install the man pages it finds into B<all> "
"packages you tell it to act on, since it can't tell what package the man "
"pages belong in. This is almost never what you really want (use B<-p> to "
"work around this, or use the much better L<dh_installman(1)> program "
"instead)."
msgstr ""
"B<dh_installmanpages> は作業するように指定した B<全パッケージ> で発見した "
"man ページをいっぺんにインストールしてしまいます。これは、どのパッケージにど"
"の man ページが対応しているかについて指定する方法がない為です。この動作は多く"
"のケースで必ずしも望ましくない動作となります (B<-p> を指定する事により、本問"
"題を回避できますが、もっと良いのは、L<dh_installman(1)> を代わりに使う事で"
"す)。"

#. type: textblock
#: dh_installmanpages:59
msgid "Files ending in F<.man> will be ignored."
msgstr "F<.man> でファイル名が終わっているファイルは無視されます。"

#. type: textblock
#: dh_installmanpages:61
msgid ""
"Files specified as parameters that contain spaces in their filenames will "
"not be processed properly."
msgstr ""
"スペースを含むファイル名を持つファイルをパラメータに指定すると、正しく扱われ"
"ません。"

#. type: textblock
#: dh_installmenu:5
msgid ""
"dh_installmenu - install Debian menu files into package build directories"
msgstr ""
"dh_installmenu - ビルドディレクトリへ Debian メニューファイルをインストールす"
"る"

#. type: textblock
#: dh_installmenu:15
msgid "B<dh_installmenu> [S<B<debhelper options>>] [B<-n>]"
msgstr "B<dh_installmenu> [S<B<debhelper options>>] [B<-n>]"

#. type: textblock
#: dh_installmenu:19
msgid ""
"B<dh_installmenu> is a debhelper program that is responsible for installing "
"files used by the Debian B<menu> package into package build directories."
msgstr ""
"B<dh_installmenu> は Debian B<menu> パッケージを使ってパッケージビルドディレ"
"クトリ以下にファイルをインストールする役目の debhelper プログラムです。"

#. type: textblock
#: dh_installmenu:22
msgid ""
"It also automatically generates the F<postinst> and F<postrm> commands "
"needed to interface with the Debian B<menu> package. These commands are "
"inserted into the maintainer scripts by L<dh_installdeb(1)>."
msgstr ""
"このプログラムは、Debian B<menu> と連携するのに必要な内容を含む F<postinst> "
"と F<postrm> コマンドを自動的に生成します。生成された F<postinst> と "
"F<postrm> コマンドは L<dh_installdeb(1)> によりメンテナスクリプトへ組み込まれ"
"ます。"

#. type: =item
#: dh_installmenu:30
msgid "debian/I<package>.menu"
msgstr "debian/I<package>.menu"

#. type: textblock
#: dh_installmenu:32
#, fuzzy
msgid ""
"In compat 11, this file is no longer installed the format has been "
"deprecated.  Please migrate to a desktop file instead."
msgstr ""

#. type: textblock
#: dh_installmenu:35
msgid ""
"Debian menu files, installed into usr/share/menu/I<package> in the package "
"build directory. See L<menufile(5)> for its format."
msgstr ""
"Debianメニューファイルです。パッケージビルドディレクトリ以下の usr/share/"
"menu/I<package> へインストールされます。フォーマットについては "
"L<menufile(5)> を参照ください。"

#. type: =item
#: dh_installmenu:38
msgid "debian/I<package>.menu-method"
msgstr "debian/I<package>.menu-method"

#. type: textblock
#: dh_installmenu:40
msgid ""
"Debian menu method files, installed into etc/menu-methods/I<package> in the "
"package build directory."
msgstr ""
"Debian メニューメソッドファイルです。こちらはパッケージビルドディレクトリ以下"
"にある etc/menu-methods/I<package> へインストールされます。"

#. type: textblock
#: dh_installmenu:51
msgid "Do not modify F<postinst>/F<postrm> scripts."
msgstr "F<postinst>/F<postrm> スクリプトを変更しません。"

#. type: textblock
#: dh_installmenu:96
msgid "L<debhelper(7)> L<update-menus(1)> L<menufile(5)>"
msgstr "L<debhelper(7)> L<update-menus(1)> L<menufile(5)>"

#. type: textblock
#: dh_installmime:5
msgid "dh_installmime - install mime files into package build directories"
msgstr "dh_installmime - mime ファイルをビルドディレクトリへインストールする"

#. type: textblock
#: dh_installmime:15
msgid "B<dh_installmime> [S<I<debhelper options>>]"
msgstr "B<dh_installmime> [S<I<debhelper options>>]"

#. type: textblock
#: dh_installmime:19
msgid ""
"B<dh_installmime> is a debhelper program that is responsible for installing "
"mime files into package build directories."
msgstr ""
"B<dh_installmime> はパッケージビルドディレクトリ以下に mime ファイル群をイン"
"ストールする役目の debhelper プログラムです。"

#. type: =item
#: dh_installmime:26
msgid "debian/I<package>.mime"
msgstr "debian/I<package>.mime"

#. type: textblock
#: dh_installmime:28
msgid ""
"Installed into usr/lib/mime/packages/I<package> in the package build "
"directory."
msgstr ""
"パッケージビルドディレクトリ内の usr/lib/mime/packages/I<package> へインス"
"トールされます。"

#. type: =item
#: dh_installmime:31
msgid "debian/I<package>.sharedmimeinfo"
msgstr "debian/I<package>.sharedmimeinfo"

#. type: textblock
#: dh_installmime:33
msgid ""
"Installed into /usr/share/mime/packages/I<package>.xml in the package build "
"directory."
msgstr ""
"パッケージビルドディレクトリ内の /usr/share/mime/packages/I<package>.xml へイ"
"ンストールされます。"

#. type: textblock
#: dh_installmodules:5
msgid "dh_installmodules - register kernel modules"
msgstr "dh_installmodules - カーネルモジュールを登録する"

#. type: textblock
#: dh_installmodules:16
msgid ""
"B<dh_installmodules> [S<I<debhelper options>>] [B<-n>] [B<--name=>I<name>]"
msgstr ""
"B<dh_installmodules> [S<I<debhelper options>>] [B<-n>] [B<--name=>I<name>]"

#. type: textblock
#: dh_installmodules:20
msgid ""
"B<dh_installmodules> is a debhelper program that is responsible for "
"registering kernel modules."
msgstr ""
"B<dh_installmodules> は、カーネルモジュールを登録する役目の debhelper プログ"
"ラムです。"

#. type: textblock
#: dh_installmodules:23
msgid ""
"Kernel modules are searched for in the package build directory and if found, "
"F<preinst>, F<postinst> and F<postrm> commands are automatically generated "
"to run B<depmod> and register the modules when the package is installed.  "
"These commands are inserted into the maintainer scripts by "
"L<dh_installdeb(1)>."
msgstr ""
"パッケージビルドディレクトリ以下にて、カーネルモジュールを探し、見つけると、"
"F<preinst>, F<postinst>, F<postrm> コマンドが自動的に生成されます。これらコマ"
"ンドは、パッケージをインストールする際に、B<depmod> を実行し、カーネルモ"
"ジュールを登録するような内容となっております。これらのコマンドは "
"L<dh_installdeb(1)> によりメンテナスクリプトへ挿入されます。 "

#. type: =item
#: dh_installmodules:33
msgid "debian/I<package>.modprobe"
msgstr "debian/I<package>.modprobe"

#. type: textblock
#: dh_installmodules:35
msgid ""
"Installed to etc/modprobe.d/I<package>.conf in the package build directory."
msgstr ""
"これらファイルは、パッケージビルドディレクトリ以下の etc/modprobe.d/"
"I<package>.conf へインストールされます。"

#. type: textblock
#: dh_installmodules:45
msgid "Do not modify F<preinst>/F<postinst>/F<postrm> scripts."
msgstr "F<preinst>/F<postinst>/F<postrm> スクリプトを変更しません。"

#. type: textblock
#: dh_installmodules:49
msgid ""
"When this parameter is used, B<dh_installmodules> looks for and installs "
"files named debian/I<package>.I<name>.modprobe instead of the usual debian/"
"I<package>.modprobe"
msgstr ""
"このパラメータが利用されると、B<dh_installmodules> は通常利用する debian/"
"I<package>.modprobe ファイルの代わりに debian/I<package>.I<name>.modprobe "
"ファイルをインストールします。"

#. type: textblock
#: dh_installpam:5
msgid "dh_installpam - install pam support files"
msgstr "dh_installpam - pam サポートファイルをインストールする"

#. type: textblock
#: dh_installpam:15
msgid "B<dh_installpam> [S<I<debhelper options>>] [B<--name=>I<name>]"
msgstr "B<dh_installpam> [S<I<debhelper options>>] [B<--name=>I<name>]"

#. type: textblock
#: dh_installpam:19
msgid ""
"B<dh_installpam> is a debhelper program that is responsible for installing "
"files used by PAM into package build directories."
msgstr ""
"B<dh_installpam> はパッケージビルドディレクトリ以下に PAM で利用するファイル"
"をインストールする役目の debhelper プログラムです。"

#. type: =item
#: dh_installpam:26
msgid "debian/I<package>.pam"
msgstr "debian/I<package>.pam"

#. type: textblock
#: dh_installpam:28
msgid "Installed into etc/pam.d/I<package> in the package build directory."
msgstr ""
"これらファイルはパッケージビルドディレクトリ内の etc/pam.d/I<package> へイン"
"ストールされます。"

#. type: textblock
#: dh_installpam:38
msgid ""
"Look for files named debian/I<package>.I<name>.pam and install them as etc/"
"pam.d/I<name>, instead of using the usual files and installing them using "
"the package name."
msgstr ""
"debian/I<package>.I<name>.pam と名のつくファイルを探し、etc/pam.d/I<name> 以"
"下にこれらのファイルをインストールします。こちらのオプションを利用すると通常"
"のファイルはインストール対象とはならず、パッケージの名前でインストールする動"
"作もしなくなります。"

#. type: textblock
#: dh_installppp:5
msgid "dh_installppp - install ppp ip-up and ip-down files"
msgstr "dh_installppp - ppp 用の ip-up, ip-down ファイルをインストールする"

#. type: textblock
#: dh_installppp:15
msgid "B<dh_installppp> [S<I<debhelper options>>] [B<--name=>I<name>]"
msgstr "B<dh_installppp> [S<I<debhelper options>>] [B<--name=>I<name>]"

#. type: textblock
#: dh_installppp:19
msgid ""
"B<dh_installppp> is a debhelper program that is responsible for installing "
"ppp ip-up and ip-down scripts into package build directories."
msgstr ""
"B<dh_installppp> は ppp 用の ip-up, ip-down スクリプトをパッケージビルドディ"
"レクトリ以下にインストールする役目を持つ debhelper プログラムです。"

#. type: =item
#: dh_installppp:26
msgid "debian/I<package>.ppp.ip-up"
msgstr "debian/I<package>.ppp.ip-up"

#. type: textblock
#: dh_installppp:28
msgid ""
"Installed into etc/ppp/ip-up.d/I<package> in the package build directory."
msgstr ""
"これらファイルはパッケージビルドディレクトリ以下に etc/ppp/ip-up.d/"
"I<package> としてインストールされます。"

#. type: =item
#: dh_installppp:30
msgid "debian/I<package>.ppp.ip-down"
msgstr "debian/I<package>.ppp.ip-down"

#. type: textblock
#: dh_installppp:32
msgid ""
"Installed into etc/ppp/ip-down.d/I<package> in the package build directory."
msgstr ""
"これらファイルは、パッケージビルドディレクトリ以下に etc/ppp/ip-down.d/"
"I<package> としてインストールされます。"

#. type: textblock
#: dh_installppp:42
msgid ""
"Look for files named F<debian/package.name.ppp.ip-*> and install them as "
"F<etc/ppp/ip-*/name>, instead of using the usual files and installing them "
"as the package name."
msgstr ""
"F<debian/package.name.ppp.ip-*> と名前のつくファイルを探し、F<etc/ppp/ip-*/"
"name> 以下にこれらをインストールします。こちらが指定されると、通常インストー"
"ルされるファイルはインストール対象とならず、また、インストールの際にパッケー"
"ジの名前としてインストールする動作を行いません。"

#. type: textblock
#: dh_installudev:5
msgid "dh_installudev - install udev rules files"
msgstr "dh_installudev - udev 用ルールファイルをインストールする"

#. type: textblock
#: dh_installudev:16
msgid ""
"B<dh_installudev> [S<I<debhelper options>>] [B<-n>] [B<--name=>I<name>] [B<--"
"priority=>I<priority>]"
msgstr ""
"B<dh_installudev> [S<I<debhelper options>>] [B<-n>] [B<--name=>I<name>] [B<--"
"priority=>I<priority>]"

#. type: textblock
#: dh_installudev:20
msgid ""
"B<dh_installudev> is a debhelper program that is responsible for installing "
"B<udev> rules files."
msgstr ""
"B<dh_installudev> は B<udev> 用ルールファイルをインストールする役目を持つ "
"debhelper プログラムです。"

#. type: =item
#: dh_installudev:27
msgid "debian/I<package>.udev"
msgstr "debian/I<package>.udev"

#. type: textblock
#: dh_installudev:29
msgid "Installed into F<lib/udev/rules.d/> in the package build directory."
msgstr ""
"これらファイルは、パッケージビルドディレクトリ内の F<lib/udev/rules.d/> へイ"
"ンストールされます。"

#. type: textblock
#: dh_installudev:39
msgid ""
"When this parameter is used, B<dh_installudev> looks for and installs files "
"named debian/I<package>.I<name>.udev instead of the usual debian/I<package>."
"udev."
msgstr ""
"このパラメータを利用する時は、B<dh_installudev> は debian/I<package>.I<name>."
"udev と名前のあるファイルを探してインストールします。通常使われるはずの "
"debian/I<package>.udev はこのパラメータが利用されている場合は利用されません。"

#. type: =item
#: dh_installudev:43
msgid "B<--priority=>I<priority>"
msgstr "B<--priority=>I<priority>"

#. type: textblock
#: dh_installudev:45
msgid "Sets the priority the file. Default is 60."
msgstr "ファイルの優先順位を指定します。デフォルトは 60 です。"

#. type: textblock
#: dh_installwm:5
msgid "dh_installwm - register a window manager"
msgstr "dh_installwm - ウィンドウマネージャを登録する"

#. type: textblock
#: dh_installwm:15
msgid ""
"B<dh_installwm> [S<I<debhelper options>>] [B<-n>] [B<--priority=>I<n>] "
"[S<I<wm> ...>]"
msgstr ""
"B<dh_installwm> [S<I<debhelper options>>] [B<-n>] [B<--priority=>I<n>] "
"[S<I<wm> ...>]"

#. type: textblock
#: dh_installwm:19
msgid ""
"B<dh_installwm> is a debhelper program that is responsible for generating "
"the F<postinst> and F<prerm> commands that register a window manager with "
"L<update-alternatives(8)>. The window manager's man page is also registered "
"as a slave symlink (in v6 mode and up), if it is found in F<usr/share/man/"
"man1/> in the package build directory."
msgstr ""
"B<dh_installwm> は、L<update-alternatives(8)> によりウインドウマネージャを登"
"録するような F<postinst> と F<prerm> コマンドを生成する役割の debhelper プロ"
"グラムとなります。もし、インストールしようとしているウインドウマネージャの "
"man ページが、パッケージビルドディレクトリ以下の F<usr/share/man/man1/> に存"
"在する場合、この man ページはパッケージビルドディレクトリ以下にシンボリックリ"
"ンクで登録されます (互換性レベル v6 以上)。"

#. type: =item
#: dh_installwm:29
msgid "debian/I<package>.wm"
msgstr "debian/I<package>.wm"

#. type: textblock
#: dh_installwm:31
msgid "List window manager programs to register."
msgstr "登録すべきウインドウマネージャを列挙します。"

#. type: textblock
#: dh_installwm:41
msgid ""
"Set the priority of the window manager. Default is 20, which is too low for "
"most window managers; see the Debian Policy document for instructions on "
"calculating the correct value."
msgstr ""
"ウインドウマネージャの優先順位を設定します。デフォルトは 20 で、こちらはほと"
"んどのウインドウマネージャには低すぎる優先順位です。正しい値を算出する手順に"
"ついては、Debian ポリシーマニュアルを参照してください。"

#. type: textblock
#: dh_installwm:47
msgid ""
"Do not modify F<postinst>/F<prerm> scripts. Turns this command into a no-op."
msgstr ""
"F<postinst>/F<prerm> スクリプトを変更しません。このコマンドにより、スクリプト"
"の動作については何も影響を与えないようにします。"

#. type: =item
#: dh_installwm:49
msgid "I<wm> ..."
msgstr "I<wm> ..."

#. type: textblock
#: dh_installwm:51
msgid "Window manager programs to register."
msgstr "登録されるウインドウマネージャ。"

#. type: textblock
#: dh_installxfonts:5
msgid "dh_installxfonts - register X fonts"
msgstr "dh_installxfonts - X 用フォント群の登録を行う"

#. type: textblock
#: dh_installxfonts:15
msgid "B<dh_installxfonts> [S<I<debhelper options>>]"
msgstr "B<dh_installxfonts> [S<I<debhelper options>>]"

#. type: textblock
#: dh_installxfonts:19
msgid ""
"B<dh_installxfonts> is a debhelper program that is responsible for "
"registering X fonts, so their corresponding F<fonts.dir>, F<fonts.alias>, "
"and F<fonts.scale> be rebuilt properly at install time."
msgstr ""
"B<dh_installxfonts> は、X 用のフォントを登録し、フォントに関係する F<fonts."
"dir>, F<fonts.alias>, F<fonts.scale> を再ビルドして正しい内容になるようにしま"
"す。"

#. type: textblock
#: dh_installxfonts:23
msgid ""
"Before calling this program, you should have installed any X fonts provided "
"by your package into the appropriate location in the package build "
"directory, and if you have F<fonts.alias> or F<fonts.scale> files, you "
"should install them into the correct location under F<etc/X11/fonts> in your "
"package build directory."
msgstr ""
"このプログラムを呼び出す前に、パッケージビルドディレクトリ内の適切な場所に、"
"パッケージが提供しようとしているX用のフォント全部をインストールしておく必要が"
"あります。また、パッケージビルドディレクトリ以下の F<etc/X11/fonts> 以下の正"
"しい場所に F<fonts.alias> や F<fonts.scale> ファイルをインストールしておく必"
"要があります。"

#. type: textblock
#: dh_installxfonts:29
msgid ""
"Your package should depend on B<xfonts-utils> so that the B<update-fonts-"
">I<*> commands are available. (This program adds that dependency to B<${misc:"
"Depends}>.)"
msgstr ""
"B<update-fonts->I<*> コマンドが利用可能なように B<xfonts-utils> に対しての依"
"存関係を記載しておく必要があります (本プログラムは B<${misc:Depends}> へこの"
"依存関係を付け加えます)。"

#. type: textblock
#: dh_installxfonts:33
msgid ""
"This program automatically generates the F<postinst> and F<postrm> commands "
"needed to register X fonts. These commands are inserted into the maintainer "
"scripts by B<dh_installdeb>. See L<dh_installdeb(1)> for an explanation of "
"how this works."
msgstr ""
"本プログラムは X フォントを登録するのに必要な F<postinst> と F<postrm> コマン"
"ドを機械的に生成します。生成される F<postinst> と F<postrm> は "
"B<dh_installdeb> により、メンテナスクリプトに挿入されます。こちらの動作につい"
"ては、L<dh_installdeb(1)> を参照してください。"

#. type: textblock
#: dh_installxfonts:40
msgid ""
"See L<update-fonts-alias(8)>, L<update-fonts-scale(8)>, and L<update-fonts-"
"dir(8)> for more information about X font installation."
msgstr ""
"X 用フォントのインストールについてさらに情報が必要な場合は、L<update-fonts-"
"alias(8)>, L<update-fonts-scale(8)>, L<update-fonts-dir(8)> を参照してくださ"
"い。"

#. type: textblock
#: dh_installxfonts:43
msgid ""
"See Debian policy, section 11.8.5. for details about doing fonts the Debian "
"way."
msgstr ""
"Debian 流でのフォントの取扱い詳細については、Debian ポリシーマニュアルの "
"11.8.5 章を参照してください。"

#. type: textblock
#: dh_link:5
msgid "dh_link - create symlinks in package build directories"
msgstr "dh_link - パッケージビルドディレクトリ内でシンボリックリンクを作成する"

#. type: textblock
#: dh_link:16
msgid ""
"B<dh_link> [S<I<debhelper options>>] [B<-A>] [B<-X>I<item>] [S<I<source "
"destination> ...>]"
msgstr ""
"B<dh_link> [S<I<debhelper options>>] [B<-A>] [B<-X>I<item>] [S<I<source "
"destination> ...>]"

#. type: textblock
#: dh_link:20
msgid ""
"B<dh_link> is a debhelper program that creates symlinks in package build "
"directories."
msgstr ""
"B<dh_link> はパッケージビルドディレクトリ内でシンボリックリンクを作成する "
"debhelper プログラムです。"

#. type: textblock
#: dh_link:23
msgid ""
"B<dh_link> accepts a list of pairs of source and destination files. The "
"source files are the already existing files that will be symlinked from. The "
"destination files are the symlinks that will be created. There B<must> be an "
"equal number of source and destination files specified."
msgstr ""
"B<dh_link> コマンドはリンクを張りたい元と先のファイル名をペアにしたものの一覧"
"を受けとります。リンクを張る元のファイルはすでに実体のあるファイルを指定しま"
"す。また、リンクを張りたい先のファイル名でシンボリックリンクが作成されます。"
"リンクを張る元と先のファイル名は同じ数だけ指定することがB<必須>です。"

#. type: textblock
#: dh_link:28
msgid ""
"Be sure you B<do> specify the full filename to both the source and "
"destination files (unlike you would do if you were using something like "
"L<ln(1)>)."
msgstr ""
"リンク元と先の完全なファイル名を指定していることをB<必ず>確かめてください "
"(L<ln(1)> か何かを使っている時とは違って入念に調べてください)。"

#. type: textblock
#: dh_link:32
#, fuzzy
msgid ""
"B<dh_link> will generate symlinks that comply with Debian policy - absolute "
"when policy says they should be absolute, and relative links with as short a "
"path as possible. It will also create any subdirectories it needs to put the "
"symlinks in."
msgstr ""
"B<dh_link> は Debian ポリシーに準拠した形でシンボリックリンクを生成します。こ"
"れは、Debian ポリシーで、絶対パスで指定すべきものは絶対パスで、また、相対パス"
"の場合はできる限り短いパス指定を持つシンボリックリンクを作成することになって"
"いるからです。また、シンボリックリンクを張るのにサブディレクトリの作成が必要"
"であれば、このコマンドはサブディレクトリを作成します。"

#. type: textblock
#: dh_link:37
msgid "Any pre-existing destination files will be replaced with symlinks."
msgstr ""
"もしシンボリックリンクを作成しようとしている場所に同名のファイルが存在した場"
"合は、シンボリックリンクに置き換えられます。"

#. type: textblock
#: dh_link:39
msgid ""
"B<dh_link> also scans the package build tree for existing symlinks which do "
"not conform to Debian policy, and corrects them (v4 or later)."
msgstr ""
"B<dh_link> は、また、パッケージビルドツリー以下で、Debian ポリシーマニュアル"
"違反であるようなすでに存在するシンボリックリンクを探し回り、そしてこれらを正"
"しくなるように修正します (互換性レベル v4 以上)。"

#. type: =item
#: dh_link:46
msgid "debian/I<package>.links"
msgstr "debian/I<package>.links"

#. type: textblock
#: dh_link:48
msgid ""
"Lists pairs of source and destination files to be symlinked. Each pair "
"should be put on its own line, with the source and destination separated by "
"whitespace."
msgstr ""
"これらファイルにはお互いシンボリックリンクされるような元ファイル名と先ファイ"
"ル名のリストを列挙します。それぞれのペアは１つの行に記載されなければならず、"
"さらに元ファイル名と先ファイル名は空白で区切られていなければなりません。"

#. type: textblock
#: dh_link:60
msgid ""
"Create any links specified by command line parameters in ALL packages acted "
"on, not just the first."
msgstr ""
"コマンドラインパラメータとして指定されているリンクを、単に最初に処理するパッ"
"ケージのみではなく、作業する予定の全パッケージ対して作成します。"

#. type: textblock
#: dh_link:65
msgid ""
"Exclude symlinks that contain I<item> anywhere in their filename from being "
"corrected to comply with Debian policy."
msgstr ""
"ファイル名の一部に I<item> を含むシンボリックリンクを、Debian ポリシー準拠の"
"為のリンク修正の対象から除外します。"

#. type: =item
#: dh_link:68
msgid "I<source destination> ..."
msgstr "I<source destination> ..."

#. type: textblock
#: dh_link:70
msgid ""
"Create a file named I<destination> as a link to a file named I<source>. Do "
"this in the package build directory of the first package acted on.  (Or in "
"all packages if B<-A> is specified.)"
msgstr ""
"I<source> という名前へのリンクファイルとして I<destination> という名前のファ"
"イルを作成します。最初にビルドされるパッケージビルドディレクトリ以下にてこの"
"操作を行います (あるいは、B<-A> が指定されている場合は全パッケージに対して作"
"業を行います)。"

#. type: verbatim
#: dh_link:78
#, no-wrap
msgid ""
" dh_link usr/share/man/man1/foo.1 usr/share/man/man1/bar.1\n"
"\n"
msgstr ""
" dh_link usr/share/man/man1/foo.1 usr/share/man/man1/bar.1\n"
"\n"

#. type: textblock
#: dh_link:80
msgid "Make F<bar.1> be a symlink to F<foo.1>"
msgstr "F<foo.1> へのシンボリックリンクとして F<bar.1> を作成します。"

#. type: verbatim
#: dh_link:82
#, no-wrap
msgid ""
" dh_link var/lib/foo usr/lib/foo \\\n"
"   usr/share/man/man1/foo.1 usr/share/man/man1/bar.1\n"
"\n"
msgstr ""
" dh_link var/lib/foo usr/lib/foo \\\n"
"   usr/share/man/man1/foo.1 usr/share/man/man1/bar.1\n"
"\n"

#. type: textblock
#: dh_link:85
msgid ""
"Make F</usr/lib/foo/> be a link to F</var/lib/foo/>, and F<bar.1> be a "
"symlink to the F<foo.1>"
msgstr ""
"F</var/lib/foo/> へのシンボリックリンクとして F</usr/lib/foo/> を作成します。"
"また、F<foo.1> へのシンボリックリンクとして、F<bar.1> を作成します。"

#. type: textblock
#: dh_lintian:5
msgid ""
"dh_lintian - install lintian override files into package build directories"
msgstr ""
"dh_lintian - ビルドディレクトリに lintian への override ファイルをインストー"
"ルする"

#. type: textblock
#: dh_lintian:15
msgid "B<dh_lintian> [S<I<debhelper options>>]"
msgstr "B<dh_lintian> [S<I<debhelper options>>]"

#. type: textblock
#: dh_lintian:19
#, fuzzy
msgid ""
"B<dh_lintian> is a debhelper program that is responsible for installing "
"override files used by lintian into package build directories."
msgstr ""
"B<dh_lintian> は、lintian によって利用される lintian 用の再定義用ファイルを、"
"パッケージビルドディレクトリ以下にインストールする役目の debhelper プログラム"
"です。"

#. type: =item
#: dh_lintian:26
msgid "debian/I<package>.lintian-overrides"
msgstr "debian/I<package>.lintian-overrides"

#. type: textblock
#: dh_lintian:28
msgid ""
"Installed into usr/share/lintian/overrides/I<package> in the package build "
"directory. This file is used to suppress erroneous lintian diagnostics."
msgstr ""
"パッケージビルドディレクトリ以下の usr/share/lintian/overrides/I<package> へ"
"インストールを行います。このファイルは、lintian が誤った診断をするのを防ぐ為"
"に利用されます。"

#. type: =item
#: dh_lintian:32
msgid "F<debian/source/lintian-overrides>"
msgstr "F<debian/source/lintian-overrides>"

#. type: textblock
#: dh_lintian:34
msgid ""
"These files are not installed, but will be scanned by lintian to provide "
"overrides for the source package."
msgstr ""
"これらファイルはインストールされません。しかしながら、ソースパッケージに対す"
"る診断結果を再定義する為、lintian にて本ファイルの中身がスキャンされます。"

#. type: textblock
#: dh_lintian:64
msgid "L<lintian(1)>"
msgstr "L<lintian(1)>"

#. type: textblock
#: dh_lintian:68
msgid "Steve Robbins <smr@debian.org>"
msgstr "Steve Robbins <smr@debian.org>"

#. type: textblock
#: dh_listpackages:5
msgid "dh_listpackages - list binary packages debhelper will act on"
msgstr ""
"dh_listpackages - debhelper が処理するバイナリパッケージの一覧を列挙する"

#. type: textblock
#: dh_listpackages:15
msgid "B<dh_listpackages> [S<I<debhelper options>>]"
msgstr "B<dh_listpackages> [S<I<debhelper options>>]"

#. type: textblock
#: dh_listpackages:19
msgid ""
"B<dh_listpackages> is a debhelper program that outputs a list of all binary "
"packages debhelper commands will act on. If you pass it some options, it "
"will change the list to match the packages other debhelper commands would "
"act on if passed the same options."
msgstr ""
"B<dh_listpackages> は、debhelper により処理を行う必要のある全てのバイナリパッ"
"ケージの一覧を得る事が出来る debhelper プログラムです。このプログラムに、ある"
"オプションを渡すと、同じオプションを引き渡された他の debhelper コマンドへ処理"
"させる予定のパッケージ一覧を、変更できます。"

#. type: textblock
#: dh_makeshlibs:5
msgid ""
"dh_makeshlibs - automatically create shlibs file and call dpkg-gensymbols"
msgstr ""
"dh_makeshlibs - 自動的に shlibs ファイルを作成し、dpkg-gensymbols を呼び出す"

#. type: textblock
#: dh_makeshlibs:15
msgid ""
"B<dh_makeshlibs> [S<I<debhelper options>>] [B<-m>I<major>] [B<-"
"V>I<[dependencies]>] [B<-n>] [B<-X>I<item>] [S<B<--> I<params>>]"
msgstr ""
"B<dh_makeshlibs> [S<I<debhelper options>>] [B<-m>I<major>] [B<-"
"V>I<[dependencies]>] [B<-n>] [B<-X>I<item>] [S<B<--> I<params>>]"

#. type: textblock
#: dh_makeshlibs:19
msgid ""
"B<dh_makeshlibs> is a debhelper program that automatically scans for shared "
"libraries, and generates a shlibs file for the libraries it finds."
msgstr ""
"B<dh_makeshlibs> は自動的に共有ライブラリをスキャンし、見つけたライブラリに対"
"する shlibs ファイルを生成する debhelper プログラムです。"

#. type: textblock
#: dh_makeshlibs:22
#, fuzzy
msgid ""
"It will also ensure that ldconfig is invoked during install and removal when "
"it finds shared libraries.  Since debhelper 9.20151004, this is done via a "
"dpkg trigger.  In older versions of debhelper, B<dh_makeshlibs> would "
"generate a maintainer script for this purpose."
msgstr ""

#. type: =item
#: dh_makeshlibs:31
msgid "debian/I<package>.shlibs"
msgstr "debian/I<package>.shlibs"

#. type: textblock
#: dh_makeshlibs:33
#, fuzzy
msgid ""
"Installs this file, if present, into the package as DEBIAN/shlibs.  If "
"omitted, debhelper will generate a shlibs file automatically if it detects "
"any libraries."
msgstr ""

#. type: textblock
#: dh_makeshlibs:37
msgid ""
"Note in compat levels 9 and earlier, this file was installed by "
"L<dh_installdeb(1)> rather than B<dh_makeshlibs>."
msgstr ""
"互換性レベル 9 以前では、このファイルは B<dh_makeshlibs> ではなく "
"L<dh_installdeb(1)> によってインストールされる点に注意して下さい。"

#. type: =item
#: dh_makeshlibs:40
msgid "debian/I<package>.symbols"
msgstr "debian/I<package>.symbols"

#. type: =item
#: dh_makeshlibs:42
msgid "debian/I<package>.symbols.I<arch>"
msgstr "debian/I<package>.symbols.I<arch>"

#. type: textblock
#: dh_makeshlibs:44
msgid ""
"These symbols files, if present, are passed to L<dpkg-gensymbols(1)> to be "
"processed and installed. Use the I<arch> specific names if you need to "
"provide different symbols files for different architectures."
msgstr ""
"これらのシンボルファイルは、もし存在すれば、L<dpkg-gensymbols(1)> へ渡され、"
"かかる処理とインストールが行われます。異なるアーキテクチャの元で異なるシンボ"
"ルを利用するには、I<arch> を指定してください。"

#. type: =item
#: dh_makeshlibs:54
msgid "B<-m>I<major>, B<--major=>I<major>"
msgstr "B<-m>I<major>, B<--major=>I<major>"

#. type: textblock
#: dh_makeshlibs:56
msgid ""
"Instead of trying to guess the major number of the library with objdump, use "
"the major number specified after the -m parameter. This is much less useful "
"than it used to be, back in the bad old days when this program looked at "
"library filenames rather than using objdump."
msgstr ""
"objdump をつかってライブラリの主バージョン番号を推定する代わりに、-m パラメー"
"タのあとに主バージョン番号を設定できます。以前本プログラムはライブラリの主"
"バージョン番号を求めるのに objdump を使わず、ライブラリのファイル名から判定し"
"ていた為、このパラメータが便利だった事があります。"

#. type: =item
#: dh_makeshlibs:61
msgid "B<-V>, B<-V>I<dependencies>"
msgstr "B<-V>, B<-V>I<dependencies>"

#. type: =item
#: dh_makeshlibs:63
msgid "B<--version-info>, B<--version-info=>I<dependencies>"
msgstr "B<--version-info>, B<--version-info=>I<dependencies>"

#. type: textblock
#: dh_makeshlibs:65
msgid ""
"By default, the shlibs file generated by this program does not make packages "
"depend on any particular version of the package containing the shared "
"library. It may be necessary for you to add some version dependency "
"information to the shlibs file. If B<-V> is specified with no dependency "
"information, the current upstream version of the package is plugged into a "
"dependency that looks like \"I<packagename> B<(E<gt>>= I<packageversion>B<)>"
"\". Note that in debhelper compatibility levels before v4, the Debian part "
"of the package version number is also included. If B<-V> is specified with "
"parameters, the parameters can be used to specify the exact dependency "
"information needed (be sure to include the package name)."
msgstr ""
"デフォルトでは、本プログラムにより生成される shlibs ファイルは、共有ライブラ"
"リを含むパッケージの特定のバージョンに依存することが無いようにします。これは"
"shlibsファイルにバージョンに関する依存情報をパッケージ作成者により追加する必"
"要があるという事です。B<-V>が依存関係の情報無しで用いられると、アップストリー"
"ムのバージョン情報が \"I<packagename> B<(E<gt>>=I<packageversion>B<)>\" の形"
"式で依存関係へ挿入されます。debhelper の互換性レベルが v4 未満の場合、パッ"
"ケージのバージョン番号のうち Debian のバージョンを示す部分も、この依存関係の"
"情報として含まれます。B<-V> がパラメータと共に指定されると、このパラメータは"
"後に必要とされる (また、パッケージの名前として確実に含まれるように) 正確な"
"バージョン依存情報として扱われます。"

#. type: textblock
#: dh_makeshlibs:76
msgid ""
"Beware of using B<-V> without any parameters; this is a conservative setting "
"that always ensures that other packages' shared library dependencies are at "
"least as tight as they need to be (unless your library is prone to changing "
"ABI without updating the upstream version number), so that if the maintainer "
"screws up then they won't break. The flip side is that packages might end up "
"with dependencies that are too tight and so find it harder to be upgraded."
msgstr ""
"B<-V> をパラメータ無しで指定する場合の注意事項は次の通りです。この場合、依存"
"関係にあるパッケージに含まれる共有ライブラリはお互いに必要な依存関係を保って"
"いられるという仮定に基づく保守的な設定です (なおビルド対象のパッケージに含ま"
"れるライブラリについて、開発元 (upstream) のバージョン番号が新しくならないにも"
"関わらず、あえて ABI を変更しなければならない場合は除きます)。メンテナが、依"
"存関係解決が難しい為対応ができないような場合は、依存関係を破らざるを得ないと"
"きがあります。また、アップグレードが容易に出来ないほど強い依存関係を生じる場"
"合は、依存関係の変更をする必要があります。"

#. type: textblock
#: dh_makeshlibs:86
msgid ""
"Do not add the \"ldconfig\" trigger even if it seems like the package might "
"need it.  The option is called B<--no-scripts> for historical reasons as "
"B<dh_makeshlibs> would previously generate maintainer scripts that called "
"B<ldconfig>."
msgstr ""

#. type: textblock
#: dh_makeshlibs:93
msgid ""
"Exclude files that contain I<item> anywhere in their filename or directory "
"from being treated as shared libraries."
msgstr ""
"I<item> が対象のファイルや格納されているディレクトリの名前に含まれている場"
"合、共有ファイルとして扱うのを止めます。"

#. type: =item
#: dh_makeshlibs:96
msgid "B<--add-udeb=>I<udeb>"
msgstr "B<--add-udeb=>I<udeb>"

#. type: textblock
#: dh_makeshlibs:98
msgid ""
"Create an additional line for udebs in the shlibs file and use I<udeb> as "
"the package name for udebs to depend on instead of the regular library "
"package."
msgstr ""
"shlibs ファイルに udebs 用途の追加情報を作成し、通常のライブラリパッケージの"
"名前を使う代わりに、I<udeb> を udebs のパッケージの名前として利用します。"

#. type: textblock
#: dh_makeshlibs:103
msgid "Pass I<params> to L<dpkg-gensymbols(1)>."
msgstr "I<params> を L<dpkg-gensymbols(1)> へ引き渡します。"

#. type: =item
#: dh_makeshlibs:111
msgid "B<dh_makeshlibs>"
msgstr "B<dh_makeshlibs>"

#FIXME: why no-wrap?
#. type: verbatim
#: dh_makeshlibs:113
#, fuzzy, no-wrap
msgid ""
"Assuming this is a package named F<libfoobar1>, generates a shlibs file that\n"
"looks something like:\n"
" libfoobar 1 libfoobar1\n"
"\n"
msgstr ""
"このパッケージの名前を F<libfoobar1> と仮定すると、このコマンドによって作成\n"
"される shlibs ファイルは以下の通りとなります: \n"
" libfoobar 1 libfoobar1\n"
"\n"

#. type: =item
#: dh_makeshlibs:117
msgid "B<dh_makeshlibs -V>"
msgstr "B<dh_makeshlibs -V>"

# FIXME: unnecessary \n?
#. type: verbatim
#: dh_makeshlibs:119
#, fuzzy, no-wrap
msgid ""
"Assuming the current version of the package is 1.1-3, generates a shlibs\n"
"file that looks something like:\n"
" libfoobar 1 libfoobar1 (>= 1.1)\n"
"\n"
msgstr ""
"現在のパッケージのバージョンを 1.1-3 とすると、このコマンドで得られる shlibs ファイルは以下の通りです:\n"
" libfoobar 1 libfoobar1 (>= 1.1)\n"
"\n"

#. type: =item
#: dh_makeshlibs:123
msgid "B<dh_makeshlibs -V 'libfoobar1 (E<gt>= 1.0)'>"
msgstr "B<dh_makeshlibs -V 'libfoobar1 (E<gt>= 1.0)'>"

#. type: verbatim
#: dh_makeshlibs:125
#, no-wrap
msgid ""
"Generates a shlibs file that looks something like:\n"
"  libfoobar 1 libfoobar1 (>= 1.0)\n"
"\n"
msgstr ""
"以下のような shlibs ファイルが生成されます:\n"
"  libfoobar 1 libfoobar1 (>= 1.0)\n"
"\n"

#. type: textblock
#: dh_md5sums:5
msgid "dh_md5sums - generate DEBIAN/md5sums file"
msgstr "dh_md5sums - DEBIAN/md5sums ファイルを生成する"

#. type: textblock
#: dh_md5sums:16
msgid ""
"B<dh_md5sums> [S<I<debhelper options>>] [B<-x>] [B<-X>I<item>] [B<--include-"
"conffiles>]"
msgstr ""
"B<dh_md5sums> [S<I<debhelper オプション>>] [B<-x>] [B<-X>I<item>] [B<--"
"include-conffiles>]"

#. type: textblock
#: dh_md5sums:20
msgid ""
"B<dh_md5sums> is a debhelper program that is responsible for generating a "
"F<DEBIAN/md5sums> file, which lists the md5sums of each file in the "
"package.  These files are used by B<dpkg --verify> or the L<debsums(1)> "
"program."
msgstr ""
"B<dh_md5sums> は F<DEBIAN/md5sums> ファイルを生成する役目のプログラムです。な"
"お、F<DEBIAN/md5sums> ファイルとはビルド対象のパッケージにあるファイルの "
"md5sum 値を列挙したものです。これらファイルは B<dpkg --verify> または "
"B<debsums> プログラムで利用されます。"

#. type: textblock
#: dh_md5sums:24
msgid ""
"All files in F<DEBIAN/> are omitted from the F<md5sums> file, as are all "
"conffiles (unless you use the B<--include-conffiles> switch)."
msgstr ""
"F<DEBIAN/> 以下にある全ファイルは生成される F<md5sums> ファイルからは除外され"
"ます。また同様に全ての conffile も除外されます (B<--include-conffiles> を指定"
"した場合は別です) 。"

#. type: textblock
#: dh_md5sums:27
msgid "The md5sums file is installed with proper permissions and ownerships."
msgstr "md5sums ファイルは適切なパーミッションと所有者でインストールされます。"

#. type: =item
#: dh_md5sums:33
msgid "B<-x>, B<--include-conffiles>"
msgstr "B<-x>, B<--include-conffiles>"

#. type: textblock
#: dh_md5sums:35
msgid ""
"Include conffiles in the md5sums list. Note that this information is "
"redundant since it is included elsewhere in Debian packages."
msgstr ""
"md5sum 値を取得するファイルとして conffile を含めます。この情報は Debian パッ"
"ケージとは異なる場所にインストールされる為、補助目的の情報として扱われます"

#. type: textblock
#: dh_md5sums:40
msgid ""
"Exclude files that contain I<item> anywhere in their filename from being "
"listed in the md5sums file."
msgstr ""
"md5sums ファイルに列挙されているファイル群から、I<item> をファイル名に持つ"
"ファイルを除外します。"

#. type: textblock
#: dh_movefiles:5
msgid "dh_movefiles - move files out of debian/tmp into subpackages"
msgstr "dh_movefiles - debian/tmp からサブパッケージへファイルを移動する"

#. type: textblock
#: dh_movefiles:15
msgid ""
"B<dh_movefiles> [S<I<debhelper options>>] [B<--sourcedir=>I<dir>] [B<-"
"X>I<item>] [S<I<file> ...>]"
msgstr ""
"B<dh_movefiles> [S<I<debhelper オプション>>] [B<--sourcedir=>I<ディレクトリ"
">] [B<-X>I<item>] [S<I<ファイル> ...>]"

#. type: textblock
#: dh_movefiles:19
msgid ""
"B<dh_movefiles> is a debhelper program that is responsible for moving files "
"out of F<debian/tmp> or some other directory and into other package build "
"directories. This may be useful if your package has a F<Makefile> that "
"installs everything into F<debian/tmp>, and you need to break that up into "
"subpackages."
msgstr ""
"B<dh_movefiles> は、F<debian/tmp> ディレクトリや他のディレクトリから、別の"
"パッケージビルドディレクトリへファイルを移動する役割を持つ debhelper プログラ"
"ムです。これはパッケージしようとするソフトウェアに含まれる F<Makefile>フ ァイ"
"ルにより、インストールすべき物が F<debian/tmp> へインストールされてしまうよう"
"な場合に、これらを別々のディレクトリに後から仕分けたいような場合に便利です。"

#. type: textblock
#: dh_movefiles:24
msgid ""
"Note: B<dh_install> is a much better program, and you are recommended to use "
"it instead of B<dh_movefiles>."
msgstr ""
"注意：B<dh_install> は B<dh_movefiles> よりもはるかに良いプログラムなので、"
"B<dh_install> を利用することを推奨します。"

#. type: =item
#: dh_movefiles:31
msgid "debian/I<package>.files"
msgstr "debian/I<package>.files"

#. type: textblock
#: dh_movefiles:33
msgid ""
"Lists the files to be moved into a package, separated by whitespace. The "
"filenames listed should be relative to F<debian/tmp/>. You can also list "
"directory names, and the whole directory will be moved."
msgstr ""
"とあるパッケージへ移動したいファイルを、空白区切りで列挙します。ファイル名は"
"必ず F<debian/tmp/> からの相対パスで指定しなければなりません。また、ディレク"
"トリ名を指定することもでき、その場合は、ディレクトリをそのまま移動します。"

#. type: textblock
#: dh_movefiles:45
msgid ""
"Instead of moving files out of F<debian/tmp> (the default), this option "
"makes it move files out of some other directory. Since the entire contents "
"of the sourcedir is moved, specifying something like B<--sourcedir=/> is "
"very unsafe, so to prevent mistakes, the sourcedir must be a relative "
"filename; it cannot begin with a `B</>'."
msgstr ""
"F<debian/tmp> (デフォルトの移動元) からファイルを移動する代わりに、別のディレ"
"クトリからファイルを移動するように指定します。なお、移動元ディレクトリにある"
"全ファイルを移動する為、B<--sourcedir=/> のような指定は、非常に危険です。こう"
"いった間違いを防ぐ為、移動元ディレクトリは相対パスしか受け付けないようにして"
"あります。つまり、'B</>' で始まるディレクトリ指定は出来ません。"

#. type: =item
#: dh_movefiles:51
msgid "B<-Xitem>, B<--exclude=item>"
msgstr "B<-Xitem>, B<--exclude=item>"

#. type: textblock
#: dh_movefiles:53
msgid ""
"Exclude files that contain B<item> anywhere in their filename from being "
"installed."
msgstr ""
"B<item> をファイル名のどこかに含むファイルはインストール候補から除外します。"

#. type: textblock
#: dh_movefiles:58
msgid ""
"Lists files to move. The filenames listed should be relative to F<debian/tmp/"
">. You can also list directory names, and the whole directory will be moved. "
"It is an error to list files here unless you use B<-p>, B<-i>, or B<-a> to "
"tell B<dh_movefiles> which subpackage to put them in."
msgstr ""
"移動すべきファイルを列挙したファイルです。列挙されているファイルは F<debian/"
"tmp/> からの相対パスである必要があります。ディレクトリ名を列挙することも出"
"来、その場合は、各ディレクトリ全体を移動します。なお、B<-p>、B<-i>、B<-a> を"
"使って B<dh_movefiles> にどのサブパッケージに移動すべきかを指定していない場合"
"エラーが報告されます。 "

#. type: textblock
#: dh_movefiles:67
msgid ""
"Note that files are always moved out of F<debian/tmp> by default (even if "
"you have instructed debhelper to use a compatibility level higher than one, "
"which does not otherwise use debian/tmp for anything at all). The idea "
"behind this is that the package that is being built can be told to install "
"into F<debian/tmp>, and then files can be moved by B<dh_movefiles> from that "
"directory. Any files or directories that remain are ignored, and get deleted "
"by B<dh_clean> later."
msgstr ""
"デフォルト F<debian/tmp> からファイルを移動するという事になっています (もし "
"debhelper が互換性レベル v1 以上で利用したとしても、debian/tmp 以外は利用され"
"ません)。この背景として、ビルドされたパッケージは F<debian/tmp> に一旦インス"
"トールし、後で B<dh_movefiles> コマンドにより F<debian/tmp> から移動するとい"
"う考え方があります。なお移動されなかったファイルやディレクトリは無視され、後"
"に B<dh_clean> によって消去されることとなります。"

#. type: textblock
#: dh_perl:5
msgid "dh_perl - calculates Perl dependencies and cleans up after MakeMaker"
msgstr ""
"dh_perl - Perlへの依存関係を検討し、MakeMaker 実行後に生成したものを消去する"

#. type: textblock
#: dh_perl:17
msgid "B<dh_perl> [S<I<debhelper options>>] [B<-d>] [S<I<library dirs> ...>]"
msgstr ""
"B<dh_perl> [S<I<debhelper オプション>>] [B<-d>] [S<I<ライブラリディレクトリ"
"> ...>]"

#. type: textblock
#: dh_perl:21
msgid ""
"B<dh_perl> is a debhelper program that is responsible for generating the B<"
"${perl:Depends}> substitutions and adding them to substvars files."
msgstr ""
"B<dh_perl> は B<${perl:Depends}> の内容を生成し、この依存情報に substvars ファ"
"イルの情報を付け加える役目の debhelper プログラムです。"

#. type: textblock
#: dh_perl:24
msgid ""
"The program will look at Perl scripts and modules in your package, and will "
"use this information to generate a dependency on B<perl> or B<perlapi>. The "
"dependency will be substituted into your package's F<control> file wherever "
"you place the token B<${perl:Depends}>."
msgstr ""
"このプログラムはビルド対象のパッケージにある Perl スクリプトや Perl モジュー"
"ルを検査し、B<perl> や B<perlapi> の依存関係を生成します。B<${perl:Depends}> "
"句をビルド対象のパッケージの F<control> に記述すると、生成した依存関係の情報"
"に置き換えられます。"

#. type: textblock
#: dh_perl:29
msgid ""
"B<dh_perl> also cleans up empty directories that MakeMaker can generate when "
"installing Perl modules."
msgstr ""
"B<dh_perl> は、さらに、MakeMaker が Perl モジュールをインストールする際に生成"
"した空のディレクトリを削除します。"

#. type: =item
#: dh_perl:36
msgid "B<-d>"
msgstr "B<-d>"

#. type: textblock
#: dh_perl:38
msgid ""
"In some specific cases you may want to depend on B<perl-base> rather than "
"the full B<perl> package. If so, you can pass the -d option to make "
"B<dh_perl> generate a dependency on the correct base package. This is only "
"necessary for some packages that are included in the base system."
msgstr ""
"完全な B<perl> パッケージよりも B<perl-base> に依存したいような場合がありま"
"す。この場合、-d オプションにて B<dh_perl> に正しいベースパッケージに対しての"
"依存情報を生成させるようなオプションを渡す箏ができます。これはベースシステム"
"が含まれるようなパッケージのみで必要です。"

#. type: textblock
#: dh_perl:43
msgid ""
"Note that this flag may cause no dependency on B<perl-base> to be generated "
"at all. B<perl-base> is Essential, so its dependency can be left out, unless "
"a versioned dependency is needed."
msgstr ""
"なお、このフラグを指定しても、B<perl-base> 本体に関する依存情報は、全く生成さ"
"れません。というのも、B<perl-base> は非常に基礎的なパッケージなので、B<perl-"
"base> に関する依存関係は通常特に指定しなくても問題が無い為です。ただ、B<perl-"
"base> の特定のバージョンに依存が特に必要な場合はその限りではありません。"

#. type: =item
#: dh_perl:47
msgid "B<-V>"
msgstr "B<-V>"

#. type: textblock
#: dh_perl:49
msgid ""
"By default, scripts and architecture independent modules don't depend on any "
"specific version of B<perl>. The B<-V> option causes the current version of "
"the B<perl> (or B<perl-base> with B<-d>) package to be specified."
msgstr ""
"デフォルト、スクリプト本体とアーキテクチャから独立しているモジュールについて"
"は、特定のバージョンの B<perl> に依存するような依存情報は生成されません。B<-"
"V>オプションを指定すると、パッケージビルド中に使っているバージョンの B<perl> "
"パッケージ (あるいは、B<-d> を指定していれば、現在の B<perl-base> のバージョ"
"ン) を、パッケージの依存情報として設定します。"

#. type: =item
#: dh_perl:53
msgid "I<library dirs>"
msgstr "I<library dirs>"

#. type: textblock
#: dh_perl:55
msgid ""
"If your package installs Perl modules in non-standard directories, you can "
"make B<dh_perl> check those directories by passing their names on the "
"command line. It will only check the F<vendorlib> and F<vendorarch> "
"directories by default."
msgstr ""
"Perlモジュールを非標準のディレクトリにインストールするようなパッケージをビル"
"ドしているのであれば、コマンドラインからパッケージの名前を渡すことにより、"
"B<dh_perl> に、これらのディレクトリを確認させる事が出来ます。デフォルトではこ"
"のコマンドは F<vendorlib> と F<vendorarch> ディレクトリのみを確認します。"

#. type: textblock
#: dh_perl:64
msgid "Debian policy, version 3.8.3"
msgstr "Debian ポリシー バージョン 3.8.3"

#. type: textblock
#: dh_perl:66
msgid "Perl policy, version 1.20"
msgstr "Perl ポリシー バージョン 1.20"

#. type: textblock
#: dh_perl:162
msgid "Brendan O'Dea <bod@debian.org>"
msgstr "Brendan O'Dea <bod@debian.org>"

#. type: textblock
#: dh_prep:5
msgid "dh_prep - perform cleanups in preparation for building a binary package"
msgstr "dh_prep - バイナリパッケージビルドの事前準備として諸々の消去を行う"

#. type: textblock
#: dh_prep:15
msgid "B<dh_prep> [S<I<debhelper options>>] [B<-X>I<item>]"
msgstr "B<dh_prep> [S<I<debhelper オプション>>] [B<-X>I<item>]"

#. type: textblock
#: dh_prep:19
msgid ""
"B<dh_prep> is a debhelper program that performs some file cleanups in "
"preparation for building a binary package. (This is what B<dh_clean -k> used "
"to do.) It removes the package build directories, F<debian/tmp>, and some "
"temp files that are generated when building a binary package."
msgstr ""
"B<dh_prep> はバイナリパッケージビルドの下準備時として諸々のファイル消去を行"
"う debhelper プログラムです (これは B<dh_clean -k> が昔行っていた作業となりま"
"す)。本プログラムはパッケージビルドディレクトリ、F<debian/tmp>、あるいは、"
"パッケージビルド中に生成した一時ファイルを取り除きます。"

#. type: textblock
#: dh_prep:24
msgid ""
"It is typically run at the top of the B<binary-arch> and B<binary-indep> "
"targets, or at the top of a target such as install that they depend on."
msgstr ""
"本プログラムは通常、B<binary-arch> や、B<binary-indep> ターゲット、あるいは、"
"これらが依存するインストール関連のターゲットの一番最初の作業にて実行されるよ"
"うにします。"

#. type: textblock
#: dh_prep:33
#, fuzzy
msgid ""
"Exclude files that contain F<item> anywhere in their filename from being "
"deleted, even if they would normally be deleted. You may use this option "
"multiple times to build up a list of things to exclude."
msgstr ""
"削除対象の候補のファイルから、F<item> をファイル名に含むようなファイルを除外"
"します。通常は消去されるようなファイルであっても、この場合では除外されます。"
"複数の除外ファイルを列挙して指定するには、本オプションを複数回指定します。"

#. type: textblock
#: dh_shlibdeps:5
msgid "dh_shlibdeps - calculate shared library dependencies"
msgstr "dh_shlibdeps - 共有ライブラリの依存関係を計算する"

#. type: textblock
#: dh_shlibdeps:16
msgid ""
"B<dh_shlibdeps> [S<I<debhelper options>>] [B<-L>I<package>] [B<-"
"l>I<directory>] [B<-X>I<item>] [S<B<--> I<params>>]"
msgstr ""
"B<dh_shlibdeps> [S<I<debhelper オプション>>] [B<-L>I<パッケージ>] [B<-l>I<"
"ディレクトリ>] [B<-X>I<item>] [S<B<--> I<パラメータ>>]"

#. type: textblock
#: dh_shlibdeps:20
msgid ""
"B<dh_shlibdeps> is a debhelper program that is responsible for calculating "
"shared library dependencies for packages."
msgstr ""
"B<dh_shlibdeps> は、ビルド中のパッケージに含まれる共有ライブラリの依存関係を"
"計算する役目の debhelper プログラムです。"

#. type: textblock
#: dh_shlibdeps:23
msgid ""
"This program is merely a wrapper around L<dpkg-shlibdeps(1)> that calls it "
"once for each package listed in the F<control> file, passing it a list of "
"ELF executables and shared libraries it has found."
msgstr ""
"このプログラムは L<dpkg-shlibdeps(1)> の単なるラッパープログラムであり、"
"L<dpkg-shlibdeps(1)> を F<control> ファイルに列挙したパッケージ各々について１"
"度呼び出すような動作をします。また、同時に L<dpkg-shlibdeps(1)> へ、動作中見"
"つけた ELF 実行ファイルや、共有ライブラリの一覧を引き渡します。"

#. type: textblock
#: dh_shlibdeps:33
msgid ""
"Exclude files that contain F<item> anywhere in their filename from being "
"passed to B<dpkg-shlibdeps>. This will make their dependencies be ignored.  "
"This may be useful in some situations, but use it with caution. This option "
"may be used more than once to exclude more than one thing."
msgstr ""
"F<item> を名前に含むファイルを、B<dpkg-shlibdeps> へ渡さないようにします。こ"
"のオプションにより、指定されたファイルの依存関係検査は無視されるようになりま"
"す。これは特定の状況下で便利な場合がありますが、気をつけて使って下さい。この"
"オプションを使って除外を複数指定する場合は、繰り返し指定する事により行いま"
"す。"

#. type: textblock
#: dh_shlibdeps:40
msgid "Pass I<params> to L<dpkg-shlibdeps(1)>."
msgstr "I<params> を L<dpkg-shlibdeps(1)> へ渡します。"

#. type: =item
#: dh_shlibdeps:42
msgid "B<-u>I<params>, B<--dpkg-shlibdeps-params=>I<params>"
msgstr "B<-u>I<params>, B<--dpkg-shlibdeps-params=>I<params>"

#. type: textblock
#: dh_shlibdeps:44
msgid ""
"This is another way to pass I<params> to L<dpkg-shlibdeps(1)>.  It is "
"deprecated; use B<--> instead."
msgstr ""
"このオプションは I<params> を L<dpkg-shlibdeps(1)> へ渡す別の方法となります。"
"しかしながら、このオプションは廃止されました。代わりに B<--> を利用してくださ"
"い。"

#. type: =item
#: dh_shlibdeps:47
msgid "B<-l>I<directory>[B<:>I<directory> ...]"
msgstr "B<-l>I<directory>[B<:>I<directory> ...]"

#. type: textblock
#: dh_shlibdeps:49
msgid ""
"With recent versions of B<dpkg-shlibdeps>, this option is generally not "
"needed."
msgstr ""
"最近のバージョンの B<dpkg-shlibdeps> では、このオプションは概ね不要になってい"
"ます。"

#. type: textblock
#: dh_shlibdeps:52
#, fuzzy
msgid ""
"It tells B<dpkg-shlibdeps> (via its B<-l> parameter), to look for private "
"package libraries in the specified directory (or directories -- separate "
"with colons). With recent versions of B<dpkg-shlibdeps>, this is mostly only "
"useful for packages that build multiple flavors of the same library, or "
"other situations where the library is installed into a directory not on the "
"regular library search path."
msgstr ""
"B<dpkg-shlibdeps> を実行する前に、B<LD_LIBRARY_PATH> 環境変数に、指定する予定"
"のディレクトリ (あるいは、複数指定するならコロンで各ディレクトリ名を区切っ"
"て) が指定されます。最近のバージョンの B<dpkg-shlibdeps> では、いくつか異なる"
"設定でビルドしたライブラリを提供するパッケージを用意する場合、あるいは、通常"
"のライブラリ探索パスにないディレクトリへライブラリをインストールするような場"
"合にのみ役に立ちます。"

#. type: =item
#: dh_shlibdeps:60
msgid "B<-L>I<package>, B<--libpackage=>I<package>"
msgstr "B<-L>I<package>, B<--libpackage=>I<package>"

#. type: textblock
#: dh_shlibdeps:62
#, fuzzy
msgid ""
"With recent versions of B<dpkg-shlibdeps>, this option is generally not "
"needed, unless your package builds multiple flavors of the same library or "
"is relying on F<debian/shlibs.local> for an internal library."
msgstr ""
"最近のバージョンの B<dpkg-shlibdeps> であれば、このオプションは概ね不要となり"
"ます。ただし、複数の設定でライブラリをビルドするようなパッケージではその限り"
"ではありません。"

#. type: textblock
#: dh_shlibdeps:66
msgid ""
"It tells B<dpkg-shlibdeps> (via its B<-S> parameter) to look first in the "
"package build directory for the specified package, when searching for "
"libraries, symbol files, and shlibs files."
msgstr ""
"ライブラリ、シンボルファイル、shlibs ファイルを探索する際に、B<dpkg-"
"shlibdeps> へ (B<-S> パラメータを使い) パッケージのパッケージビルドディレクト"
"リ内にて、最初に探す場所を指定するものです。"

#. type: textblock
#: dh_shlibdeps:70
#, fuzzy
msgid ""
"If needed, this can be passed multiple times with different package names."
msgstr ""

#. type: textblock
#: dh_shlibdeps:77
msgid ""
"Suppose that your source package produces libfoo1, libfoo-dev, and libfoo-"
"bin binary packages. libfoo-bin links against libfoo1, and should depend on "
"it. In your rules file, first run B<dh_makeshlibs>, then B<dh_shlibdeps>:"
msgstr ""
"ここで、ビルド中のパッケージが libfoo1、libfoo-dev、libfoo-bin のバイナリパッ"
"ケージを生成すると仮定します。libfoo-bin は libfoo1 にリンクしており、つまり"
"は依存関係になければならない状態です。この場合、パッケージの rules ファイルと"
"して、最初に B<dh_makeshlibs> を呼び出し、次に B<dh_shlibdeps> を呼び出す記述"
"をしなければなりません:"

#. type: verbatim
#: dh_shlibdeps:81
#, no-wrap
msgid ""
"\tdh_makeshlibs\n"
"\tdh_shlibdeps\n"
"\n"
msgstr ""
"\tdh_makeshlibs\n"
"\tdh_shlibdeps\n"
"\n"

#. type: textblock
#: dh_shlibdeps:84
msgid ""
"This will have the effect of generating automatically a shlibs file for "
"libfoo1, and using that file and the libfoo1 library in the F<debian/libfoo1/"
"usr/lib> directory to calculate shared library dependency information."
msgstr ""
"こちらの記述を行うと、共有ライブラリの依存関係を検討する為に、libfoo1 に関す"
"る shlibs ファイルを自動的に生成し、生成された shlibs ファイル及び F<debian/"
"libfoo1/usr/lib> 以下の libfoo1 ライブラリを使うようになります。"

#. type: textblock
#: dh_shlibdeps:89
msgid ""
"If a libbar1 package is also produced, that is an alternate build of libfoo, "
"and is installed into F</usr/lib/bar/>, you can make libfoo-bin depend on "
"libbar1 as follows:"
msgstr ""
"libbar1 パッケージを libfoo とは別にビルドし、F</usr/lib/bar/> へインストール"
"してあるとします。この場合、libfoo-bin について libbar1 を以下のようにして依"
"存させる事ができます。"

#. type: verbatim
#: dh_shlibdeps:93
#, no-wrap
msgid ""
"\tdh_shlibdeps -Llibbar1 -l/usr/lib/bar\n"
"\t\n"
msgstr ""
"\tdh_shlibdeps -Llibbar1 -l/usr/lib/bar\n"
"\t\n"

#. type: textblock
#: dh_shlibdeps:155
msgid "L<debhelper(7)>, L<dpkg-shlibdeps(1)>"
msgstr "L<debhelper(7)>, L<dpkg-shlibdeps(1)>"

#. type: textblock
#: dh_strip:5
msgid ""
"dh_strip - strip executables, shared libraries, and some static libraries"
msgstr ""
"dh_strip - 実行ファイル、共有ファイル、静的ライブラリのデバッグ情報を削る"

#. type: textblock
#: dh_strip:16
msgid ""
"B<dh_strip> [S<I<debhelper options>>] [B<-X>I<item>] [B<--dbg-"
"package=>I<package>] [B<--keep-debug>]"
msgstr ""
"B<dh_strip> [S<I<debhelper オプション>>] [B<-X>I<item>] [B<--dbg-package=>I<"
"パッケージ>] [B<--keep-debug>]"

#. type: textblock
#: dh_strip:20
msgid ""
"B<dh_strip> is a debhelper program that is responsible for stripping "
"executables, shared libraries, and static libraries that are not used for "
"debugging."
msgstr ""
"B<dh_strip> は、デバッグ目的で利用する必要のない実行ファイル、共有ライブラ"
"リ、静的ライブラリからデバッグ情報を取り除く役目の debhelper プログラムです。"

#. type: textblock
#: dh_strip:24
msgid ""
"This program examines your package build directories and works out what to "
"strip on its own. It uses L<file(1)> and file permissions and filenames to "
"figure out what files are shared libraries (F<*.so>), executable binaries, "
"and static (F<lib*.a>) and debugging libraries (F<lib*_g.a>, F<debug/*.so>), "
"and strips each as much as is possible. (Which is not at all for debugging "
"libraries.) In general it seems to make very good guesses, and will do the "
"right thing in almost all cases."
msgstr ""
"本プログラムはパッケージビルドディレクトリ以下を探索し、どのファイルからデ"
"バッグ情報を取り除くべきかを見つけ出します。本プログラムは、L<file(1)> コマン"
"ドを利用し、ファイルパーミッション、ファイル名を利用して、どのファイルが共有"
"ライブラリ (F<*.so>)、実行可能バイナリ、静的ライブラリ (F<lib*.a>)、デバッグ"
"用ライブラリ (F<lib*_g.a>, F<debug/*.so>) であるかを判断し、該当する場合は、"
"デバッグシンボルをできる限り取り除きます (デバッグ用ライブラリについては全く"
"何もしません)。多くの場合で、本プログラムは非常に良い推定を行い、正しくデバッ"
"グシンボルの除去を行います。"

#. type: textblock
#: dh_strip:32
msgid ""
"Since it is very hard to automatically guess if a file is a module, and hard "
"to determine how to strip a module, B<dh_strip> does not currently deal with "
"stripping binary modules such as F<.o> files."
msgstr ""
"自動的にファイルがモジュールであるかどうかを見分けるのは難しく、また、どう"
"やってモジュールからデバッグ情報を除外すれば良いかを決定するのも難しい為、"
"B<dh_strip> は、F<.o> を拡張子に持つファイルのようなバイナリモジュールからデ"
"バッグ情報の除去を行う事について、未だサポートしていません。"

#. type: textblock
#: dh_strip:42
msgid ""
"Exclude files that contain I<item> anywhere in their filename from being "
"stripped. You may use this option multiple times to build up a list of "
"things to exclude."
msgstr ""
"I<item> を名前に含むようなファイルを、デバッグ情報除去の対象から外します。も"
"し、複数のファイルを処理させないように指定したければ、本オプションを複数回指"
"定することによって行えます。"

#. type: =item
#: dh_strip:46
msgid "B<--dbg-package=>I<package>"
msgstr "B<--dbg-package=>I<package>"

#. type: textblock
#: dh_strip:48 dh_strip:68
msgid ""
"B<This option is a now special purpose option that you normally do not "
"need>.  In most cases, there should be little reason to use this option for "
"new source packages as debhelper automatically generates debug packages "
"(\"dbgsym packages\").  B<If you have a manual --dbg-package> that you want "
"to replace with an automatically generated debug symbol package, please see "
"the B<--dbgsym-migration> option."
msgstr ""
"B<このオプションは、現在特別な目的のためのオプションであり、通常必要ありませ"
"ん>。ほとんどの場合、新しいソースパッケージでは debhelper が自動的にデバッグ"
"パッケージ (\"dbgsym パッケージ\") を生成するので、このオプションを使う理由は"
"少ないはずです。B<手動で作られた --dbg-package> を自動生成されたデバッグシン"
"ボルパッケージで置き換えたい場合は B<--dbgsym-migration> オプションを参照して"
"下さい。"

#. type: textblock
#: dh_strip:56
msgid ""
"Causes B<dh_strip> to save debug symbols stripped from the packages it acts "
"on as independent files in the package build directory of the specified "
"debugging package."
msgstr ""
"B<dh_strip> を使ってパッケージからデバッグシンボルを取き、指定のデバッグ用"
"パッケージのパッケージビルドディレクトリ内に独立したファイルとしてデバッグシ"
"ンボルを保存します。"

#. type: textblock
#: dh_strip:60
msgid ""
"For example, if your packages are libfoo and foo and you want to include a "
"I<foo-dbg> package with debugging symbols, use B<dh_strip --dbg-"
"package=>I<foo-dbg>."
msgstr ""
"例えば、ビルド予定のパッケージとして、libfoo、foo があり、I<foo-dbg> パッケー"
"ジにはデバッグシンボルを含めておきたい場合、B<dh_strip--dbg-package=>I<foo-"
"dbg> を実行してください。"

#. type: textblock
#: dh_strip:63
#, fuzzy
msgid ""
"This option implies B<--no-automatic-dbgsym> and I<cannot> be used with B<--"
"automatic-dbgsym> or B<--dbgsym-migration>."
msgstr ""
"このオプションは B<--no-automatic-dbgsym> に伴っており、B<--automatic-"
"dbgsym> や B<--dbgsym-migration> と同時に使うことはI<できません>。"

#. type: =item
#: dh_strip:66
msgid "B<-k>, B<--keep-debug>"
msgstr "B<-k>, B<--keep-debug>"

#. type: textblock
#: dh_strip:76
msgid ""
"Debug symbols will be retained, but split into an independent file in F<usr/"
"lib/debug/> in the package build directory. B<--dbg-package> is easier to "
"use than this option, but this option is more flexible."
msgstr ""
"デバッグシンボルが取り除かれる一方、パッケージビルドディレクトリ以下にある "
"F<usr/lib/debug/> ディレクトリへ取り除いたデバッグシンボルを取り置きます。"
"B<--dbg-package> オプションの方が本オプションよりも使うのは易しいのですが、本"
"オプションは B<--dbg-package> オプションよりも柔軟な指定が可能です。"

#. type: textblock
#: dh_strip:80
#, fuzzy
msgid ""
"This option implies B<--no-automatic-dbgsym> and I<cannot> be used with B<--"
"automatic-dbgsym>."
msgstr ""
"このオプションは B<--no-automatic-dbgsym> に伴っており、B<--automatic-"
"dbgsym> と同時に使うことはI<できません>。"

#. type: =item
#: dh_strip:83
msgid "B<--dbgsym-migration=>I<package-relation>"
msgstr "B<--dbgsym-migration=>I<package-relation>"

#. type: textblock
#: dh_strip:85
msgid ""
"This option is used to migrate from a manual \"-dbg\" package (created with "
"B<--dbg-package>) to an automatic generated debug symbol package. This "
"option should describe a valid B<Replaces>- and B<Breaks>-relation, which "
"will be added to the debug symbol package to avoid file conflicts with the "
"(now obsolete) -dbg package."
msgstr ""
"このオプションは、手動 (B<--dbg-package>) で作成した \"-dbg\" パッケージから"
"自動生成されたデバッグシンボルパッケージへ移行するのに利用されます。このオプ"
"ションでは、(現在では廃止となっている) -dbg パッケージとファイルが衝突するの"
"を避けるためにデバッグシンボルパッケージに追加される正しい B<Replaces> 及び "
"B<Breaks> の依存関係を記述する筈です。"

#. type: textblock
#: dh_strip:91
#, fuzzy
msgid ""
"This option implies B<--automatic-dbgsym> and I<cannot> be used with B<--"
"keep-debug>, B<--dbg-package> or B<--no-automatic-dbgsym>."
msgstr ""
"このオプションは B<--automatic-dbgsym> に伴っており、B<--keep-debug>, B<--"
"dbg-package>, B<--no-automatic-dbgsym> と同時に使うことはI<できません>。"

#. type: textblock
#: dh_strip:94
msgid "Examples:"
msgstr "例:"

#. type: verbatim
#: dh_strip:96
#, no-wrap
msgid ""
"  dh_strip --dbgsym-migration='libfoo-dbg (<< 2.1-3~)'\n"
"\n"
msgstr ""
"  dh_strip --dbgsym-migration='libfoo-dbg (<< 2.1-3~)'\n"
"\n"

#. type: verbatim
#: dh_strip:98
#, no-wrap
msgid ""
"  dh_strip --dbgsym-migration='libfoo-tools-dbg (<< 2.1-3~), libfoo2-dbg (<< 2.1-3~)'\n"
"\n"
msgstr ""
"  dh_strip --dbgsym-migration='libfoo-tools-dbg (<< 2.1-3~), libfoo2-dbg (<< 2.1-3~)'\n"
"\n"

#. type: =item
#: dh_strip:100
msgid "B<--automatic-dbgsym>, B<--no-automatic-dbgsym>"
msgstr "B<--automatic-dbgsym>, B<--no-automatic-dbgsym>"

#. type: textblock
#: dh_strip:102
msgid ""
"Control whether B<dh_strip> should be creating debug symbol packages when "
"possible."
msgstr ""
"可能な際に B<dh_strip> がデバッグシンボルパッケージを作るかどうかをコントロー"
"ルします。"

#. type: textblock
#: dh_strip:105
msgid "The default is to create debug symbol packages."
msgstr "デフォルトはデバッグシンボルパッケージを作成します。"

#. type: =item
#: dh_strip:107
msgid "B<--ddebs>, B<--no-ddebs>"
msgstr "B<--ddebs>, B<--no-ddebs>"

#. type: textblock
#: dh_strip:109
msgid "Historical name for B<--automatic-dbgsym> and B<--no-automatic-dbgsym>."
msgstr "B<--automatic-dbgsym> と B<--no-automatic-dbgsym> の歴史的な名前です。"

#. type: =item
#: dh_strip:111
msgid "B<--ddeb-migration=>I<package-relation>"
msgstr "B<--ddeb-migration=>I<package-relation>"

#. type: textblock
#: dh_strip:113
msgid "Historical name for B<--dbgsym-migration>."
msgstr "B<--dbgsym-migration> の歴史的な名前です。"

#. type: textblock
#: dh_strip:119
#, fuzzy
msgid ""
"If the B<DEB_BUILD_OPTIONS> environment variable contains B<nostrip>, "
"nothing will be stripped, in accordance with Debian policy (section 10.1 "
"\"Binaries\").  This will also inhibit the automatic creation of debug "
"symbol packages."
msgstr ""
"B<DEB_BUILD_OPTIONS> 環境変数に B<nostrip> が含まれていると、Debian ポリシー "
"(10.1章\"Binaries\") に従ってデバッグシンボルをまったく取り除かなくなります。"
"これはデバッグシンボルパッケージの自動生成を"

#. type: textblock
#: dh_strip:124
#, fuzzy
msgid ""
"The automatic creation of debug symbol packages can also be prevented by "
"adding B<noautodbgsym> to the B<DEB_BUILD_OPTIONS> environment variable.  "
"However, B<dh_strip> will still add debuglinks to ELF binaries when this "
"flag is set.  This is to ensure that the regular deb package will be "
"identical with and without this flag (assuming it is otherwise \"bit-for-bit"
"\" reproducible)."
msgstr ""
"デバッグシンボルパッケージの自動作成は、B<DEB_BUILD_OPTIONS> 環境変数に "
"B<noautodbgsym> を追加することでも抑制できます。しかし、B<dh_strip> はこのフ"
"ラグが設定されている場合、それでもELF バイナリへの debuglink を追加します。"
"(「1 bit も変わらない」reproducible ビルドであろうという仮定にも関わらず)"

#. type: textblock
#: dh_strip:133
msgid "Debian policy, version 3.0.1"
msgstr "Debian ポリシー バージョン 3.0.1"

#. type: textblock
#: dh_testdir:5
msgid "dh_testdir - test directory before building Debian package"
msgstr ""
"dh_testdir - Debian パッケージをビルドする前にディレクトリの状態を検証する"

#. type: textblock
#: dh_testdir:15
msgid "B<dh_testdir> [S<I<debhelper options>>] [S<I<file> ...>]"
msgstr "B<dh_testdir> [S<I<debhelper オプション>>] [S<I<ファイル> ...>]"

#. type: textblock
#: dh_testdir:19
msgid ""
"B<dh_testdir> tries to make sure that you are in the correct directory when "
"building a Debian package. It makes sure that the file F<debian/control> "
"exists, as well as any other files you specify. If not, it exits with an "
"error."
msgstr ""
"B<dh_testdir> コマンドは、Debian パッケージをビルドする際に、カレントディレク"
"トリが正しいディレクトリにあるかどうかを確認しようとします。また、同様に "
"F<debian/control> ファイルや、指定されている他のファイルがきちんと存在するか"
"どうかも確かめます。もし、そうでない場合、戻り値にエラー値を指定して処理を終"
"わります。"

#. type: textblock
#: dh_testdir:30
msgid "Test for the existence of these files too."
msgstr "これらのファイルの存在もあわせて確認します。"

#. type: textblock
#: dh_testroot:5
msgid "dh_testroot - ensure that a package is built as root"
msgstr "dh_testroot - パッケージが root 権限の元でビルドされるかを確認する"

#. type: textblock
#: dh_testroot:9
msgid "B<dh_testroot> [S<I<debhelper options>>]"
msgstr "B<dh_testroot> [S<I<debhelper オプション>>]"

#. type: textblock
#: dh_testroot:13
msgid ""
"B<dh_testroot> simply checks to see if you are root. If not, it exits with "
"an error. Debian packages must be built as root, though you can use "
"L<fakeroot(1)>"
msgstr ""
"B<dh_testroot> は単に、root 権限でパッケージをビルドしようとしているかどうか"
"を確かめます。もし root 権限を持っていなければ、戻り値にエラー値を指定して処"
"理を終わります。debian パッケージは root 権限でビルドされなければいけません。"
"もし root 権限でビルドできないのであれば、L<fakeroot(1)> を利用してください。"

#. type: textblock
#: dh_usrlocal:5
msgid "dh_usrlocal - migrate usr/local directories to maintainer scripts"
msgstr "dh_usrlocal - usr/local ディレクトリをメンテナスクリプトへ移行する"

#. type: textblock
#: dh_usrlocal:17
msgid "B<dh_usrlocal> [S<I<debhelper options>>] [B<-n>]"
msgstr "B<dh_usrlocal> [S<I<debhelper オプション>>] [B<-n>]"

#. type: textblock
#: dh_usrlocal:21
msgid ""
"B<dh_usrlocal> is a debhelper program that can be used for building packages "
"that will provide a subdirectory in F</usr/local> when installed."
msgstr ""
"B<dh_usrlocal> コマンドはインストールの際に F</usr/local> 以下にサブディレク"
"トリを作成するパッケージをビルドする時に使える debhelper プログラムです。"

#. type: textblock
#: dh_usrlocal:24
msgid ""
"It finds subdirectories of F<usr/local> in the package build directory, and "
"removes them, replacing them with maintainer script snippets (unless B<-n> "
"is used) to create the directories at install time, and remove them when the "
"package is removed, in a manner compliant with Debian policy. These snippets "
"are inserted into the maintainer scripts by B<dh_installdeb>. See "
"L<dh_installdeb(1)> for an explanation of debhelper maintainer script "
"snippets."
msgstr ""
"このコマンドは、パッケージビルドディレクトリにある F<usr/local> 以下のサブ"
"ディレクトリを走査・削除し、Debian policy の内容に沿った形でインストール時に"
"作成されたディレクトリを作成、及びパッケージ削除時に削除を実施するため、(B<-"
"n> が使われてない限り) メンテナスクリプトのスニペットで置換します。これらのス"
"ニペットは B<dh_installdeb> により、メンテナスクリプトへ挿入されます。"
"debhelper のメンテナスクリプトのスニペットに関する説明については、"
"L<dh_installdeb(1)> を参照して下さい。"

#. type: textblock
#: dh_usrlocal:32
msgid ""
"If the directories found in the build tree have unusual owners, groups, or "
"permissions, then those values will be preserved in the directories made by "
"the F<postinst> script. However, as a special exception, if a directory is "
"owned by root.root, it will be treated as if it is owned by root.staff and "
"is mode 2775. This is useful, since that is the group and mode policy "
"recommends for directories in F</usr/local>."
msgstr ""
"パッケージビルドツリー以下に通常ではない所有者、グループ、パーミッションを持"
"つサブディレクトリが存在すると、これらの情報は保存され、F<postinst> スクリプ"
"トによって後で反映されます。しかしながら、特別な例外として、ディレクトリが "
"root.root のユーザ・グループとなっている場合、ユーザ・グループは root.staff "
"で、パーミッションは 2775 であるものとして扱われます。これは F</usr/local> 以"
"下のディレクトリを扱うのに都合が良い為です。"

#. type: textblock
#: dh_usrlocal:57
msgid "Debian policy, version 2.2"
msgstr "Debian ポリシー バージョン 2.2"

#. type: textblock
#: dh_usrlocal:124
msgid "Andrew Stribblehill <ads@debian.org>"
msgstr "Andrew Stribblehill <ads@debian.org>"

#. type: textblock
#: dh_systemd_enable:5
msgid "dh_systemd_enable - enable/disable systemd unit files"
msgstr "dh_systemd_enable - systemd unit ファイルを有効／無効にする"

#. type: textblock
#: dh_systemd_enable:16
msgid ""
"B<dh_systemd_enable> [S<I<debhelper options>>] [B<--no-enable>] [B<--"
"name=>I<name>] [S<I<unit file> ...>]"
msgstr ""
"B<dh_systemd_enable> [S<I<debhelper オプション>>] [B<--no-enable>] [B<--"
"name=>I<name>] [S<I<unit ファイル> ...>]"

#. type: textblock
#: dh_systemd_enable:20
msgid ""
"B<dh_systemd_enable> is a debhelper program that is responsible for enabling "
"and disabling systemd unit files."
msgstr ""
"B<dh_systemd_enable> は systemd ユニットファイルの有効化・無効化を担当する "
"debhelper プログラムです。"

#. type: textblock
#: dh_systemd_enable:23
#, fuzzy
msgid ""
"In the simple case, it finds all unit files installed by a package (e.g.  "
"bacula-fd.service) and enables them. It is not necessary that the machine "
"actually runs systemd during package installation time, enabling happens on "
"all machines in order to be able to switch from sysvinit to systemd and back."
msgstr ""
"シンプルな場合には、パッケージによってインストールされた全ての unit ファイル "
"(例: bacula-fd.service) を探して有効にします。sysvinit から systemd へスイッ"
"チする、あるいは戻すことができるように"

#. type: textblock
#: dh_systemd_enable:28
#, fuzzy
msgid ""
"In the complex case, you can call B<dh_systemd_enable> and "
"B<dh_systemd_start> manually (by overwriting the debian/rules targets) and "
"specify flags per unit file. An example is colord, which ships colord."
"service, a dbus-activated service without an [Install] section. This service "
"file cannot be enabled or disabled (a state called \"static\" by systemd) "
"because it has no [Install] section. Therefore, running dh_systemd_enable "
"does not make sense."
msgstr ""

#. type: textblock
#: dh_systemd_enable:35
#, fuzzy
msgid ""
"For only generating blocks for specific service files, you need to pass them "
"as arguments, e.g. B<dh_systemd_enable quota.service> and "
"B<dh_systemd_enable --name=quotarpc quotarpc.service>."
msgstr ""

#. type: textblock
#: dh_systemd_enable:45
#, fuzzy
msgid ""
"If this exists, it is installed into lib/systemd/system/I<package>.service "
"in the package build directory."
msgstr ""
"もし本ファイルが存在すれば、パッケージビルドディレクトリ以下に etc/init/"
"I<package>.conf ファイルとしてインストールされます。"

#. type: textblock
#: dh_systemd_enable:50
#, fuzzy
msgid ""
"If this exists, it is installed into usr/lib/tmpfiles.d/I<package>.conf in "
"the package build directory. (The tmpfiles.d mechanism is currently only "
"used by systemd.)"
msgstr ""
"もし本ファイルが存在すれば、パッケージビルドディレクトリ以下に etc/init/"
"I<package>.conf ファイルとしてインストールされます。"

#. type: =item
#: dh_systemd_enable:60
msgid "B<--no-enable>"
msgstr "B<--no-enable>"

#. type: textblock
#: dh_systemd_enable:62
#, fuzzy
msgid ""
"Just disable the service(s) on purge, but do not enable them by default."
msgstr ""
"完全削除 (purge) の際にサービスを無効にしますが、デフォルトでは有効にしませ"
"ん。"

#. type: textblock
#: dh_systemd_enable:66
#, fuzzy
msgid ""
"Install the service file as I<name.service> instead of the default filename, "
"which is the I<package.service>. When this parameter is used, "
"B<dh_systemd_enable> looks for and installs files named F<debian/package."
"name.service> instead of the usual F<debian/package.service>."
msgstr ""
"パッケージ名の代わりに、I<name> をファイル名とするファイルを、upstart 用 job "
"ファイルや、init スクリプト (あるいはデフォルトのファイル) として利用します。"
"このパラメータが利用されると、B<dh_installinit> は F<debian/package.name."
"upstart>、F<debian/package.name.init>、F<debian/package.name.default> を探"
"し、インストールを行います。この場合、通常使われる F<debian/package."
"upstart>、F<debian/package.init>、F<debian/package.default> は利用されませ"
"ん。"

#. type: textblock
#: dh_systemd_enable:75 dh_systemd_start:68
msgid ""
"Note that this command is not idempotent. L<dh_prep(1)> should be called "
"between invocations of this command (with the same arguments). Otherwise, it "
"may cause multiple instances of the same text to be added to maintainer "
"scripts."
msgstr ""
"このコマンドには冪等性がありません。このコマンドを複数回呼び出す際には必ず間に "
"L<dh_prep(1)> を (同じ引数を付けて) 挿入してください。さもないと、メンテナ"
"スクリプト中に同じ内容のコードを繰り返し挿入してしまいます。"

#. type: textblock
#: dh_systemd_enable:80
msgid ""
"Note that B<dh_systemd_enable> should be run before B<dh_installinit>.  The "
"default sequence in B<dh> does the right thing, this note is only relevant "
"when you are calling B<dh_systemd_enable> manually."
msgstr ""

#. type: textblock
#: dh_systemd_enable:266
msgid "L<dh_systemd_start(1)>, L<debhelper(7)>"
msgstr "L<dh_systemd_start(1)>, L<debhelper(7)>"

#. type: textblock
#: dh_systemd_enable:270 dh_systemd_start:252
msgid "pkg-systemd-maintainers@lists.alioth.debian.org"
msgstr "pkg-systemd-maintainers@lists.alioth.debian.org"

#. type: textblock
#: dh_systemd_start:5
msgid "dh_systemd_start - start/stop/restart systemd unit files"
msgstr "dh_systemd_start - systemd ユニットファイルを start/stop/restart する"

#. type: textblock
#: dh_systemd_start:17
msgid ""
"B<dh_systemd_start> [S<I<debhelper options>>] [B<--restart-after-upgrade>] "
"[B<--no-stop-on-upgrade>] [S<I<unit file> ...>]"
msgstr ""
"B<dh_systemd_start> [S<I<debhelper オプション>>] [B<--restart-after-"
"upgrade>] [B<--no-stop-on-upgrade>]  [S<I<unit ファイル> ...>]"

#. type: textblock
#: dh_systemd_start:21
#, fuzzy
msgid ""
"B<dh_systemd_start> is a debhelper program that is responsible for starting/"
"stopping or restarting systemd unit files in case no corresponding sysv init "
"script is available."
msgstr ""

#. type: textblock
#: dh_systemd_start:25
#, fuzzy
msgid ""
"As with B<dh_installinit>, the unit file is stopped before upgrades and "
"started afterwards (unless B<--restart-after-upgrade> is specified, in which "
"case it will only be restarted after the upgrade).  This logic is not used "
"when there is a corresponding SysV init script because invoke-rc.d performs "
"the stop/start/restart in that case."
msgstr ""

#. type: =item
#: dh_systemd_start:35
msgid "B<--restart-after-upgrade>"
msgstr "B<--restart-after-upgrade>"

#. type: textblock
#: dh_systemd_start:37
#, fuzzy
msgid ""
"Do not stop the unit file until after the package upgrade has been "
"completed.  This is the default behaviour in compat 10."
msgstr ""
"パッケージのアップグレードが完了するまで init スクリプトの stop 手続きを呼び"
"出さないようにします。これはこのコマンドについて、デフォルトの振る舞いとは異"
"なります。通常は、F<prerm> にて stop 手続きが呼ばれ、F<postinst> が start 手"
"続きを再び呼び出します。"

#. type: textblock
#: dh_systemd_start:40
#, fuzzy
msgid ""
"In earlier compat levels the default was to stop the unit file in the "
"F<prerm>, and start it again in the F<postinst>."
msgstr ""
"パッケージのアップグレードが完了するまで init スクリプトの stop 手続きを呼び"
"出さないようにします。これはこのコマンドについて、デフォルトの振る舞いとは異"
"なります。通常は、F<prerm> にて stop 手続きが呼ばれ、F<postinst> が start 手"
"続きを再び呼び出します。"

#. type: textblock
#: dh_systemd_start:57
msgid "Do not stop service on upgrade."
msgstr "サービスをアップグレード中に停止させません。"

#. type: textblock
#: dh_systemd_start:61
#, fuzzy
msgid ""
"Do not start the unit file after upgrades and after initial installation "
"(the latter is only relevant for services without a corresponding init "
"script)."
msgstr ""

#. type: textblock
#: dh_systemd_start:73
#, fuzzy
msgid ""
"Note that B<dh_systemd_start> should be run after B<dh_installinit> so that "
"it can detect corresponding SysV init scripts. The default sequence in B<dh> "
"does the right thing, this note is only relevant when you are calling "
"B<dh_systemd_start> manually."
msgstr ""

#. type: textblock
#: strings-kept-translations.pod:7
msgid "This compatibility level is open for beta testing; changes may occur."
msgstr "この互換性レベルはベータテスト中です。変更が加わります。"

