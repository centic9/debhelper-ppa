# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2014-02-19 14:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: =head1
#: debhelper.pod:1 dh:3 dh_auto_build:3 dh_auto_clean:3 dh_auto_configure:3 dh_auto_install:3 dh_auto_test:3 dh_bugfiles:3 dh_builddeb:3 dh_clean:3 dh_compress:3 dh_desktop:3 dh_fixperms:3 dh_gconf:3 dh_gencontrol:3 dh_icons:3 dh_install:3 dh_installcatalogs:3 dh_installchangelogs:3 dh_installcron:3 dh_installdeb:3 dh_installdebconf:3 dh_installdirs:3 dh_installdocs:3 dh_installemacsen:3 dh_installexamples:3 dh_installifupdown:3 dh_installinfo:3 dh_installinit:3 dh_installlogcheck:3 dh_installlogrotate:3 dh_installman:3 dh_installmanpages:3 dh_installmenu:3 dh_installmime:3 dh_installmodules:3 dh_installpam:3 dh_installppp:3 dh_installudev:3 dh_installwm:3 dh_installxfonts:3 dh_link:3 dh_lintian:3 dh_listpackages:3 dh_makeshlibs:3 dh_md5sums:3 dh_movefiles:3 dh_perl:3 dh_prep:3 dh_scrollkeeper:3 dh_shlibdeps:3 dh_strip:3 dh_suidregister:3 dh_testdir:3 dh_testroot:3 dh_undocumented:3 dh_usrlocal:3
msgid "NAME"
msgstr ""

#. type: textblock
#: debhelper.pod:3
msgid "debhelper - the debhelper tool suite"
msgstr ""

#. type: =head1
#: debhelper.pod:5 dh:12 dh_auto_build:12 dh_auto_clean:13 dh_auto_configure:12 dh_auto_install:15 dh_auto_test:13 dh_bugfiles:12 dh_builddeb:12 dh_clean:12 dh_compress:13 dh_desktop:12 dh_fixperms:12 dh_gconf:12 dh_gencontrol:12 dh_icons:13 dh_install:13 dh_installcatalogs:14 dh_installchangelogs:12 dh_installcron:12 dh_installdeb:12 dh_installdebconf:12 dh_installdirs:12 dh_installdocs:12 dh_installemacsen:12 dh_installexamples:12 dh_installifupdown:12 dh_installinfo:12 dh_installinit:13 dh_installlogcheck:12 dh_installlogrotate:12 dh_installman:13 dh_installmanpages:13 dh_installmenu:12 dh_installmime:12 dh_installmodules:13 dh_installpam:12 dh_installppp:12 dh_installudev:13 dh_installwm:12 dh_installxfonts:12 dh_link:13 dh_lintian:12 dh_listpackages:12 dh_makeshlibs:12 dh_md5sums:13 dh_movefiles:12 dh_perl:14 dh_prep:12 dh_scrollkeeper:12 dh_shlibdeps:13 dh_strip:13 dh_suidregister:7 dh_testdir:12 dh_testroot:7 dh_undocumented:12 dh_usrlocal:15
msgid "SYNOPSIS"
msgstr ""

#. type: textblock
#: debhelper.pod:7
msgid ""
"B<dh_>I<*> [B<-v>] [B<-a>] [B<-i>] [B<-s>] [B<--no-act>] [B<-p>I<package>] "
"[B<-N>I<package>] [B<-P>I<tmpdir>]"
msgstr ""

#. type: =head1
#: debhelper.pod:9 dh:16 dh_auto_build:16 dh_auto_clean:17 dh_auto_configure:16 dh_auto_install:19 dh_auto_test:17 dh_bugfiles:16 dh_builddeb:16 dh_clean:16 dh_compress:17 dh_desktop:16 dh_fixperms:16 dh_gconf:16 dh_gencontrol:16 dh_icons:17 dh_install:17 dh_installcatalogs:18 dh_installchangelogs:16 dh_installcron:16 dh_installdeb:16 dh_installdebconf:16 dh_installdirs:16 dh_installdocs:16 dh_installemacsen:16 dh_installexamples:16 dh_installifupdown:16 dh_installinfo:16 dh_installinit:17 dh_installlogcheck:16 dh_installlogrotate:16 dh_installman:17 dh_installmanpages:17 dh_installmenu:16 dh_installmime:16 dh_installmodules:17 dh_installpam:16 dh_installppp:16 dh_installudev:17 dh_installwm:16 dh_installxfonts:16 dh_link:17 dh_lintian:16 dh_listpackages:16 dh_makeshlibs:16 dh_md5sums:17 dh_movefiles:16 dh_perl:18 dh_prep:16 dh_scrollkeeper:16 dh_shlibdeps:17 dh_strip:17 dh_suidregister:11 dh_testdir:16 dh_testroot:11 dh_undocumented:16 dh_usrlocal:19
msgid "DESCRIPTION"
msgstr ""

#. type: textblock
#: debhelper.pod:11
msgid ""
"Debhelper is used to help you build a Debian package. The philosophy behind "
"debhelper is to provide a collection of small, simple, and easily understood "
"tools that are used in F<debian/rules> to automate various common aspects of "
"building a package. This means less work for you, the packager.  It also, to "
"some degree means that these tools can be changed if Debian policy changes, "
"and packages that use them will require only a rebuild to comply with the "
"new policy."
msgstr ""

#. type: textblock
#: debhelper.pod:19
msgid ""
"A typical F<debian/rules> file that uses debhelper will call several "
"debhelper commands in sequence, or use L<dh(1)> to automate this "
"process. Examples of rules files that use debhelper are in "
"F</usr/share/doc/debhelper/examples/>"
msgstr ""

#. type: textblock
#: debhelper.pod:23
msgid ""
"To create a new Debian package using debhelper, you can just copy one of the "
"sample rules files and edit it by hand. Or you can try the B<dh-make> "
"package, which contains a L<dh_make|dh_make(1)> command that partially "
"automates the process. For a more gentle introduction, the B<maint-guide> "
"Debian package contains a tutorial about making your first package using "
"debhelper."
msgstr ""

#. type: =head1
#: debhelper.pod:29
msgid "DEBHELPER COMMANDS"
msgstr ""

#. type: textblock
#: debhelper.pod:31
msgid ""
"Here is the list of debhelper commands you can use. See their man pages for "
"additional documentation."
msgstr ""

#. type: textblock
#: debhelper.pod:36
msgid "#LIST#"
msgstr ""

#. type: =head2
#: debhelper.pod:40
msgid "Deprecated Commands"
msgstr ""

#. type: textblock
#: debhelper.pod:42
msgid "A few debhelper commands are deprecated and should not be used."
msgstr ""

#. type: textblock
#: debhelper.pod:46
msgid "#LIST_DEPRECATED#"
msgstr ""

#. type: =head2
#: debhelper.pod:50
msgid "Other Commands"
msgstr ""

#. type: textblock
#: debhelper.pod:52
msgid ""
"If a program's name starts with B<dh_>, and the program is not on the above "
"lists, then it is not part of the debhelper package, but it should still "
"work like the other programs described on this page."
msgstr ""

#. type: =head1
#: debhelper.pod:56
msgid "DEBHELPER CONFIG FILES"
msgstr ""

#. type: textblock
#: debhelper.pod:58
msgid ""
"Many debhelper commands make use of files in F<debian/> to control what they "
"do. Besides the common F<debian/changelog> and F<debian/control>, which are "
"in all packages, not just those using debhelper, some additional files can "
"be used to configure the behavior of specific debhelper commands. These "
"files are typically named debian/I<package>.foo (where I<package> of course, "
"is replaced with the package that is being acted on)."
msgstr ""

#. type: textblock
#: debhelper.pod:65
msgid ""
"For example, B<dh_installdocs> uses files named F<debian/package.docs> to "
"list the documentation files it will install. See the man pages of "
"individual commands for details about the names and formats of the files "
"they use.  Generally, these files will list files to act on, one file per "
"line. Some programs in debhelper use pairs of files and destinations or "
"slightly more complicated formats."
msgstr ""

#. type: textblock
#: debhelper.pod:72
msgid ""
"Note for the first (or only) binary package listed in F<debian/control>, "
"debhelper will use F<debian/foo> when there's no F<debian/package.foo> file."
msgstr ""

#. type: textblock
#: debhelper.pod:76
msgid ""
"In some rare cases, you may want to have different versions of these files "
"for different architectures or OSes. If files named "
"debian/I<package>.foo.I<ARCH> or debian/I<package>.foo.I<OS> exist, where "
"I<ARCH> and I<OS> are the same as the output of \"B<dpkg-architecture "
"-qDEB_HOST_ARCH>\" / \"B<dpkg-architecture -qDEB_HOST_ARCH_OS>\", then they "
"will be used in preference to other, more general files."
msgstr ""

#. type: textblock
#: debhelper.pod:83
msgid ""
"Mostly, these config files are used to specify lists of various types of "
"files. Documentation or example files to install, files to move, and so on.  "
"When appropriate, in cases like these, you can use standard shell wildcard "
"characters (B<?> and B<*> and B<[>I<..>B<]> character classes) in the "
"files.  You can also put comments in these files; lines beginning with B<#> "
"are ignored."
msgstr ""

#. type: textblock
#: debhelper.pod:90
msgid ""
"The syntax of these files is intentionally kept very simple to make them "
"easy to read, understand, and modify. If you prefer power and complexity, "
"you can make the file executable, and write a program that outputs whatever "
"content is appropriate for a given situation. When you do so, the output is "
"not further processed to expand wildcards or strip comments."
msgstr ""

#. type: =head1
#: debhelper.pod:96
msgid "SHARED DEBHELPER OPTIONS"
msgstr ""

#. type: textblock
#: debhelper.pod:98
msgid "The following command line options are supported by all debhelper programs."
msgstr ""

#. type: =item
#: debhelper.pod:102
msgid "B<-v>, B<--verbose>"
msgstr ""

#. type: textblock
#: debhelper.pod:104
msgid "Verbose mode: show all commands that modify the package build directory."
msgstr ""

#. type: =item
#: debhelper.pod:106 dh:64
msgid "B<--no-act>"
msgstr ""

#. type: textblock
#: debhelper.pod:108
msgid ""
"Do not really do anything. If used with -v, the result is that the command "
"will output what it would have done."
msgstr ""

#. type: =item
#: debhelper.pod:111
msgid "B<-a>, B<--arch>"
msgstr ""

#. type: textblock
#: debhelper.pod:113
msgid ""
"Act on architecture dependent packages that should be built for the build "
"architecture."
msgstr ""

#. type: =item
#: debhelper.pod:116
msgid "B<-i>, B<--indep>"
msgstr ""

#. type: textblock
#: debhelper.pod:118
msgid "Act on all architecture independent packages."
msgstr ""

#. type: =item
#: debhelper.pod:120
msgid "B<-p>I<package>, B<--package=>I<package>"
msgstr ""

#. type: textblock
#: debhelper.pod:122
msgid ""
"Act on the package named I<package>. This option may be specified multiple "
"times to make debhelper operate on a given set of packages."
msgstr ""

#. type: =item
#: debhelper.pod:125
msgid "B<-s>, B<--same-arch>"
msgstr ""

#. type: textblock
#: debhelper.pod:127
msgid ""
"This used to be a smarter version of the B<-a> flag, but the B<-a> flag is "
"now equally smart."
msgstr ""

#. type: =item
#: debhelper.pod:130
msgid "B<-N>I<package>, B<--no-package=>I<package>"
msgstr ""

#. type: textblock
#: debhelper.pod:132
msgid ""
"Do not act on the specified package even if an B<-a>, B<-i>, or B<-p> option "
"lists the package as one that should be acted on."
msgstr ""

#. type: =item
#: debhelper.pod:135
msgid "B<--remaining-packages>"
msgstr ""

#. type: textblock
#: debhelper.pod:137
msgid ""
"Do not act on the packages which have already been acted on by this "
"debhelper command earlier (i.e. if the command is present in the package "
"debhelper log).  For example, if you need to call the command with special "
"options only for a couple of binary packages, pass this option to the last "
"call of the command to process the rest of packages with default settings."
msgstr ""

#. type: =item
#: debhelper.pod:143
msgid "B<--ignore=>I<file>"
msgstr ""

#. type: textblock
#: debhelper.pod:145
msgid ""
"Ignore the specified file. This can be used if F<debian/> contains a "
"debhelper config file that a debhelper command should not act on. Note that "
"F<debian/compat>, F<debian/control>, and F<debian/changelog> can't be "
"ignored, but then, there should never be a reason to ignore those files."
msgstr ""

#. type: textblock
#: debhelper.pod:150
msgid ""
"For example, if upstream ships a F<debian/init> that you don't want "
"B<dh_installinit> to install, use B<--ignore=debian/init>"
msgstr ""

#. type: =item
#: debhelper.pod:153
msgid "B<-P>I<tmpdir>, B<--tmpdir=>I<tmpdir>"
msgstr ""

#. type: textblock
#: debhelper.pod:155
msgid "Use I<tmpdir> for package build directory. The default is debian/I<package>"
msgstr ""

#. type: =item
#: debhelper.pod:157
msgid "B<--mainpackage=>I<package>"
msgstr ""

#. type: textblock
#: debhelper.pod:159
msgid ""
"This little-used option changes the package which debhelper considers the "
"\"main package\", that is, the first one listed in F<debian/control>, and "
"the one for which F<debian/foo> files can be used instead of the usual "
"F<debian/package.foo> files."
msgstr ""

#. type: =item
#: debhelper.pod:164
msgid "B<-O=>I<option>|I<bundle>"
msgstr ""

#. type: textblock
#: debhelper.pod:166
msgid ""
"This is used by L<dh(1)> when passing user-specified options to all the "
"commands it runs. If the command supports the specified option or option "
"bundle, it will take effect. If the command does not support the option (or "
"any part of an option bundle), it will be ignored."
msgstr ""

#. type: =head1
#: debhelper.pod:173
msgid "COMMON DEBHELPER OPTIONS"
msgstr ""

#. type: textblock
#: debhelper.pod:175
msgid ""
"The following command line options are supported by some debhelper "
"programs.  See the man page of each program for a complete explanation of "
"what each option does."
msgstr ""

#. type: =item
#: debhelper.pod:181
msgid "B<-n>"
msgstr ""

#. type: textblock
#: debhelper.pod:183
msgid "Do not modify F<postinst>, F<postrm>, etc. scripts."
msgstr ""

#. type: =item
#: debhelper.pod:185 dh_compress:52 dh_install:81 dh_installchangelogs:69 dh_installdocs:80 dh_installexamples:41 dh_link:62 dh_makeshlibs:81 dh_md5sums:37 dh_shlibdeps:30 dh_strip:39
msgid "B<-X>I<item>, B<--exclude=>I<item>"
msgstr ""

#. type: textblock
#: debhelper.pod:187
msgid ""
"Exclude an item from processing. This option may be used multiple times, to "
"exclude more than one thing. The \\fIitem\\fR is typically part of a "
"filename, and any file containing the specified text will be excluded."
msgstr ""

#. type: =item
#: debhelper.pod:191 dh_bugfiles:54 dh_compress:59 dh_installdirs:35 dh_installdocs:75 dh_installexamples:36 dh_installinfo:35 dh_installman:65 dh_link:57
msgid "B<-A>, B<--all>"
msgstr ""

#. type: textblock
#: debhelper.pod:193
msgid ""
"Makes files or other items that are specified on the command line take "
"effect in ALL packages acted on, not just the first."
msgstr ""

#. type: =head1
#: debhelper.pod:198
msgid "BUILD SYSTEM OPTIONS"
msgstr ""

#. type: textblock
#: debhelper.pod:200
msgid ""
"The following command line options are supported by all of the "
"B<dh_auto_>I<*> debhelper programs. These programs support a variety of "
"build systems, and normally heuristically determine which to use, and how to "
"use them.  You can use these command line options to override the default "
"behavior.  Typically these are passed to L<dh(1)>, which then passes them to "
"all the B<dh_auto_>I<*> programs."
msgstr ""

#. type: =item
#: debhelper.pod:209
msgid "B<-S>I<buildsystem>, B<--buildsystem=>I<buildsystem>"
msgstr ""

#. type: textblock
#: debhelper.pod:211
msgid ""
"Force use of the specified I<buildsystem>, instead of trying to auto-select "
"one which might be applicable for the package."
msgstr ""

#. type: =item
#: debhelper.pod:214
msgid "B<-D>I<directory>, B<--sourcedirectory=>I<directory>"
msgstr ""

#. type: textblock
#: debhelper.pod:216
msgid ""
"Assume that the original package source tree is at the specified "
"I<directory> rather than the top level directory of the Debian source "
"package tree."
msgstr ""

#. type: =item
#: debhelper.pod:220
msgid "B<-B>[I<directory>], B<--builddirectory=>[I<directory>]"
msgstr ""

#. type: textblock
#: debhelper.pod:222
msgid ""
"Enable out of source building and use the specified I<directory> as the "
"build directory. If I<directory> parameter is omitted, a default build "
"directory will chosen."
msgstr ""

#. type: textblock
#: debhelper.pod:226
msgid ""
"If this option is not specified, building will be done in source by default "
"unless the build system requires or prefers out of source tree building.  In "
"such a case, the default build directory will be used even if "
"B<--builddirectory> is not specified."
msgstr ""

#. type: textblock
#: debhelper.pod:231
msgid ""
"If the build system prefers out of source tree building but still allows in "
"source building, the latter can be re-enabled by passing a build directory "
"path that is the same as the source directory path."
msgstr ""

#. type: =item
#: debhelper.pod:235
msgid "B<--parallel>"
msgstr ""

#. type: textblock
#: debhelper.pod:237
msgid ""
"Enable parallel builds if underlying build system supports them.  The number "
"of parallel jobs is controlled by the B<DEB_BUILD_OPTIONS> environment "
"variable (L<Debian Policy, section 4.9.1>) at build time. It might also be "
"subject to a build system specific limit."
msgstr ""

#. type: textblock
#: debhelper.pod:242
msgid ""
"If this option is not specified, debhelper currently defaults to not "
"allowing parallel package builds."
msgstr ""

#. type: =item
#: debhelper.pod:245
msgid "B<--max-parallel=>I<maximum>"
msgstr ""

#. type: textblock
#: debhelper.pod:247
msgid ""
"This option implies B<--parallel> and allows further limiting the number of "
"jobs that can be used in a parallel build. If the package build is known to "
"only work with certain levels of concurrency, you can set this to the "
"maximum level that is known to work, or that you wish to support."
msgstr ""

#. type: =item
#: debhelper.pod:252 dh:60
msgid "B<--list>, B<-l>"
msgstr ""

#. type: textblock
#: debhelper.pod:254
msgid ""
"List all build systems supported by debhelper on this system. The list "
"includes both default and third party build systems (marked as such). Also "
"shows which build system would be automatically selected, or which one is "
"manually specified with the B<--buildsystem> option."
msgstr ""

#. type: =head1
#: debhelper.pod:261
msgid "COMPATIBILITY LEVELS"
msgstr ""

#. type: textblock
#: debhelper.pod:263
msgid ""
"From time to time, major non-backwards-compatible changes need to be made to "
"debhelper, to keep it clean and well-designed as needs change and its author "
"gains more experience. To prevent such major changes from breaking existing "
"packages, the concept of debhelper compatibility levels was introduced. You "
"tell debhelper which compatibility level it should use, and it modifies its "
"behavior in various ways."
msgstr ""

#. type: textblock
#: debhelper.pod:270
msgid ""
"Tell debhelper what compatibility level to use by writing a number to "
"F<debian/compat>. For example, to turn on v9 mode:"
msgstr ""

#. type: verbatim
#: debhelper.pod:273
#, no-wrap
msgid ""
"  % echo 9 > debian/compat\n"
"\n"
msgstr ""

#. type: textblock
#: debhelper.pod:275
msgid ""
"Your package will also need a versioned build dependency on a version of "
"debhelper equal to (or greater than) the compatibility level your package "
"uses. So for compatibility level 9, ensure debian/control has:"
msgstr ""

#. type: verbatim
#: debhelper.pod:279
#, no-wrap
msgid ""
"  Build-Depends: debhelper (>= 9)\n"
"\n"
msgstr ""

#. type: textblock
#: debhelper.pod:281
msgid ""
"Unless otherwise indicated, all debhelper documentation assumes that you are "
"using the most recent compatibility level, and in most cases does not "
"indicate if the behavior is different in an earlier compatibility level, so "
"if you are not using the most recent compatibility level, you're advised to "
"read below for notes about what is different in earlier compatibility "
"levels."
msgstr ""

#. type: textblock
#: debhelper.pod:288
msgid "These are the available compatibility levels:"
msgstr ""

#. type: =item
#: debhelper.pod:292
msgid "v1"
msgstr ""

#. type: textblock
#: debhelper.pod:294
msgid ""
"This is the original debhelper compatibility level, and so it is the default "
"one. In this mode, debhelper will use F<debian/tmp> as the package tree "
"directory for the first binary package listed in the control file, while "
"using debian/I<package> for all other packages listed in the F<control> "
"file."
msgstr ""

#. type: textblock
#: debhelper.pod:299 debhelper.pod:306 debhelper.pod:329 debhelper.pod:358
msgid "This mode is deprecated."
msgstr ""

#. type: =item
#: debhelper.pod:301
msgid "v2"
msgstr ""

#. type: textblock
#: debhelper.pod:303
msgid ""
"In this mode, debhelper will consistently use debian/I<package> as the "
"package tree directory for every package that is built."
msgstr ""

#. type: =item
#: debhelper.pod:308
msgid "v3"
msgstr ""

#. type: textblock
#: debhelper.pod:310
msgid "This mode works like v2, with the following additions:"
msgstr ""

#. type: =item
#: debhelper.pod:314 debhelper.pod:319 debhelper.pod:323 debhelper.pod:337 debhelper.pod:342 debhelper.pod:347 debhelper.pod:352 debhelper.pod:366 debhelper.pod:370 debhelper.pod:375 debhelper.pod:379 debhelper.pod:391 debhelper.pod:396 debhelper.pod:402 debhelper.pod:408 debhelper.pod:421 debhelper.pod:428 debhelper.pod:432 debhelper.pod:436 debhelper.pod:449 debhelper.pod:453 debhelper.pod:461 debhelper.pod:466 debhelper.pod:480 debhelper.pod:485 debhelper.pod:492 debhelper.pod:497 debhelper.pod:502 debhelper.pod:506 debhelper.pod:512 debhelper.pod:517 debhelper.pod:522 debhelper.pod:535 debhelper.pod:542
msgid "-"
msgstr ""

#. type: textblock
#: debhelper.pod:316
msgid ""
"Debhelper config files support globbing via B<*> and B<?>, when "
"appropriate. To turn this off and use those characters raw, just prefix with "
"a backslash."
msgstr ""

#. type: textblock
#: debhelper.pod:321
msgid ""
"B<dh_makeshlibs> makes the F<postinst> and F<postrm> scripts call "
"B<ldconfig>."
msgstr ""

#. type: textblock
#: debhelper.pod:325
msgid ""
"Every file in F<etc/> is automatically flagged as a conffile by "
"B<dh_installdeb>."
msgstr ""

#. type: =item
#: debhelper.pod:331
msgid "v4"
msgstr ""

#. type: textblock
#: debhelper.pod:333
msgid "Changes from v3 are:"
msgstr ""

#. type: textblock
#: debhelper.pod:339
msgid ""
"B<dh_makeshlibs -V> will not include the Debian part of the version number "
"in the generated dependency line in the shlibs file."
msgstr ""

#. type: textblock
#: debhelper.pod:344
msgid ""
"You are encouraged to put the new B<${misc:Depends}> into F<debian/control> "
"to supplement the B<${shlibs:Depends}> field."
msgstr ""

#. type: textblock
#: debhelper.pod:349
msgid ""
"B<dh_fixperms> will make all files in F<bin/> directories and in "
"F<etc/init.d> executable."
msgstr ""

#. type: textblock
#: debhelper.pod:354
msgid "B<dh_link> will correct existing links to conform with policy."
msgstr ""

#. type: =item
#: debhelper.pod:360
msgid "v5"
msgstr ""

#. type: textblock
#: debhelper.pod:362
msgid "Changes from v4 are:"
msgstr ""

#. type: textblock
#: debhelper.pod:368
msgid "Comments are ignored in debhelper config files."
msgstr ""

#. type: textblock
#: debhelper.pod:372
msgid ""
"B<dh_strip --dbg-package> now specifies the name of a package to put "
"debugging symbols in, not the packages to take the symbols from."
msgstr ""

#. type: textblock
#: debhelper.pod:377
msgid "B<dh_installdocs> skips installing empty files."
msgstr ""

#. type: textblock
#: debhelper.pod:381
msgid "B<dh_install> errors out if wildcards expand to nothing."
msgstr ""

#. type: =item
#: debhelper.pod:385
msgid "v6"
msgstr ""

#. type: textblock
#: debhelper.pod:387
msgid "Changes from v5 are:"
msgstr ""

#. type: textblock
#: debhelper.pod:393
msgid ""
"Commands that generate maintainer script fragments will order the fragments "
"in reverse order for the F<prerm> and F<postrm> scripts."
msgstr ""

#. type: textblock
#: debhelper.pod:398
msgid ""
"B<dh_installwm> will install a slave manpage link for "
"F<x-window-manager.1.gz>, if it sees the man page in F<usr/share/man/man1> "
"in the package build directory."
msgstr ""

#. type: textblock
#: debhelper.pod:404
msgid ""
"B<dh_builddeb> did not previously delete everything matching "
"B<DH_ALWAYS_EXCLUDE>, if it was set to a list of things to exclude, such as "
"B<CVS:.svn:.git>. Now it does."
msgstr ""

#. type: textblock
#: debhelper.pod:410
msgid ""
"B<dh_installman> allows overwriting existing man pages in the package build "
"directory. In previous compatibility levels it silently refuses to do this."
msgstr ""

#. type: =item
#: debhelper.pod:415
msgid "v7"
msgstr ""

#. type: textblock
#: debhelper.pod:417
msgid "Changes from v6 are:"
msgstr ""

#. type: textblock
#: debhelper.pod:423
msgid ""
"B<dh_install>, will fall back to looking for files in F<debian/tmp> if it "
"doesn't find them in the current directory (or wherever you tell it look "
"using B<--sourcedir>). This allows B<dh_install> to interoperate with "
"B<dh_auto_install>, which installs to F<debian/tmp>, without needing any "
"special parameters."
msgstr ""

#. type: textblock
#: debhelper.pod:430
msgid "B<dh_clean> will read F<debian/clean> and delete files listed there."
msgstr ""

#. type: textblock
#: debhelper.pod:434
msgid "B<dh_clean> will delete toplevel F<*-stamp> files."
msgstr ""

#. type: textblock
#: debhelper.pod:438
msgid ""
"B<dh_installchangelogs> will guess at what file is the upstream changelog if "
"none is specified."
msgstr ""

#. type: =item
#: debhelper.pod:443
msgid "v8"
msgstr ""

#. type: textblock
#: debhelper.pod:445
msgid "Changes from v7 are:"
msgstr ""

#. type: textblock
#: debhelper.pod:451
msgid "Commands will fail rather than warning when they are passed unknown options."
msgstr ""

#. type: textblock
#: debhelper.pod:455
msgid ""
"B<dh_makeshlibs> will run B<dpkg-gensymbols> on all shared libraries that it "
"generates shlibs files for. So B<-X> can be used to exclude libraries.  "
"Also, libraries in unusual locations that B<dpkg-gensymbols> would not have "
"processed before will be passed to it, a behavior change that can cause some "
"packages to fail to build."
msgstr ""

#. type: textblock
#: debhelper.pod:463
msgid ""
"B<dh> requires the sequence to run be specified as the first parameter, and "
"any switches come after it. Ie, use \"B<dh $@ --foo>\", not \"B<dh --foo "
"$@>\"."
msgstr ""

#. type: textblock
#: debhelper.pod:468
msgid ""
"B<dh_auto_>I<*> prefer to use Perl's B<Module::Build> in preference to "
"F<Makefile.PL>."
msgstr ""

#. type: =item
#: debhelper.pod:472
msgid "v9"
msgstr ""

#. type: textblock
#: debhelper.pod:474
msgid "This is the recommended mode of operation."
msgstr ""

#. type: textblock
#: debhelper.pod:476
msgid "Changes from v8 are:"
msgstr ""

#. type: textblock
#: debhelper.pod:482
msgid ""
"Multiarch support. In particular, B<dh_auto_configure> passes multiarch "
"directories to autoconf in --libdir and --libexecdir."
msgstr ""

#. type: textblock
#: debhelper.pod:487
msgid ""
"dh is aware of the usual dependencies between targets in debian/rules.  So, "
"\"dh binary\" will run any build, build-arch, build-indep, install, etc "
"targets that exist in the rules file. There's no need to define an explicit "
"binary target with explicit dependencies on the other targets."
msgstr ""

#. type: textblock
#: debhelper.pod:494
msgid ""
"B<dh_strip> compresses debugging symbol files to reduce the installed size "
"of -dbg packages."
msgstr ""

#. type: textblock
#: debhelper.pod:499
msgid ""
"B<dh_auto_configure> does not include the source package name in "
"--libexecdir when using autoconf."
msgstr ""

#. type: textblock
#: debhelper.pod:504
msgid "B<dh> does not default to enabling --with=python-support"
msgstr ""

#. type: textblock
#: debhelper.pod:508
msgid ""
"All of the B<dh_auto_>I<*> debhelper programs and B<dh> set environment "
"variables listed by B<dpkg-buildflags>, unless they are already set."
msgstr ""

#. type: textblock
#: debhelper.pod:514
msgid ""
"B<dh_auto_configure> passes B<dpkg-buildflags> CFLAGS, CPPFLAGS, and LDFLAGS "
"to perl F<Makefile.PL> and F<Build.PL>"
msgstr ""

#. type: textblock
#: debhelper.pod:519
msgid ""
"B<dh_strip> puts separated debug symbols in a location based on their "
"build-id."
msgstr ""

#. type: textblock
#: debhelper.pod:524
msgid ""
"Executable debhelper config files are run and their output used as the "
"configuration."
msgstr ""

#. type: =item
#: debhelper.pod:529
msgid "v10"
msgstr ""

#. type: textblock
#: debhelper.pod:531
msgid "This compatibility level is still open for development; use with caution."
msgstr ""

#. type: textblock
#: debhelper.pod:533
msgid "Changes from v9 are:"
msgstr ""

#. type: textblock
#: debhelper.pod:537
msgid ""
"B<dh_installinit> will no longer install a file named debian/I<package> as "
"an init script."
msgstr ""

#. type: textblock
#: debhelper.pod:544
msgid ""
"B<dh> no longer creates the package build directory when skipping running "
"debhelper commands. This will not affect packages that only build with "
"debhelper commands, but it may expose bugs in commands not included in "
"debhelper."
msgstr ""

#. type: =head1
#: debhelper.pod:553 dh_auto_test:45 dh_installcatalogs:59 dh_installdocs:121 dh_installemacsen:72 dh_installexamples:53 dh_installinit:144 dh_installman:82 dh_installmodules:54 dh_installudev:55 dh_installwm:54 dh_installxfonts:37 dh_movefiles:64 dh_strip:68 dh_usrlocal:49
msgid "NOTES"
msgstr ""

#. type: =head2
#: debhelper.pod:555
msgid "Multiple binary package support"
msgstr ""

#. type: textblock
#: debhelper.pod:557
msgid ""
"If your source package generates more than one binary package, debhelper "
"programs will default to acting on all binary packages when run. If your "
"source package happens to generate one architecture dependent package, and "
"another architecture independent package, this is not the correct behavior, "
"because you need to generate the architecture dependent packages in the "
"binary-arch F<debian/rules> target, and the architecture independent "
"packages in the binary-indep F<debian/rules> target."
msgstr ""

#. type: textblock
#: debhelper.pod:565
msgid ""
"To facilitate this, as well as give you more control over which packages are "
"acted on by debhelper programs, all debhelper programs accept the B<-a>, "
"B<-i>, B<-p>, and B<-s> parameters. These parameters are cumulative.  If "
"none are given, debhelper programs default to acting on all packages listed "
"in the control file."
msgstr ""

#. type: =head2
#: debhelper.pod:571
msgid "Automatic generation of Debian install scripts"
msgstr ""

#. type: textblock
#: debhelper.pod:573
msgid ""
"Some debhelper commands will automatically generate parts of Debian "
"maintainer scripts. If you want these automatically generated things "
"included in your existing Debian maintainer scripts, then you need to add "
"B<#DEBHELPER#> to your scripts, in the place the code should be added.  "
"B<#DEBHELPER#> will be replaced by any auto-generated code when you run "
"B<dh_installdeb>."
msgstr ""

#. type: textblock
#: debhelper.pod:580
msgid ""
"If a script does not exist at all and debhelper needs to add something to "
"it, then debhelper will create the complete script."
msgstr ""

#. type: textblock
#: debhelper.pod:583
msgid ""
"All debhelper commands that automatically generate code in this way let it "
"be disabled by the -n parameter (see above)."
msgstr ""

#. type: textblock
#: debhelper.pod:586
msgid ""
"Note that the inserted code will be shell code, so you cannot directly use "
"it in a Perl script. If you would like to embed it into a Perl script, here "
"is one way to do that (note that I made sure that $1, $2, etc are set with "
"the set command):"
msgstr ""

#. type: verbatim
#: debhelper.pod:591
#, no-wrap
msgid ""
"  my $temp=\"set -e\\nset -- @ARGV\\n\" . << 'EOF';\n"
"  #DEBHELPER#\n"
"  EOF\n"
"  system ($temp) / 256 == 0\n"
"  \tor die \"Problem with debhelper scripts: $!\";\n"
"\n"
msgstr ""

#. type: =head2
#: debhelper.pod:597
msgid "Automatic generation of miscellaneous dependencies."
msgstr ""

#. type: textblock
#: debhelper.pod:599
msgid ""
"Some debhelper commands may make the generated package need to depend on "
"some other packages. For example, if you use L<dh_installdebconf(1)>, your "
"package will generally need to depend on debconf. Or if you use "
"L<dh_installxfonts(1)>, your package will generally need to depend on a "
"particular version of xutils. Keeping track of these miscellaneous "
"dependencies can be annoying since they are dependent on how debhelper does "
"things, so debhelper offers a way to automate it."
msgstr ""

#. type: textblock
#: debhelper.pod:607
msgid ""
"All commands of this type, besides documenting what dependencies may be "
"needed on their man pages, will automatically generate a substvar called "
"B<${misc:Depends}>. If you put that token into your F<debian/control> file, "
"it will be expanded to the dependencies debhelper figures you need."
msgstr ""

#. type: textblock
#: debhelper.pod:612
msgid ""
"This is entirely independent of the standard B<${shlibs:Depends}> generated "
"by L<dh_makeshlibs(1)>, and the B<${perl:Depends}> generated by "
"L<dh_perl(1)>.  You can choose not to use any of these, if debhelper's "
"guesses don't match reality."
msgstr ""

#. type: =head2
#: debhelper.pod:617
msgid "Package build directories"
msgstr ""

#. type: textblock
#: debhelper.pod:619
msgid ""
"By default, all debhelper programs assume that the temporary directory used "
"for assembling the tree of files in a package is debian/I<package>."
msgstr ""

#. type: textblock
#: debhelper.pod:622
msgid ""
"Sometimes, you might want to use some other temporary directory. This is "
"supported by the B<-P> flag. For example, \"B<dh_installdocs "
"-Pdebian/tmp>\", will use B<debian/tmp> as the temporary directory. Note "
"that if you use B<-P>, the debhelper programs can only be acting on a single "
"package at a time. So if you have a package that builds many binary "
"packages, you will need to also use the B<-p> flag to specify which binary "
"package the debhelper program will act on."
msgstr ""

#. type: =head2
#: debhelper.pod:630
msgid "udebs"
msgstr ""

#. type: textblock
#: debhelper.pod:632
msgid ""
"Debhelper includes support for udebs. To create a udeb with debhelper, add "
"\"B<Package-Type: udeb>\" to the package's stanza in F<debian/control>.  "
"Debhelper will try to create udebs that comply with debian-installer policy, "
"by making the generated package files end in F<.udeb>, not installing any "
"documentation into a udeb, skipping over F<preinst>, F<postrm>, F<prerm>, "
"and F<config> scripts, etc."
msgstr ""

#. type: =head1
#: debhelper.pod:639
msgid "ENVIRONMENT"
msgstr ""

#. type: =item
#: debhelper.pod:643
msgid "B<DH_VERBOSE>"
msgstr ""

#. type: textblock
#: debhelper.pod:645
msgid ""
"Set to B<1> to enable verbose mode. Debhelper will output every command it "
"runs that modifies files on the build system."
msgstr ""

#. type: =item
#: debhelper.pod:648
msgid "B<DH_COMPAT>"
msgstr ""

#. type: textblock
#: debhelper.pod:650
msgid ""
"Temporarily specifies what compatibility level debhelper should run at, "
"overriding any value in F<debian/compat>."
msgstr ""

#. type: =item
#: debhelper.pod:653
msgid "B<DH_NO_ACT>"
msgstr ""

#. type: textblock
#: debhelper.pod:655
msgid "Set to B<1> to enable no-act mode."
msgstr ""

#. type: =item
#: debhelper.pod:657
msgid "B<DH_OPTIONS>"
msgstr ""

#. type: textblock
#: debhelper.pod:659
msgid ""
"Anything in this variable will be prepended to the command line arguments of "
"all debhelper commands."
msgstr ""

#. type: textblock
#: debhelper.pod:662
msgid ""
"When using L<dh(1)>, it can be passed options that will be passed on to each "
"debhelper command, which is generally better than using DH_OPTIONS."
msgstr ""

#. type: =item
#: debhelper.pod:665
msgid "B<DH_ALWAYS_EXCLUDE>"
msgstr ""

#. type: textblock
#: debhelper.pod:667
msgid ""
"If set, this adds the value the variable is set to to the B<-X> options of "
"all commands that support the B<-X> option. Moreover, B<dh_builddeb> will "
"B<rm -rf> anything that matches the value in your package build tree."
msgstr ""

#. type: textblock
#: debhelper.pod:671
msgid ""
"This can be useful if you are doing a build from a CVS source tree, in which "
"case setting B<DH_ALWAYS_EXCLUDE=CVS> will prevent any CVS directories from "
"sneaking into the package you build. Or, if a package has a source tarball "
"that (unwisely) includes CVS directories, you might want to export "
"B<DH_ALWAYS_EXCLUDE=CVS> in F<debian/rules>, to make it take effect wherever "
"your package is built."
msgstr ""

#. type: textblock
#: debhelper.pod:678
msgid ""
"Multiple things to exclude can be separated with colons, as in "
"B<DH_ALWAYS_EXCLUDE=CVS:.svn>"
msgstr ""

#. type: =head1
#: debhelper.pod:683 dh:969 dh_auto_build:47 dh_auto_clean:50 dh_auto_configure:52 dh_auto_install:92 dh_auto_test:63 dh_bugfiles:124 dh_builddeb:124 dh_clean:142 dh_compress:210 dh_desktop:31 dh_fixperms:127 dh_gconf:101 dh_gencontrol:82 dh_icons:71 dh_install:260 dh_installcatalogs:122 dh_installchangelogs:224 dh_installcron:79 dh_installdeb:142 dh_installdebconf:128 dh_installdirs:88 dh_installdocs:334 dh_installemacsen:141 dh_installexamples:108 dh_installifupdown:71 dh_installinfo:77 dh_installinit:343 dh_installlogcheck:80 dh_installlogrotate:52 dh_installman:263 dh_installmanpages:197 dh_installmenu:89 dh_installmime:63 dh_installmodules:115 dh_installpam:61 dh_installppp:67 dh_installudev:117 dh_installwm:110 dh_installxfonts:89 dh_link:228 dh_lintian:59 dh_listpackages:30 dh_makeshlibs:258 dh_md5sums:90 dh_movefiles:170 dh_perl:148 dh_prep:60 dh_scrollkeeper:28 dh_shlibdeps:152 dh_strip:242 dh_suidregister:117 dh_testdir:53 dh_testroot:27 dh_undocumented:28 dh_usrlocal:116
msgid "SEE ALSO"
msgstr ""

#. type: =item
#: debhelper.pod:687
msgid "F</usr/share/doc/debhelper/examples/>"
msgstr ""

#. type: textblock
#: debhelper.pod:689
msgid "A set of example F<debian/rules> files that use debhelper."
msgstr ""

#. type: =item
#: debhelper.pod:691
msgid "L<http://kitenet.net/~joey/code/debhelper/>"
msgstr ""

#. type: textblock
#: debhelper.pod:693
msgid "Debhelper web site."
msgstr ""

#. type: =head1
#: debhelper.pod:697 dh:975 dh_auto_build:53 dh_auto_clean:56 dh_auto_configure:58 dh_auto_install:98 dh_auto_test:69 dh_bugfiles:132 dh_builddeb:130 dh_clean:148 dh_compress:216 dh_desktop:37 dh_fixperms:133 dh_gconf:107 dh_gencontrol:88 dh_icons:77 dh_install:266 dh_installcatalogs:128 dh_installchangelogs:230 dh_installcron:85 dh_installdeb:148 dh_installdebconf:134 dh_installdirs:94 dh_installdocs:340 dh_installemacsen:148 dh_installexamples:114 dh_installifupdown:77 dh_installinfo:83 dh_installlogcheck:86 dh_installlogrotate:58 dh_installman:269 dh_installmanpages:203 dh_installmenu:97 dh_installmime:69 dh_installmodules:121 dh_installpam:67 dh_installppp:73 dh_installudev:123 dh_installwm:116 dh_installxfonts:95 dh_link:234 dh_lintian:67 dh_listpackages:36 dh_makeshlibs:264 dh_md5sums:96 dh_movefiles:176 dh_perl:154 dh_prep:66 dh_scrollkeeper:34 dh_shlibdeps:158 dh_strip:248 dh_suidregister:123 dh_testdir:59 dh_testroot:33 dh_undocumented:34 dh_usrlocal:122
msgid "AUTHOR"
msgstr ""

#. type: textblock
#: debhelper.pod:699 dh:977 dh_auto_build:55 dh_auto_clean:58 dh_auto_configure:60 dh_auto_install:100 dh_auto_test:71 dh_builddeb:132 dh_clean:150 dh_compress:218 dh_fixperms:135 dh_gencontrol:90 dh_install:268 dh_installchangelogs:232 dh_installcron:87 dh_installdeb:150 dh_installdebconf:136 dh_installdirs:96 dh_installdocs:342 dh_installemacsen:150 dh_installexamples:116 dh_installifupdown:79 dh_installinfo:85 dh_installinit:351 dh_installlogrotate:60 dh_installman:271 dh_installmanpages:205 dh_installmenu:99 dh_installmime:71 dh_installmodules:123 dh_installpam:69 dh_installppp:75 dh_installudev:125 dh_installwm:118 dh_installxfonts:97 dh_link:236 dh_listpackages:38 dh_makeshlibs:266 dh_md5sums:98 dh_movefiles:178 dh_prep:68 dh_shlibdeps:160 dh_strip:250 dh_suidregister:125 dh_testdir:61 dh_testroot:35 dh_undocumented:36
msgid "Joey Hess <joeyh@debian.org>"
msgstr ""

#. type: textblock
#: dh:5
msgid "dh - debhelper command sequencer"
msgstr ""

#. type: textblock
#: dh:14
msgid ""
"B<dh> I<sequence> [B<--with> I<addon>[B<,>I<addon> ...]] [B<--list>] "
"[S<I<debhelper options>>]"
msgstr ""

#. type: textblock
#: dh:18
msgid ""
"B<dh> runs a sequence of debhelper commands. The supported I<sequence>s "
"correspond to the targets of a F<debian/rules> file: B<build-arch>, "
"B<build-indep>, B<build>, B<clean>, B<install-indep>, B<install-arch>, "
"B<install>, B<binary-arch>, B<binary-indep>, and B<binary>."
msgstr ""

#. type: =head1
#: dh:23
msgid "OVERRIDE TARGETS"
msgstr ""

#. type: textblock
#: dh:25
msgid ""
"A F<debian/rules> file using B<dh> can override the command that is run at "
"any step in a sequence, by defining an override target."
msgstr ""

#. type: textblock
#: dh:28
msgid ""
"To override I<dh_command>, add a target named B<override_>I<dh_command> to "
"the rules file. When it would normally run I<dh_command>, B<dh> will instead "
"call that target. The override target can then run the command with "
"additional options, or run entirely different commands instead. See examples "
"below."
msgstr ""

#. type: textblock
#: dh:34
msgid ""
"Override targets can also be defined to run only when building architecture "
"dependent or architecture independent packages.  Use targets with names like "
"B<override_>I<dh_command>B<-arch> and B<override_>I<dh_command>B<-indep>.  "
"(Note that to use this feature, you should Build-Depend on debhelper 8.9.7 "
"or above.)"
msgstr ""

#. type: =head1
#: dh:41 dh_auto_build:28 dh_auto_clean:30 dh_auto_configure:31 dh_auto_install:43 dh_auto_test:31 dh_bugfiles:50 dh_builddeb:24 dh_clean:41 dh_compress:48 dh_fixperms:31 dh_gconf:39 dh_gencontrol:26 dh_icons:30 dh_install:59 dh_installcatalogs:49 dh_installchangelogs:57 dh_installcron:40 dh_installdebconf:61 dh_installdirs:31 dh_installdocs:71 dh_installemacsen:53 dh_installexamples:32 dh_installifupdown:39 dh_installinfo:31 dh_installinit:59 dh_installlogcheck:42 dh_installlogrotate:22 dh_installman:61 dh_installmanpages:40 dh_installmenu:41 dh_installmodules:38 dh_installpam:31 dh_installppp:35 dh_installudev:35 dh_installwm:34 dh_link:53 dh_makeshlibs:43 dh_md5sums:28 dh_movefiles:38 dh_perl:31 dh_prep:26 dh_shlibdeps:26 dh_strip:35 dh_testdir:23 dh_usrlocal:39
msgid "OPTIONS"
msgstr ""

#. type: =item
#: dh:45
msgid "B<--with> I<addon>[B<,>I<addon> ...]"
msgstr ""

#. type: textblock
#: dh:47
msgid ""
"Add the debhelper commands specified by the given addon to appropriate "
"places in the sequence of commands that is run. This option can be repeated "
"more than once, or multiple addons can be listed, separated by commas.  This "
"is used when there is a third-party package that provides debhelper "
"commands. See the F<PROGRAMMING> file for documentation about the sequence "
"addon interface."
msgstr ""

#. type: =item
#: dh:54
msgid "B<--without> I<addon>"
msgstr ""

#. type: textblock
#: dh:56
msgid ""
"The inverse of B<--with>, disables using the given addon. This option can be "
"repeated more than once, or multiple addons to disable can be listed, "
"separated by commas."
msgstr ""

#. type: textblock
#: dh:62
msgid "List all available addons."
msgstr ""

#. type: textblock
#: dh:66
msgid "Prints commands that would run for a given sequence, but does not run them."
msgstr ""

#. type: textblock
#: dh:68
msgid ""
"Note that dh normally skips running commands that it knows will do nothing.  "
"With --no-act, the full list of commands in a sequence is printed."
msgstr ""

#. type: textblock
#: dh:73
msgid ""
"Other options passed to B<dh> are passed on to each command it runs. This "
"can be used to set an option like B<-v> or B<-X> or B<-N>, as well as for "
"more specialised options."
msgstr ""

#. type: =head1
#: dh:77 dh_installdocs:110 dh_link:75 dh_makeshlibs:97 dh_shlibdeps:70
msgid "EXAMPLES"
msgstr ""

#. type: textblock
#: dh:79
msgid ""
"To see what commands are included in a sequence, without actually doing "
"anything:"
msgstr ""

#. type: verbatim
#: dh:82
#, no-wrap
msgid ""
"\tdh binary-arch --no-act\n"
"\n"
msgstr ""

#. type: textblock
#: dh:84
msgid ""
"This is a very simple rules file, for packages where the default sequences "
"of commands work with no additional options."
msgstr ""

#. type: verbatim
#: dh:87 dh:108 dh:121
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@\n"
"\n"
msgstr ""

#. type: textblock
#: dh:91
msgid ""
"Often you'll want to pass an option to a specific debhelper command. The "
"easy way to do with is by adding an override target for that command."
msgstr ""

#. type: verbatim
#: dh:94 dh:179 dh:190
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@\n"
"\t\n"
msgstr ""

#. type: verbatim
#: dh:98
#, no-wrap
msgid ""
"\toverride_dh_strip:\n"
"\t\tdh_strip -Xfoo\n"
"\t\n"
msgstr ""

#. type: verbatim
#: dh:101
#, no-wrap
msgid ""
"\toverride_dh_auto_configure:\n"
"\t\tdh_auto_configure -- --with-foo --disable-bar\n"
"\n"
msgstr ""

#. type: textblock
#: dh:104
msgid ""
"Sometimes the automated L<dh_auto_configure(1)> and L<dh_auto_build(1)> "
"can't guess what to do for a strange package. Here's how to avoid running "
"either and instead run your own commands."
msgstr ""

#. type: verbatim
#: dh:112
#, no-wrap
msgid ""
"\toverride_dh_auto_configure:\n"
"\t\t./mondoconfig\n"
"\n"
msgstr ""

#. type: verbatim
#: dh:115
#, no-wrap
msgid ""
"\toverride_dh_auto_build:\n"
"\t\tmake universe-explode-in-delight\n"
"\n"
msgstr ""

#. type: textblock
#: dh:118
msgid ""
"Another common case is wanting to do something manually before or after a "
"particular debhelper command is run."
msgstr ""

#. type: verbatim
#: dh:125
#, no-wrap
msgid ""
"\toverride_dh_fixperms:\n"
"\t\tdh_fixperms\n"
"\t\tchmod 4755 debian/foo/usr/bin/foo\n"
"\n"
msgstr ""

#. type: textblock
#: dh:129
msgid ""
"If your package uses autotools and you want to freshen F<config.sub> and "
"F<config.guess> with newer versions from the B<autotools-dev> package at "
"build time, you can use some commands provided in B<autotools-dev> that "
"automate it, like this."
msgstr ""

#. type: verbatim
#: dh:134
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --with autotools_dev\n"
"\n"
msgstr ""

#. type: textblock
#: dh:138
msgid ""
"Python tools are not run by dh by default, due to the continual change in "
"that area. (Before compatibility level v9, dh does run B<dh_pysupport>.)  "
"Here is how to use B<dh_python2>."
msgstr ""

#. type: verbatim
#: dh:142
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --with python2\n"
"\n"
msgstr ""

#. type: textblock
#: dh:146
msgid ""
"Here is how to force use of Perl's B<Module::Build> build system, which can "
"be necessary if debhelper wrongly detects that the package uses MakeMaker."
msgstr ""

#. type: verbatim
#: dh:150
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --buildsystem=perl_build\n"
"\n"
msgstr ""

#. type: textblock
#: dh:154
msgid ""
"Here is an example of overriding where the B<dh_auto_>I<*> commands find the "
"package's source, for a package where the source is located in a "
"subdirectory."
msgstr ""

#. type: verbatim
#: dh:158
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --sourcedirectory=src\n"
"\n"
msgstr ""

#. type: textblock
#: dh:162
msgid ""
"And here is an example of how to tell the B<dh_auto_>I<*> commands to build "
"in a subdirectory, which will be removed on B<clean>."
msgstr ""

#. type: verbatim
#: dh:165
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --builddirectory=build\n"
"\n"
msgstr ""

#. type: textblock
#: dh:169
msgid ""
"If your package can be built in parallel, you can support parallel building "
"as follows. Then B<dpkg-buildpackage -j> will work."
msgstr ""

#. type: verbatim
#: dh:172
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --parallel\n"
"\n"
msgstr ""

#. type: textblock
#: dh:176
msgid ""
"Here is a way to prevent B<dh> from running several commands that you don't "
"want it to run, by defining empty override targets for each command."
msgstr ""

#. type: verbatim
#: dh:183
#, no-wrap
msgid ""
"\t# Commands not to run:\n"
"\toverride_dh_auto_test override_dh_compress override_dh_fixperms:\n"
"\n"
msgstr ""

#. type: textblock
#: dh:186
msgid ""
"A long build process for a separate documentation package can be separated "
"out using architecture independent overrides.  These will be skipped when "
"running build-arch and binary-arch sequences."
msgstr ""

#. type: verbatim
#: dh:194
#, no-wrap
msgid ""
"\toverride_dh_auto_build-indep:\n"
"\t\t$(MAKE) -C docs\n"
"\n"
msgstr ""

#. type: verbatim
#: dh:197
#, no-wrap
msgid ""
"\t# No tests needed for docs\n"
"\toverride_dh_auto_test-indep:\n"
"\n"
msgstr ""

#. type: verbatim
#: dh:200
#, no-wrap
msgid ""
"\toverride_dh_auto_install-indep:\n"
"\t\t$(MAKE) -C docs install\n"
"\n"
msgstr ""

#. type: textblock
#: dh:203
msgid ""
"Adding to the example above, suppose you need to chmod a file, but only when "
"building the architecture dependent package, as it's not present when "
"building only documentation."
msgstr ""

#. type: verbatim
#: dh:207
#, no-wrap
msgid ""
"\toverride_dh_fixperms-arch:\n"
"\t\tdh_fixperms\n"
"\t\tchmod 4755 debian/foo/usr/bin/foo\n"
"\n"
msgstr ""

#. type: =head1
#: dh:211
msgid "INTERNALS"
msgstr ""

#. type: textblock
#: dh:213
msgid ""
"If you're curious about B<dh>'s internals, here's how it works under the "
"hood."
msgstr ""

#. type: textblock
#: dh:215
msgid ""
"Each debhelper command will record when it's successfully run in "
"F<debian/package.debhelper.log>. (Which B<dh_clean> deletes.) So B<dh> can "
"tell which commands have already been run, for which packages, and skip "
"running those commands again."
msgstr ""

#. type: textblock
#: dh:220
msgid ""
"Each time B<dh> is run, it examines the log, and finds the last logged "
"command that is in the specified sequence. It then continues with the next "
"command in the sequence. The B<--until>, B<--before>, B<--after>, and "
"B<--remaining> options can override this behavior."
msgstr ""

#. type: textblock
#: dh:225
msgid ""
"A sequence can also run dependent targets in debian/rules.  For example, the "
"\"binary\" sequence runs the \"install\" target."
msgstr ""

#. type: textblock
#: dh:228
msgid ""
"B<dh> uses the B<DH_INTERNAL_OPTIONS> environment variable to pass "
"information through to debhelper commands that are run inside override "
"targets. The contents (and indeed, existence) of this environment variable, "
"as the name might suggest, is subject to change at any time."
msgstr ""

#. type: textblock
#: dh:233
msgid ""
"Commands in the B<build-indep>, B<install-indep> and B<binary-indep> "
"sequences are passed the B<-i> option to ensure they only work on "
"architecture independent packages, and commands in the B<build-arch>, "
"B<install-arch> and B<binary-arch> sequences are passed the B<-a> option to "
"ensure they only work on architecture dependent packages."
msgstr ""

#. type: =head1
#: dh:239
msgid "DEPRECATED OPTIONS"
msgstr ""

#. type: textblock
#: dh:241
msgid ""
"The following options are deprecated. It's much better to use override "
"targets instead."
msgstr ""

#. type: =item
#: dh:246
msgid "B<--until> I<cmd>"
msgstr ""

#. type: textblock
#: dh:248
msgid "Run commands in the sequence until and including I<cmd>, then stop."
msgstr ""

#. type: =item
#: dh:250
msgid "B<--before> I<cmd>"
msgstr ""

#. type: textblock
#: dh:252
msgid "Run commands in the sequence before I<cmd>, then stop."
msgstr ""

#. type: =item
#: dh:254
msgid "B<--after> I<cmd>"
msgstr ""

#. type: textblock
#: dh:256
msgid "Run commands in the sequence that come after I<cmd>."
msgstr ""

#. type: =item
#: dh:258
msgid "B<--remaining>"
msgstr ""

#. type: textblock
#: dh:260
msgid "Run all commands in the sequence that have yet to be run."
msgstr ""

#. type: textblock
#: dh:264
msgid ""
"In the above options, I<cmd> can be a full name of a debhelper command, or a "
"substring. It'll first search for a command in the sequence exactly matching "
"the name, to avoid any ambiguity. If there are multiple substring matches, "
"the last one in the sequence will be used."
msgstr ""

#. type: textblock
#: dh:971 dh_auto_build:49 dh_auto_clean:52 dh_auto_configure:54 dh_auto_install:94 dh_auto_test:65 dh_builddeb:126 dh_clean:144 dh_compress:212 dh_fixperms:129 dh_gconf:103 dh_gencontrol:84 dh_install:262 dh_installcatalogs:124 dh_installchangelogs:226 dh_installcron:81 dh_installdeb:144 dh_installdebconf:130 dh_installdirs:90 dh_installdocs:336 dh_installexamples:110 dh_installifupdown:73 dh_installinfo:79 dh_installinit:345 dh_installlogcheck:82 dh_installlogrotate:54 dh_installman:265 dh_installmanpages:199 dh_installmime:65 dh_installmodules:117 dh_installpam:63 dh_installppp:69 dh_installudev:119 dh_installwm:112 dh_installxfonts:91 dh_link:230 dh_listpackages:32 dh_makeshlibs:260 dh_md5sums:92 dh_movefiles:172 dh_perl:150 dh_prep:62 dh_strip:244 dh_suidregister:119 dh_testdir:55 dh_testroot:29 dh_undocumented:30 dh_usrlocal:118
msgid "L<debhelper(7)>"
msgstr ""

#. type: textblock
#: dh:973 dh_auto_build:51 dh_auto_clean:54 dh_auto_configure:56 dh_auto_install:96 dh_auto_test:67 dh_bugfiles:130 dh_builddeb:128 dh_clean:146 dh_compress:214 dh_desktop:35 dh_fixperms:131 dh_gconf:105 dh_gencontrol:86 dh_icons:75 dh_install:264 dh_installchangelogs:228 dh_installcron:83 dh_installdeb:146 dh_installdebconf:132 dh_installdirs:92 dh_installdocs:338 dh_installemacsen:146 dh_installexamples:112 dh_installifupdown:75 dh_installinfo:81 dh_installinit:347 dh_installlogrotate:56 dh_installman:267 dh_installmanpages:201 dh_installmenu:95 dh_installmime:67 dh_installmodules:119 dh_installpam:65 dh_installppp:71 dh_installudev:121 dh_installwm:114 dh_installxfonts:93 dh_link:232 dh_lintian:63 dh_listpackages:34 dh_makeshlibs:262 dh_md5sums:94 dh_movefiles:174 dh_perl:152 dh_prep:64 dh_scrollkeeper:32 dh_shlibdeps:156 dh_strip:246 dh_suidregister:121 dh_testdir:57 dh_testroot:31 dh_undocumented:32 dh_usrlocal:120
msgid "This program is a part of debhelper."
msgstr ""

#. type: textblock
#: dh_auto_build:5
msgid "dh_auto_build - automatically builds a package"
msgstr ""

#. type: textblock
#: dh_auto_build:14
msgid ""
"B<dh_auto_build> [S<I<build system options>>] [S<I<debhelper options>>] "
"[S<B<--> I<params>>]"
msgstr ""

#. type: textblock
#: dh_auto_build:18
msgid ""
"B<dh_auto_build> is a debhelper program that tries to automatically build a "
"package. It does so by running the appropriate command for the build system "
"it detects the package uses. For example, if a F<Makefile> is found, this is "
"done by running B<make> (or B<MAKE>, if the environment variable is set). If "
"there's a F<setup.py>, or F<Build.PL>, it is run to build the package."
msgstr ""

#. type: textblock
#: dh_auto_build:24
msgid ""
"This is intended to work for about 90% of packages. If it doesn't work, "
"you're encouraged to skip using B<dh_auto_build> at all, and just run the "
"build process manually."
msgstr ""

#. type: textblock
#: dh_auto_build:30 dh_auto_clean:32 dh_auto_configure:33 dh_auto_install:45 dh_auto_test:33
msgid ""
"See L<debhelper(7)/B<BUILD SYSTEM OPTIONS>> for a list of common build "
"system selection and control options."
msgstr ""

#. type: =item
#: dh_auto_build:35 dh_auto_clean:37 dh_auto_configure:38 dh_auto_install:56 dh_auto_test:38 dh_builddeb:38 dh_gencontrol:30 dh_installdebconf:69 dh_installinit:105 dh_makeshlibs:91 dh_shlibdeps:37
msgid "B<--> I<params>"
msgstr ""

#. type: textblock
#: dh_auto_build:37
msgid ""
"Pass I<params> to the program that is run, after the parameters that "
"B<dh_auto_build> usually passes."
msgstr ""

#. type: textblock
#: dh_auto_clean:5
msgid "dh_auto_clean - automatically cleans up after a build"
msgstr ""

#. type: textblock
#: dh_auto_clean:15
msgid ""
"B<dh_auto_clean> [S<I<build system options>>] [S<I<debhelper options>>] "
"[S<B<--> I<params>>]"
msgstr ""

#. type: textblock
#: dh_auto_clean:19
msgid ""
"B<dh_auto_clean> is a debhelper program that tries to automatically clean up "
"after a package build. It does so by running the appropriate command for the "
"build system it detects the package uses. For example, if there's a "
"F<Makefile> and it contains a B<distclean>, B<realclean>, or B<clean> "
"target, then this is done by running B<make> (or B<MAKE>, if the environment "
"variable is set). If there is a F<setup.py> or F<Build.PL>, it is run to "
"clean the package."
msgstr ""

#. type: textblock
#: dh_auto_clean:26
msgid ""
"This is intended to work for about 90% of packages. If it doesn't work, or "
"tries to use the wrong clean target, you're encouraged to skip using "
"B<dh_auto_clean> at all, and just run B<make clean> manually."
msgstr ""

#. type: textblock
#: dh_auto_clean:39
msgid ""
"Pass I<params> to the program that is run, after the parameters that "
"B<dh_auto_clean> usually passes."
msgstr ""

#. type: textblock
#: dh_auto_configure:5
msgid "dh_auto_configure - automatically configure a package prior to building"
msgstr ""

#. type: textblock
#: dh_auto_configure:14
msgid ""
"B<dh_auto_configure> [S<I<build system options>>] [S<I<debhelper options>>] "
"[S<B<--> I<params>>]"
msgstr ""

#. type: textblock
#: dh_auto_configure:18
msgid ""
"B<dh_auto_configure> is a debhelper program that tries to automatically "
"configure a package prior to building. It does so by running the appropriate "
"command for the build system it detects the package uses.  For example, it "
"looks for and runs a F<./configure> script, F<Makefile.PL>, F<Build.PL>, or "
"F<cmake>. A standard set of parameters is determined and passed to the "
"program that is run. Some build systems, such as make, do not need a "
"configure step; for these B<dh_auto_configure> will exit without doing "
"anything."
msgstr ""

#. type: textblock
#: dh_auto_configure:27
msgid ""
"This is intended to work for about 90% of packages. If it doesn't work, "
"you're encouraged to skip using B<dh_auto_configure> at all, and just run "
"F<./configure> or its equivalent manually."
msgstr ""

#. type: textblock
#: dh_auto_configure:40
msgid ""
"Pass I<params> to the program that is run, after the parameters that "
"B<dh_auto_configure> usually passes. For example:"
msgstr ""

#. type: verbatim
#: dh_auto_configure:43
#, no-wrap
msgid ""
"  dh_auto_configure -- --with-foo --enable-bar\n"
"\n"
msgstr ""

#. type: textblock
#: dh_auto_install:5
msgid "dh_auto_install - automatically runs make install or similar"
msgstr ""

#. type: textblock
#: dh_auto_install:17
msgid ""
"B<dh_auto_install> [S<I<build system options>>] [S<I<debhelper options>>] "
"[S<B<--> I<params>>]"
msgstr ""

#. type: textblock
#: dh_auto_install:21
msgid ""
"B<dh_auto_install> is a debhelper program that tries to automatically "
"install built files. It does so by running the appropriate command for the "
"build system it detects the package uses. For example, if there's a "
"F<Makefile> and it contains a B<install> target, then this is done by "
"running B<make> (or B<MAKE>, if the environment variable is set). If there "
"is a F<setup.py> or F<Build.PL>, it is used. Note that the Ant build system "
"does not support installation, so B<dh_auto_install> will not install files "
"built using Ant."
msgstr ""

#. type: textblock
#: dh_auto_install:29
msgid ""
"Unless B<--destdir> option is specified, the files are installed into "
"debian/I<package>/ if there is only one binary package. In the multiple "
"binary package case, the files are instead installed into F<debian/tmp/>, "
"and should be moved from there to the appropriate package build directory "
"using L<dh_install(1)>."
msgstr ""

#. type: textblock
#: dh_auto_install:35
msgid ""
"B<DESTDIR> is used to tell make where to install the files.  If the Makefile "
"was generated by MakeMaker from a F<Makefile.PL>, it will automatically set "
"B<PREFIX=/usr> too, since such Makefiles need that."
msgstr ""

#. type: textblock
#: dh_auto_install:39
msgid ""
"This is intended to work for about 90% of packages. If it doesn't work, or "
"tries to use the wrong install target, you're encouraged to skip using "
"B<dh_auto_install> at all, and just run make install manually."
msgstr ""

#. type: =item
#: dh_auto_install:50 dh_builddeb:28
msgid "B<--destdir=>I<directory>"
msgstr ""

#. type: textblock
#: dh_auto_install:52
msgid ""
"Install files into the specified I<directory>. If this option is not "
"specified, destination directory is determined automatically as described in "
"the L</B<DESCRIPTION>> section."
msgstr ""

#. type: textblock
#: dh_auto_install:58
msgid ""
"Pass I<params> to the program that is run, after the parameters that "
"B<dh_auto_install> usually passes."
msgstr ""

#. type: textblock
#: dh_auto_test:5
msgid "dh_auto_test - automatically runs a package's test suites"
msgstr ""

#. type: textblock
#: dh_auto_test:15
msgid ""
"B<dh_auto_test> [S<I<build system options>>] [S<I<debhelper options>>] "
"[S<B<--> I<params>>]"
msgstr ""

#. type: textblock
#: dh_auto_test:19
msgid ""
"B<dh_auto_test> is a debhelper program that tries to automatically run a "
"package's test suite. It does so by running the appropriate command for the "
"build system it detects the package uses. For example, if there's a Makefile "
"and it contains a B<test> or B<check> target, then this is done by running "
"B<make> (or B<MAKE>, if the environment variable is set). If the test suite "
"fails, the command will exit nonzero. If there's no test suite, it will exit "
"zero without doing anything."
msgstr ""

#. type: textblock
#: dh_auto_test:27
msgid ""
"This is intended to work for about 90% of packages with a test suite. If it "
"doesn't work, you're encouraged to skip using B<dh_auto_test> at all, and "
"just run the test suite manually."
msgstr ""

#. type: textblock
#: dh_auto_test:40
msgid ""
"Pass I<params> to the program that is run, after the parameters that "
"B<dh_auto_test> usually passes."
msgstr ""

#. type: textblock
#: dh_auto_test:47
msgid ""
"If the B<DEB_BUILD_OPTIONS> environment variable contains B<nocheck>, no "
"tests will be performed."
msgstr ""

#. type: textblock
#: dh_auto_test:50
msgid ""
"dh_auto_test does not run the test suite when a package is being cross "
"compiled."
msgstr ""

#. type: textblock
#: dh_bugfiles:5
msgid ""
"dh_bugfiles - install bug reporting customization files into package build "
"directories"
msgstr ""

#. type: textblock
#: dh_bugfiles:14
msgid "B<dh_bugfiles> [B<-A>] [S<I<debhelper options>>]"
msgstr ""

#. type: textblock
#: dh_bugfiles:18
msgid ""
"B<dh_bugfiles> is a debhelper program that is responsible for installing bug "
"reporting customization files (bug scripts and/or bug control files and/or "
"presubj files) into package build directories."
msgstr ""

#. type: =head1
#: dh_bugfiles:22 dh_clean:31 dh_compress:31 dh_gconf:23 dh_install:38 dh_installcatalogs:35 dh_installchangelogs:33 dh_installcron:21 dh_installdeb:22 dh_installdebconf:34 dh_installdirs:21 dh_installdocs:21 dh_installemacsen:27 dh_installexamples:22 dh_installifupdown:22 dh_installinfo:21 dh_installinit:27 dh_installlogcheck:21 dh_installman:51 dh_installmenu:25 dh_installmime:21 dh_installmodules:28 dh_installpam:21 dh_installppp:21 dh_installudev:25 dh_installwm:24 dh_link:41 dh_lintian:21 dh_makeshlibs:29 dh_movefiles:26
msgid "FILES"
msgstr ""

#. type: =item
#: dh_bugfiles:26
msgid "debian/I<package>.bug-script"
msgstr ""

#. type: textblock
#: dh_bugfiles:28
msgid ""
"This is the script to be run by the bug reporting program for generating a "
"bug report template. This file is installed as F<usr/share/bug/package> in "
"the package build directory if no other types of bug reporting customization "
"files are going to be installed for the package in question. Otherwise, this "
"file is installed as F<usr/share/bug/package/script>. Finally, the installed "
"script is given execute permissions."
msgstr ""

#. type: =item
#: dh_bugfiles:35
msgid "debian/I<package>.bug-control"
msgstr ""

#. type: textblock
#: dh_bugfiles:37
msgid ""
"It is the bug control file containing some directions for the bug reporting "
"tool. This file is installed as F<usr/share/bug/package/control> in the "
"package build directory."
msgstr ""

#. type: =item
#: dh_bugfiles:41
msgid "debian/I<package>.bug-presubj"
msgstr ""

#. type: textblock
#: dh_bugfiles:43
msgid ""
"The contents of this file are displayed to the user by the bug reporting "
"tool before allowing the user to write a bug report on the package to the "
"Debian Bug Tracking System. This file is installed as "
"F<usr/share/bug/package/presubj> in the package build directory."
msgstr ""

#. type: textblock
#: dh_bugfiles:56
msgid ""
"Install F<debian/bug-*> files to ALL packages acted on when respective "
"F<debian/package.bug-*> files do not exist. Normally, F<debian/bug-*> will "
"be installed to the first package only."
msgstr ""

#. type: textblock
#: dh_bugfiles:126
msgid "F</usr/share/doc/reportbug/README.developers.gz>"
msgstr ""

#. type: textblock
#: dh_bugfiles:128 dh_lintian:61
msgid "L<debhelper(1)>"
msgstr ""

#. type: textblock
#: dh_bugfiles:134
msgid "Modestas Vainius <modestas@vainius.eu>"
msgstr ""

#. type: textblock
#: dh_builddeb:5
msgid "dh_builddeb - build Debian binary packages"
msgstr ""

#. type: textblock
#: dh_builddeb:14
msgid ""
"B<dh_builddeb> [S<I<debhelper options>>] [B<--destdir=>I<directory>] "
"[B<--filename=>I<name>] [S<B<--> I<params>>]"
msgstr ""

#. type: textblock
#: dh_builddeb:18
msgid ""
"B<dh_builddeb> simply calls L<dpkg-deb(1)> to build a Debian package or "
"packages."
msgstr ""

#. type: textblock
#: dh_builddeb:21
msgid ""
"It supports building multiple binary packages in parallel, when enabled by "
"DEB_BUILD_OPTIONS."
msgstr ""

#. type: textblock
#: dh_builddeb:30
msgid ""
"Use this if you want the generated F<.deb> files to be put in a directory "
"other than the default of \"F<..>\"."
msgstr ""

#. type: =item
#: dh_builddeb:33
msgid "B<--filename=>I<name>"
msgstr ""

#. type: textblock
#: dh_builddeb:35
msgid ""
"Use this if you want to force the generated .deb file to have a particular "
"file name. Does not work well if more than one .deb is generated!"
msgstr ""

#. type: textblock
#: dh_builddeb:40
msgid "Pass I<params> to L<dpkg-deb(1)> when it is used to build the package."
msgstr ""

#. type: =item
#: dh_builddeb:43
msgid "B<-u>I<params>"
msgstr ""

#. type: textblock
#: dh_builddeb:45
msgid ""
"This is another way to pass I<params> to L<dpkg-deb(1)>.  It is deprecated; "
"use B<--> instead."
msgstr ""

#. type: textblock
#: dh_clean:5
msgid "dh_clean - clean up package build directories"
msgstr ""

#. type: textblock
#: dh_clean:14
msgid ""
"B<dh_clean> [S<I<debhelper options>>] [B<-k>] [B<-d>] [B<-X>I<item>] "
"[S<I<file> ...>]"
msgstr ""

#. type: verbatim
#: dh_clean:18
#, no-wrap
msgid ""
"B<dh_clean> is a debhelper program that is responsible for cleaning up after "
"a\n"
"package is built. It removes the package build directories, and removes "
"some\n"
"other files including F<debian/files>, and any detritus left behind by "
"other\n"
"debhelper commands. It also removes common files that should not appear in "
"a\n"
"Debian diff:\n"
"  #*# *~ DEADJOE *.orig *.rej *.SUMS TAGS .deps/* *.P *-stamp\n"
"\n"
msgstr ""

#. type: textblock
#: dh_clean:25
msgid ""
"It does not run \"make clean\" to clean up after the build process. Use "
"L<dh_auto_clean(1)> to do things like that."
msgstr ""

#. type: textblock
#: dh_clean:28
msgid ""
"B<dh_clean> should be the last debhelper command run in the B<clean> target "
"in F<debian/rules>."
msgstr ""

#. type: =item
#: dh_clean:35
msgid "F<debian/clean>"
msgstr ""

#. type: textblock
#: dh_clean:37
msgid "Can list other files to be removed."
msgstr ""

#. type: =item
#: dh_clean:45 dh_installchangelogs:61
msgid "B<-k>, B<--keep>"
msgstr ""

#. type: textblock
#: dh_clean:47
msgid "This is deprecated, use L<dh_prep(1)> instead."
msgstr ""

#. type: =item
#: dh_clean:49
msgid "B<-d>, B<--dirs-only>"
msgstr ""

#. type: textblock
#: dh_clean:51
msgid ""
"Only clean the package build directories, do not clean up any other files at "
"all."
msgstr ""

#. type: =item
#: dh_clean:54 dh_prep:30
msgid "B<-X>I<item> B<--exclude=>I<item>"
msgstr ""

#. type: textblock
#: dh_clean:56
msgid ""
"Exclude files that contain I<item> anywhere in their filename from being "
"deleted, even if they would normally be deleted. You may use this option "
"multiple times to build up a list of things to exclude."
msgstr ""

#. type: =item
#: dh_clean:60 dh_compress:64 dh_installdocs:103 dh_installexamples:46 dh_installinfo:40 dh_installmanpages:44 dh_movefiles:55 dh_testdir:27
msgid "I<file> ..."
msgstr ""

#. type: textblock
#: dh_clean:62
msgid "Delete these I<file>s too."
msgstr ""

#. type: textblock
#: dh_compress:5
msgid "dh_compress - compress files and fix symlinks in package build directories"
msgstr ""

#. type: textblock
#: dh_compress:15
msgid ""
"B<dh_compress> [S<I<debhelper options>>] [B<-X>I<item>] [B<-A>] [S<I<file> "
"...>]"
msgstr ""

#. type: textblock
#: dh_compress:19
msgid ""
"B<dh_compress> is a debhelper program that is responsible for compressing "
"the files in package build directories, and makes sure that any symlinks "
"that pointed to the files before they were compressed are updated to point "
"to the new files."
msgstr ""

#. type: textblock
#: dh_compress:24
msgid ""
"By default, B<dh_compress> compresses files that Debian policy mandates "
"should be compressed, namely all files in F<usr/share/info>, "
"F<usr/share/man>, files in F<usr/share/doc> that are larger than 4k in size, "
"(except the F<copyright> file, F<.html> and other web files, image files, "
"and files that appear to be already compressed based on their extensions), "
"and all F<changelog> files. Plus PCF fonts underneath "
"F<usr/share/fonts/X11/>"
msgstr ""

#. type: =item
#: dh_compress:35
msgid "debian/I<package>.compress"
msgstr ""

#. type: textblock
#: dh_compress:37
msgid "These files are deprecated."
msgstr ""

#. type: textblock
#: dh_compress:39
msgid ""
"If this file exists, the default files are not compressed. Instead, the file "
"is ran as a shell script, and all filenames that the shell script outputs "
"will be compressed. The shell script will be run from inside the package "
"build directory. Note though that using B<-X> is a much better idea in "
"general; you should only use a F<debian/package.compress> file if you really "
"need to."
msgstr ""

#. type: textblock
#: dh_compress:54
msgid ""
"Exclude files that contain F<item> anywhere in their filename from being "
"compressed. For example, B<-X.tiff> will exclude TIFF files from "
"compression.  You may use this option multiple times to build up a list of "
"things to exclude."
msgstr ""

#. type: textblock
#: dh_compress:61
msgid ""
"Compress all files specified by command line parameters in ALL packages "
"acted on."
msgstr ""

#. type: textblock
#: dh_compress:66
msgid "Add these files to the list of files to compress."
msgstr ""

#. type: =head1
#: dh_compress:70 dh_perl:61 dh_strip:74 dh_usrlocal:55
msgid "CONFORMS TO"
msgstr ""

#. type: textblock
#: dh_compress:72
msgid "Debian policy, version 3.0"
msgstr ""

#. type: textblock
#: dh_desktop:5
msgid "dh_desktop - deprecated no-op"
msgstr ""

#. type: textblock
#: dh_desktop:14
msgid "B<dh_desktop> [S<I<debhelper options>>]"
msgstr ""

#. type: textblock
#: dh_desktop:18
msgid ""
"B<dh_desktop> was a debhelper program that registers F<.desktop> files.  "
"However, it no longer does anything, and is now deprecated."
msgstr ""

#. type: textblock
#: dh_desktop:21
msgid ""
"If a package ships F<desktop> files, they just need to be installed in the "
"correct location (F</usr/share/applications>) and they will be registered by "
"the appropriate tools for the corresponding desktop environments."
msgstr ""

#. type: textblock
#: dh_desktop:33 dh_icons:73 dh_scrollkeeper:30
msgid "L<debhelper>"
msgstr ""

#. type: textblock
#: dh_desktop:39 dh_scrollkeeper:36
msgid "Ross Burton <ross@burtonini.com>"
msgstr ""

#. type: textblock
#: dh_fixperms:5
msgid "dh_fixperms - fix permissions of files in package build directories"
msgstr ""

#. type: textblock
#: dh_fixperms:14
msgid "B<dh_fixperms> [S<I<debhelper options>>] [B<-X>I<item>]"
msgstr ""

#. type: textblock
#: dh_fixperms:18
msgid ""
"B<dh_fixperms> is a debhelper program that is responsible for setting the "
"permissions of files and directories in package build directories to a sane "
"state -- a state that complies with Debian policy."
msgstr ""

#. type: textblock
#: dh_fixperms:22
msgid ""
"B<dh_fixperms> makes all files in F<usr/share/doc> in the package build "
"directory (excluding files in the F<examples/> directory) be mode 644. It "
"also changes the permissions of all man pages to mode 644. It makes all "
"files be owned by root, and it removes group and other write permission from "
"all files. It removes execute permissions from any libraries, headers, Perl "
"modules, or desktop files that have it set. It makes all files in the "
"standard F<bin> and F<sbin> directories, F<usr/games/> and F<etc/init.d> "
"executable (since v4). Finally, it removes the setuid and setgid bits from "
"all files in the package."
msgstr ""

#. type: =item
#: dh_fixperms:35
msgid "B<-X>I<item>, B<--exclude> I<item>"
msgstr ""

#. type: textblock
#: dh_fixperms:37
msgid ""
"Exclude files that contain I<item> anywhere in their filename from having "
"their permissions changed. You may use this option multiple times to build "
"up a list of things to exclude."
msgstr ""

#. type: textblock
#: dh_gconf:5
msgid "dh_gconf - install GConf defaults files and register schemas"
msgstr ""

#. type: textblock
#: dh_gconf:14
msgid "B<dh_gconf> [S<I<debhelper options>>] [B<--priority=>I<priority>]"
msgstr ""

#. type: textblock
#: dh_gconf:18
msgid ""
"B<dh_gconf> is a debhelper program that is responsible for installing GConf "
"defaults files and registering GConf schemas."
msgstr ""

#. type: textblock
#: dh_gconf:21
msgid "An appropriate dependency on gconf2 will be generated in B<${misc:Depends}>."
msgstr ""

#. type: =item
#: dh_gconf:27
msgid "debian/I<package>.gconf-defaults"
msgstr ""

#. type: textblock
#: dh_gconf:29
msgid ""
"Installed into F<usr/share/gconf/defaults/10_package> in the package build "
"directory, with I<package> replaced by the package name."
msgstr ""

#. type: =item
#: dh_gconf:32
msgid "debian/I<package>.gconf-mandatory"
msgstr ""

#. type: textblock
#: dh_gconf:34
msgid ""
"Installed into F<usr/share/gconf/mandatory/10_package> in the package build "
"directory, with I<package> replaced by the package name."
msgstr ""

#. type: =item
#: dh_gconf:43
msgid "B<--priority> I<priority>"
msgstr ""

#. type: textblock
#: dh_gconf:45
msgid ""
"Use I<priority> (which should be a 2-digit number) as the defaults priority "
"instead of B<10>. Higher values than ten can be used by derived "
"distributions (B<20>), CDD distributions (B<50>), or site-specific packages "
"(B<90>)."
msgstr ""

#. type: textblock
#: dh_gconf:109
msgid "Ross Burton <ross@burtonini.com> Josselin Mouette <joss@debian.org>"
msgstr ""

#. type: textblock
#: dh_gencontrol:5
msgid "dh_gencontrol - generate and install control file"
msgstr ""

#. type: textblock
#: dh_gencontrol:14
msgid "B<dh_gencontrol> [S<I<debhelper options>>] [S<B<--> I<params>>]"
msgstr ""

#. type: textblock
#: dh_gencontrol:18
msgid ""
"B<dh_gencontrol> is a debhelper program that is responsible for generating "
"control files, and installing them into the I<DEBIAN> directory with the "
"proper permissions."
msgstr ""

#. type: textblock
#: dh_gencontrol:22
msgid ""
"This program is merely a wrapper around L<dpkg-gencontrol(1)>, which calls "
"it once for each package being acted on, and passes in some additional "
"useful flags."
msgstr ""

#. type: textblock
#: dh_gencontrol:32
msgid "Pass I<params> to L<dpkg-gencontrol(1)>."
msgstr ""

#. type: =item
#: dh_gencontrol:34
msgid "B<-u>I<params>, B<--dpkg-gencontrol-params=>I<params>"
msgstr ""

#. type: textblock
#: dh_gencontrol:36
msgid ""
"This is another way to pass I<params> to L<dpkg-gencontrol(1)>.  It is "
"deprecated; use B<--> instead."
msgstr ""

#. type: textblock
#: dh_icons:5
msgid "dh_icons - Update caches of Freedesktop icons"
msgstr ""

#. type: textblock
#: dh_icons:15
msgid "B<dh_icons> [S<I<debhelper options>>] [B<-n>]"
msgstr ""

#. type: textblock
#: dh_icons:19
msgid ""
"B<dh_icons> is a debhelper program that updates caches of Freedesktop icons "
"when needed, using the B<update-icon-caches> program provided by GTK+2.12.  "
"Currently this program does not handle installation of the files, though it "
"may do so at a later date, so should be run after icons are installed in the "
"package build directories."
msgstr ""

#. type: textblock
#: dh_icons:25
msgid ""
"It takes care of adding maintainer script fragments to call "
"B<update-icon-caches> for icon directories. (This is not done for gnome and "
"hicolor icons, as those are handled by triggers.)  These commands are "
"inserted into the maintainer scripts by L<dh_installdeb(1)>."
msgstr ""

#. type: =item
#: dh_icons:34 dh_installcatalogs:53 dh_installdebconf:65 dh_installemacsen:57 dh_installinit:63 dh_installmenu:45 dh_installmodules:42 dh_installudev:49 dh_installwm:44 dh_makeshlibs:77 dh_usrlocal:43
msgid "B<-n>, B<--noscripts>"
msgstr ""

#. type: textblock
#: dh_icons:36
msgid "Do not modify maintainer scripts."
msgstr ""

#. type: textblock
#: dh_icons:79
msgid ""
"Ross Burton <ross@burtonini.com> Jordi Mallach <jordi@debian.org> Josselin "
"Mouette <joss@debian.org>"
msgstr ""

#. type: textblock
#: dh_install:5
msgid "dh_install - install files into package build directories"
msgstr ""

#. type: textblock
#: dh_install:15
msgid ""
"B<dh_install> [B<-X>I<item>] [B<--autodest>] [B<--sourcedir=>I<dir>] "
"[S<I<debhelper options>>] [S<I<file|dir> ... I<destdir>>]"
msgstr ""

#. type: textblock
#: dh_install:19
msgid ""
"B<dh_install> is a debhelper program that handles installing files into "
"package build directories. There are many B<dh_install>I<*> commands that "
"handle installing specific types of files such as documentation, examples, "
"man pages, and so on, and they should be used when possible as they often "
"have extra intelligence for those particular tasks. B<dh_install>, then, is "
"useful for installing everything else, for which no particular intelligence "
"is needed. It is a replacement for the old B<dh_movefiles> command."
msgstr ""

#. type: textblock
#: dh_install:27
msgid ""
"This program may be used in one of two ways. If you just have a file or two "
"that the upstream Makefile does not install for you, you can run "
"B<dh_install> on them to move them into place. On the other hand, maybe you "
"have a large package that builds multiple binary packages. You can use the "
"upstream F<Makefile> to install it all into F<debian/tmp>, and then use "
"B<dh_install> to copy directories and files from there into the proper "
"package build directories."
msgstr ""

#. type: textblock
#: dh_install:34
msgid ""
"From debhelper compatibility level 7 on, B<dh_install> will fall back to "
"looking in F<debian/tmp> for files, if it doesn't find them in the current "
"directory (or whereever you've told it to look using B<--sourcedir>)."
msgstr ""

#. type: =item
#: dh_install:42
msgid "debian/I<package>.install"
msgstr ""

#. type: textblock
#: dh_install:44
msgid ""
"List the files to install into each package and the directory they should be "
"installed to. The format is a set of lines, where each line lists a file or "
"files to install, and at the end of the line tells the directory it should "
"be installed in. The name of the files (or directories) to install should be "
"given relative to the current directory, while the installation directory is "
"given relative to the package build directory. You may use wildcards in the "
"names of the files to install (in v3 mode and above)."
msgstr ""

#. type: textblock
#: dh_install:52
msgid ""
"Note that if you list exactly one filename or wildcard-pattern on a line by "
"itself, with no explicit destination, then B<dh_install> will automatically "
"guess the destination to use, the same as if the --autodest option were "
"used."
msgstr ""

#. type: =item
#: dh_install:63
msgid "B<--list-missing>"
msgstr ""

#. type: textblock
#: dh_install:65
msgid ""
"This option makes B<dh_install> keep track of the files it installs, and "
"then at the end, compare that list with the files in the source "
"directory. If any of the files (and symlinks) in the source directory were "
"not installed to somewhere, it will warn on stderr about that."
msgstr ""

#. type: textblock
#: dh_install:70
msgid ""
"This may be useful if you have a large package and want to make sure that "
"you don't miss installing newly added files in new upstream releases."
msgstr ""

#. type: textblock
#: dh_install:73
msgid ""
"Note that files that are excluded from being moved via the B<-X> option are "
"not warned about."
msgstr ""

#. type: =item
#: dh_install:76
msgid "B<--fail-missing>"
msgstr ""

#. type: textblock
#: dh_install:78
msgid ""
"This option is like B<--list-missing>, except if a file was missed, it will "
"not only list the missing files, but also fail with a nonzero exit code."
msgstr ""

#. type: textblock
#: dh_install:83 dh_installexamples:43
msgid ""
"Exclude files that contain I<item> anywhere in their filename from being "
"installed."
msgstr ""

#. type: =item
#: dh_install:86 dh_movefiles:42
msgid "B<--sourcedir=>I<dir>"
msgstr ""

#. type: textblock
#: dh_install:88
msgid "Look in the specified directory for files to be installed."
msgstr ""

#. type: textblock
#: dh_install:90
msgid ""
"Note that this is not the same as the B<--sourcedirectory> option used by "
"the B<dh_auto_>I<*> commands. You rarely need to use this option, since "
"B<dh_install> automatically looks for files in F<debian/tmp> in debhelper "
"compatibility level 7 and above."
msgstr ""

#. type: =item
#: dh_install:95
msgid "B<--autodest>"
msgstr ""

#. type: textblock
#: dh_install:97
msgid ""
"Guess as the destination directory to install things to. If this is "
"specified, you should not list destination directories in "
"F<debian/package.install> files or on the command line. Instead, "
"B<dh_install> will guess as follows:"
msgstr ""

#. type: textblock
#: dh_install:102
msgid ""
"Strip off F<debian/tmp> (or the sourcedir if one is given) from the front of "
"the filename, if it is present, and install into the dirname of the "
"filename. So if the filename is F<debian/tmp/usr/bin>, then that directory "
"will be copied to F<debian/package/usr/>. If the filename is "
"F<debian/tmp/etc/passwd>, it will be copied to F<debian/package/etc/>."
msgstr ""

#. type: =item
#: dh_install:108
msgid "I<file|dir> ... I<destdir>"
msgstr ""

#. type: textblock
#: dh_install:110
msgid ""
"Lists files (or directories) to install and where to install them to.  The "
"files will be installed into the first package F<dh_install> acts on."
msgstr ""

#. type: =head1
#: dh_install:254
msgid "LIMITATIONS"
msgstr ""

#. type: verbatim
#: dh_install:256
#, no-wrap
msgid ""
"B<dh_install> cannot rename files or directories, it can only install them\n"
"with the names they already have into wherever you want in the package\n"
"build tree.\n"
"  \n"
msgstr ""

#. type: textblock
#: dh_installcatalogs:5
msgid "dh_installcatalogs - install and register SGML Catalogs"
msgstr ""

#. type: textblock
#: dh_installcatalogs:16
msgid "B<dh_installcatalogs> [S<I<debhelper options>>] [B<-n>]"
msgstr ""

#. type: textblock
#: dh_installcatalogs:20
msgid ""
"B<dh_installcatalogs> is a debhelper program that installs and registers "
"SGML catalogs. It complies with the Debian XML/SGML policy."
msgstr ""

#. type: textblock
#: dh_installcatalogs:23
msgid ""
"Catalogs will be registered in a supercatalog, in "
"F</etc/sgml/I<package>.cat>."
msgstr ""

#. type: textblock
#: dh_installcatalogs:26
msgid ""
"This command automatically adds maintainer script snippets for registering "
"and unregistering the catalogs and supercatalogs (unless B<-n> is "
"used). These snippets are inserted into the maintainer scripts by "
"B<dh_installdeb>; see L<dh_installdeb(1)> for an explanation of Debhelper "
"maintainer script snippets."
msgstr ""

#. type: textblock
#: dh_installcatalogs:32
msgid ""
"A dependency on B<sgml-base> will be added to B<${misc:Depends}>, so be sure "
"your package uses that variable in F<debian/control>."
msgstr ""

#. type: =item
#: dh_installcatalogs:39
msgid "debian/I<package>.sgmlcatalogs"
msgstr ""

#. type: textblock
#: dh_installcatalogs:41
msgid ""
"Lists the catalogs to be installed per package. Each line in that file "
"should be of the form C<I<source> I<dest>>, where I<source> indicates where "
"the catalog resides in the source tree, and I<dest> indicates the "
"destination location for the catalog under the package build area. I<dest> "
"should start with F</usr/share/sgml/>."
msgstr ""

#. type: textblock
#: dh_installcatalogs:55 dh_installinit:65
msgid "Do not modify F<postinst>/F<postrm>/F<prerm> scripts."
msgstr ""

#. type: textblock
#: dh_installcatalogs:61 dh_installdocs:127 dh_installemacsen:74 dh_installinit:146 dh_installmodules:56 dh_installudev:57 dh_installwm:56 dh_usrlocal:51
msgid ""
"Note that this command is not idempotent. L<dh_prep(1)> should be called "
"between invocations of this command. Otherwise, it may cause multiple "
"instances of the same text to be added to maintainer scripts."
msgstr ""

#. type: textblock
#: dh_installcatalogs:126
msgid "F</usr/share/doc/sgml-base-doc/>"
msgstr ""

#. type: textblock
#: dh_installcatalogs:130
msgid "Adam Di Carlo <aph@debian.org>"
msgstr ""

#. type: textblock
#: dh_installchangelogs:5
msgid "dh_installchangelogs - install changelogs into package build directories"
msgstr ""

#. type: textblock
#: dh_installchangelogs:14
msgid ""
"B<dh_installchangelogs> [S<I<debhelper options>>] [B<-k>] [B<-X>I<item>] "
"[I<upstream>]"
msgstr ""

#. type: textblock
#: dh_installchangelogs:18
msgid ""
"B<dh_installchangelogs> is a debhelper program that is responsible for "
"installing changelogs into package build directories."
msgstr ""

#. type: textblock
#: dh_installchangelogs:21
msgid "An upstream F<changelog> file may be specified as an option."
msgstr ""

#. type: textblock
#: dh_installchangelogs:23
msgid ""
"If there is an upstream F<changelog> file, it will be be installed as "
"F<usr/share/doc/package/changelog> in the package build directory."
msgstr ""

#. type: textblock
#: dh_installchangelogs:26
msgid ""
"If the upstream changelog is is a F<html> file (determined by file "
"extension), it will be installed as F<usr/share/doc/package/changelog.html> "
"instead. If the html changelog is converted to plain text, that variant can "
"be specified as a second upstream changelog file. When no plain text variant "
"is specified, a short F<usr/share/doc/package/changelog> is generated, "
"pointing readers at the html changelog file."
msgstr ""

#. type: =item
#: dh_installchangelogs:37
msgid "F<debian/changelog>"
msgstr ""

#. type: =item
#: dh_installchangelogs:39
msgid "F<debian/NEWS>"
msgstr ""

#. type: =item
#: dh_installchangelogs:41
msgid "debian/I<package>.changelog"
msgstr ""

#. type: =item
#: dh_installchangelogs:43
msgid "debian/I<package>.NEWS"
msgstr ""

#. type: textblock
#: dh_installchangelogs:45
msgid ""
"Automatically installed into usr/share/doc/I<package>/ in the package build "
"directory."
msgstr ""

#. type: textblock
#: dh_installchangelogs:48
msgid ""
"Use the package specific name if I<package> needs a different F<NEWS> or "
"F<changelog> file."
msgstr ""

#. type: textblock
#: dh_installchangelogs:51
msgid ""
"The F<changelog> file is installed with a name of changelog for native "
"packages, and F<changelog.Debian> for non-native packages.  The F<NEWS> file "
"is always installed with a name of F<NEWS.Debian>."
msgstr ""

#. type: textblock
#: dh_installchangelogs:63
msgid ""
"Keep the original name of the upstream changelog. This will be accomplished "
"by installing the upstream changelog as F<changelog>, and making a symlink "
"from that to the original name of the F<changelog> file. This can be useful "
"if the upstream changelog has an unusual name, or if other documentation in "
"the package refers to the F<changelog> file."
msgstr ""

#. type: textblock
#: dh_installchangelogs:71
msgid ""
"Exclude upstream F<changelog> files that contain I<item> anywhere in their "
"filename from being installed."
msgstr ""

#. type: =item
#: dh_installchangelogs:74
msgid "I<upstream>"
msgstr ""

#. type: textblock
#: dh_installchangelogs:76
msgid "Install this file as the upstream changelog."
msgstr ""

#. type: textblock
#: dh_installcron:5
msgid "dh_installcron - install cron scripts into etc/cron.*"
msgstr ""

#. type: textblock
#: dh_installcron:14
msgid "B<dh_installcron> [S<B<debhelper options>>] [B<--name=>I<name>]"
msgstr ""

#. type: textblock
#: dh_installcron:18
msgid ""
"B<dh_installcron> is a debhelper program that is responsible for installing "
"cron scripts."
msgstr ""

#. type: =item
#: dh_installcron:25
msgid "debian/I<package>.cron.daily"
msgstr ""

#. type: =item
#: dh_installcron:27
msgid "debian/I<package>.cron.weekly"
msgstr ""

#. type: =item
#: dh_installcron:29
msgid "debian/I<package>.cron.monthly"
msgstr ""

#. type: =item
#: dh_installcron:31
msgid "debian/I<package>.cron.hourly"
msgstr ""

#. type: =item
#: dh_installcron:33
msgid "debian/I<package>.cron.d"
msgstr ""

#. type: textblock
#: dh_installcron:35
msgid ""
"Installed into the appropriate F<etc/cron.*/> directory in the package build "
"directory."
msgstr ""

#. type: =item
#: dh_installcron:44 dh_installifupdown:43 dh_installinit:110 dh_installlogcheck:46 dh_installlogrotate:26 dh_installmodules:46 dh_installpam:35 dh_installppp:39 dh_installudev:39
msgid "B<--name=>I<name>"
msgstr ""

#. type: textblock
#: dh_installcron:46
msgid ""
"Look for files named F<debian/package.name.cron.*> and install them as "
"F<etc/cron.*/name>, instead of using the usual files and installing them as "
"the package name."
msgstr ""

#. type: textblock
#: dh_installdeb:5
msgid "dh_installdeb - install files into the DEBIAN directory"
msgstr ""

#. type: textblock
#: dh_installdeb:14
msgid "B<dh_installdeb> [S<I<debhelper options>>]"
msgstr ""

#. type: textblock
#: dh_installdeb:18
msgid ""
"B<dh_installdeb> is a debhelper program that is responsible for installing "
"files into the F<DEBIAN> directories in package build directories with the "
"correct permissions."
msgstr ""

#. type: =item
#: dh_installdeb:26
msgid "I<package>.postinst"
msgstr ""

#. type: =item
#: dh_installdeb:28
msgid "I<package>.preinst"
msgstr ""

#. type: =item
#: dh_installdeb:30
msgid "I<package>.postrm"
msgstr ""

#. type: =item
#: dh_installdeb:32
msgid "I<package>.prerm"
msgstr ""

#. type: textblock
#: dh_installdeb:34
msgid "These maintainer scripts are installed into the F<DEBIAN> directory."
msgstr ""

#. type: textblock
#: dh_installdeb:36
msgid ""
"Inside the scripts, the token B<#DEBHELPER#> is replaced with shell script "
"snippets generated by other debhelper commands."
msgstr ""

#. type: =item
#: dh_installdeb:39
msgid "I<package>.triggers"
msgstr ""

#. type: =item
#: dh_installdeb:41
msgid "I<package>.shlibs"
msgstr ""

#. type: textblock
#: dh_installdeb:43
msgid "These control files are installed into the F<DEBIAN> directory."
msgstr ""

#. type: =item
#: dh_installdeb:45
msgid "I<package>.conffiles"
msgstr ""

#. type: textblock
#: dh_installdeb:47
msgid "This control file will be installed into the F<DEBIAN> directory."
msgstr ""

#. type: textblock
#: dh_installdeb:49
msgid ""
"In v3 compatibility mode and higher, all files in the F<etc/> directory in a "
"package will automatically be flagged as conffiles by this program, so there "
"is no need to list them manually here."
msgstr ""

#. type: =item
#: dh_installdeb:53
msgid "I<package>.maintscript"
msgstr ""

#. type: textblock
#: dh_installdeb:55
msgid ""
"Lines in this file correspond to L<dpkg-maintscript-helper(1)> commands and "
"parameters.  Any shell metacharacters will be escaped, so arbitrary shell "
"code cannot be inserted here.  For example, a line such as C<mv_conffile "
"/etc/oldconffile /etc/newconffile> will insert maintainer script snippets "
"into all maintainer scripts sufficient to move that conffile."
msgstr ""

#. type: textblock
#: dh_installdebconf:5
msgid ""
"dh_installdebconf - install files used by debconf in package build "
"directories"
msgstr ""

#. type: textblock
#: dh_installdebconf:14
msgid "B<dh_installdebconf> [S<I<debhelper options>>] [B<-n>] [S<B<--> I<params>>]"
msgstr ""

#. type: textblock
#: dh_installdebconf:18
msgid ""
"B<dh_installdebconf> is a debhelper program that is responsible for "
"installing files used by debconf into package build directories."
msgstr ""

#. type: textblock
#: dh_installdebconf:21
msgid ""
"It also automatically generates the F<postrm> commands needed to interface "
"with debconf. The commands are added to the maintainer scripts by "
"B<dh_installdeb>. See L<dh_installdeb(1)> for an explanation of how that "
"works."
msgstr ""

#. type: textblock
#: dh_installdebconf:26
msgid ""
"Note that if you use debconf, your package probably needs to depend on it "
"(it will be added to B<${misc:Depends}> by this program)."
msgstr ""

#. type: textblock
#: dh_installdebconf:29
msgid ""
"Note that for your config script to be called by B<dpkg>, your F<postinst> "
"needs to source debconf's confmodule. B<dh_installdebconf> does not install "
"this statement into the F<postinst> automatically as it is too hard to do it "
"right."
msgstr ""

#. type: =item
#: dh_installdebconf:38
msgid "debian/I<package>.config"
msgstr ""

#. type: textblock
#: dh_installdebconf:40
msgid ""
"This is the debconf F<config> script, and is installed into the F<DEBIAN> "
"directory in the package build directory."
msgstr ""

#. type: textblock
#: dh_installdebconf:43
msgid ""
"Inside the script, the token B<#DEBHELPER#> is replaced with shell script "
"snippets generated by other debhelper commands."
msgstr ""

#. type: =item
#: dh_installdebconf:46
msgid "debian/I<package>.templates"
msgstr ""

#. type: textblock
#: dh_installdebconf:48
msgid ""
"This is the debconf F<templates> file, and is installed into the F<DEBIAN> "
"directory in the package build directory."
msgstr ""

#. type: =item
#: dh_installdebconf:51
msgid "F<debian/po/>"
msgstr ""

#. type: textblock
#: dh_installdebconf:53
msgid ""
"If this directory is present, this program will automatically use "
"L<po2debconf(1)> to generate merged templates files that include the "
"translations from there."
msgstr ""

#. type: textblock
#: dh_installdebconf:57
msgid "For this to work, your package should build-depend on F<po-debconf>."
msgstr ""

#. type: textblock
#: dh_installdebconf:67
msgid "Do not modify F<postrm> script."
msgstr ""

#. type: textblock
#: dh_installdebconf:71
msgid "Pass the params to B<po2debconf>."
msgstr ""

#. type: textblock
#: dh_installdirs:5
msgid "dh_installdirs - create subdirectories in package build directories"
msgstr ""

#. type: textblock
#: dh_installdirs:14
msgid "B<dh_installdirs> [S<I<debhelper options>>] [B<-A>] [S<I<dir> ...>]"
msgstr ""

#. type: textblock
#: dh_installdirs:18
msgid ""
"B<dh_installdirs> is a debhelper program that is responsible for creating "
"subdirectories in package build directories."
msgstr ""

#. type: =item
#: dh_installdirs:25
msgid "debian/I<package>.dirs"
msgstr ""

#. type: textblock
#: dh_installdirs:27
msgid "Lists directories to be created in I<package>."
msgstr ""

#. type: textblock
#: dh_installdirs:37
msgid ""
"Create any directories specified by command line parameters in ALL packages "
"acted on, not just the first."
msgstr ""

#. type: =item
#: dh_installdirs:40
msgid "I<dir> ..."
msgstr ""

#. type: textblock
#: dh_installdirs:42
msgid ""
"Create these directories in the package build directory of the first package "
"acted on. (Or in all packages if B<-A> is specified.)"
msgstr ""

#. type: textblock
#: dh_installdocs:5
msgid "dh_installdocs - install documentation into package build directories"
msgstr ""

#. type: textblock
#: dh_installdocs:14
msgid ""
"B<dh_installdocs> [S<I<debhelper options>>] [B<-A>] [B<-X>I<item>] "
"[S<I<file> ...>]"
msgstr ""

#. type: textblock
#: dh_installdocs:18
msgid ""
"B<dh_installdocs> is a debhelper program that is responsible for installing "
"documentation into F<usr/share/doc/package> in package build directories."
msgstr ""

#. type: =item
#: dh_installdocs:25
msgid "debian/I<package>.docs"
msgstr ""

#. type: textblock
#: dh_installdocs:27
msgid "List documentation files to be installed into I<package>."
msgstr ""

#. type: =item
#: dh_installdocs:29
msgid "F<debian/copyright>"
msgstr ""

#. type: textblock
#: dh_installdocs:31
msgid ""
"The copyright file is installed into all packages, unless a more specific "
"copyright file is available."
msgstr ""

#. type: =item
#: dh_installdocs:34
msgid "debian/I<package>.copyright"
msgstr ""

#. type: =item
#: dh_installdocs:36
msgid "debian/I<package>.README.Debian"
msgstr ""

#. type: =item
#: dh_installdocs:38
msgid "debian/I<package>.TODO"
msgstr ""

#. type: textblock
#: dh_installdocs:40
msgid "Each of these files is automatically installed if present for a I<package>."
msgstr ""

#. type: =item
#: dh_installdocs:43
msgid "F<debian/README.Debian>"
msgstr ""

#. type: =item
#: dh_installdocs:45
msgid "F<debian/TODO>"
msgstr ""

#. type: textblock
#: dh_installdocs:47
msgid ""
"These files are installed into the first binary package listed in "
"debian/control."
msgstr ""

#. type: textblock
#: dh_installdocs:50
msgid ""
"Note that F<README.debian> files are also installed as F<README.Debian>, and "
"F<TODO> files will be installed as F<TODO.Debian> in non-native packages."
msgstr ""

#. type: =item
#: dh_installdocs:53
msgid "debian/I<package>.doc-base"
msgstr ""

#. type: textblock
#: dh_installdocs:55
msgid ""
"Installed as doc-base control files. Note that the doc-id will be determined "
"from the B<Document:> entry in the doc-base control file in question. In the "
"event that multiple doc-base files in a single source package share the same "
"doc-id, they will be installed to usr/share/doc-base/package instead of "
"usr/share/doc-base/doc-id."
msgstr ""

#. type: =item
#: dh_installdocs:61
msgid "debian/I<package>.doc-base.*"
msgstr ""

#. type: textblock
#: dh_installdocs:63
msgid ""
"If your package needs to register more than one document, you need multiple "
"doc-base files, and can name them like this. In the event that multiple "
"doc-base files of this style in a single source package share the same "
"doc-id, they will be installed to usr/share/doc-base/package-* instead of "
"usr/share/doc-base/doc-id."
msgstr ""

#. type: textblock
#: dh_installdocs:77 dh_installinfo:37 dh_installman:67
msgid ""
"Install all files specified by command line parameters in ALL packages acted "
"on."
msgstr ""

#. type: textblock
#: dh_installdocs:82
msgid ""
"Exclude files that contain I<item> anywhere in their filename from being "
"installed. Note that this includes doc-base files."
msgstr ""

#. type: =item
#: dh_installdocs:85
msgid "B<--link-doc=>I<package>"
msgstr ""

#. type: textblock
#: dh_installdocs:87
msgid ""
"Make the documentation directory of all packages acted on be a symlink to "
"the documentation directory of I<package>. This has no effect when acting on "
"I<package> itself, or if the documentation directory to be created already "
"exists when B<dh_installdocs> is run. To comply with policy, I<package> must "
"be a binary package that comes from the same source package."
msgstr ""

#. type: textblock
#: dh_installdocs:93
msgid ""
"debhelper will try to avoid installing files into linked documentation "
"directories that would cause conflicts with the linked package. The B<-A> "
"option will have no effect on packages with linked documentation "
"directories, and F<copyright>, F<changelog>, F<README.Debian>, and F<TODO> "
"files will not be installed."
msgstr ""

#. type: textblock
#: dh_installdocs:99
msgid ""
"(An older method to accomplish the same thing, which is still supported, is "
"to make the documentation directory of a package be a dangling symlink, "
"before calling B<dh_installdocs>.)"
msgstr ""

#. type: textblock
#: dh_installdocs:105
msgid ""
"Install these files as documentation into the first package acted on. (Or in "
"all packages if B<-A> is specified)."
msgstr ""

#. type: textblock
#: dh_installdocs:112
msgid "This is an example of a F<debian/package.docs> file:"
msgstr ""

#. type: verbatim
#: dh_installdocs:114
#, no-wrap
msgid ""
"  README\n"
"  TODO\n"
"  debian/notes-for-maintainers.txt\n"
"  docs/manual.txt\n"
"  docs/manual.pdf\n"
"  docs/manual-html/\n"
"\n"
msgstr ""

#. type: textblock
#: dh_installdocs:123
msgid ""
"Note that B<dh_installdocs> will happily copy entire directory hierarchies "
"if you ask it to (similar to B<cp -a>). If it is asked to install a "
"directory, it will install the complete contents of the directory."
msgstr ""

#. type: textblock
#: dh_installemacsen:5
msgid "dh_installemacsen - register an Emacs add on package"
msgstr ""

#. type: textblock
#: dh_installemacsen:14
msgid ""
"B<dh_installemacsen> [S<I<debhelper options>>] [B<-n>] [B<--priority=>I<n>] "
"[B<--flavor=>I<foo>]"
msgstr ""

#. type: textblock
#: dh_installemacsen:18
msgid ""
"B<dh_installemacsen> is a debhelper program that is responsible for "
"installing files used by the Debian B<emacsen-common> package into package "
"build directories."
msgstr ""

#. type: textblock
#: dh_installemacsen:22
msgid ""
"It also automatically generates the F<preinst> F<postinst> and F<prerm> "
"commands needed to register a package as an Emacs add on package. The "
"commands are added to the maintainer scripts by B<dh_installdeb>. See "
"L<dh_installdeb(1)> for an explanation of how this works."
msgstr ""

#. type: =item
#: dh_installemacsen:31
msgid "debian/I<package>.emacsen-compat"
msgstr ""

#. type: textblock
#: dh_installemacsen:33
msgid ""
"Installed into F<usr/lib/emacsen-common/packages/compat/package> in the "
"package build directory."
msgstr ""

#. type: =item
#: dh_installemacsen:36
msgid "debian/I<package>.emacsen-install"
msgstr ""

#. type: textblock
#: dh_installemacsen:38
msgid ""
"Installed into F<usr/lib/emacsen-common/packages/install/package> in the "
"package build directory."
msgstr ""

#. type: =item
#: dh_installemacsen:41
msgid "debian/I<package>.emacsen-remove"
msgstr ""

#. type: textblock
#: dh_installemacsen:43
msgid ""
"Installed into F<usr/lib/emacsen-common/packages/remove/package> in the "
"package build directory."
msgstr ""

#. type: =item
#: dh_installemacsen:46
msgid "debian/I<package>.emacsen-startup"
msgstr ""

#. type: textblock
#: dh_installemacsen:48
msgid ""
"Installed into etc/emacs/site-start.d/50I<package>.el in the package build "
"directory. Use B<--priority> to use a different priority than 50."
msgstr ""

#. type: textblock
#: dh_installemacsen:59 dh_usrlocal:45
msgid "Do not modify F<postinst>/F<prerm> scripts."
msgstr ""

#. type: =item
#: dh_installemacsen:61 dh_installwm:38
msgid "B<--priority=>I<n>"
msgstr ""

#. type: textblock
#: dh_installemacsen:63
msgid "Sets the priority number of a F<site-start.d> file. Default is 50."
msgstr ""

#. type: =item
#: dh_installemacsen:65
msgid "B<--flavor=>I<foo>"
msgstr ""

#. type: textblock
#: dh_installemacsen:67
msgid ""
"Sets the flavor a F<site-start.d> file will be installed in. Default is "
"B<emacs>, alternatives include B<xemacs> and B<emacs20>."
msgstr ""

#. type: textblock
#: dh_installemacsen:143
msgid "L<debhelper(7)> L</usr/share/doc/emacsen-common/debian-emacs-policy.gz>"
msgstr ""

#. type: textblock
#: dh_installexamples:5
msgid "dh_installexamples - install example files into package build directories"
msgstr ""

#. type: textblock
#: dh_installexamples:14
msgid ""
"B<dh_installexamples> [S<I<debhelper options>>] [B<-A>] [B<-X>I<item>] "
"[S<I<file> ...>]"
msgstr ""

#. type: textblock
#: dh_installexamples:18
msgid ""
"B<dh_installexamples> is a debhelper program that is responsible for "
"installing examples into F<usr/share/doc/package/examples> in package build "
"directories."
msgstr ""

#. type: =item
#: dh_installexamples:26
msgid "debian/I<package>.examples"
msgstr ""

#. type: textblock
#: dh_installexamples:28
msgid "Lists example files or directories to be installed."
msgstr ""

#. type: textblock
#: dh_installexamples:38
msgid ""
"Install any files specified by command line parameters in ALL packages acted "
"on."
msgstr ""

#. type: textblock
#: dh_installexamples:48
msgid ""
"Install these files (or directories) as examples into the first package "
"acted on. (Or into all packages if B<-A> is specified.)"
msgstr ""

#. type: textblock
#: dh_installexamples:55
msgid ""
"Note that B<dh_installexamples> will happily copy entire directory "
"hierarchies if you ask it to (similar to B<cp -a>). If it is asked to "
"install a directory, it will install the complete contents of the directory."
msgstr ""

#. type: textblock
#: dh_installifupdown:5
msgid "dh_installifupdown - install if-up and if-down hooks"
msgstr ""

#. type: textblock
#: dh_installifupdown:14
msgid "B<dh_installifupdown> [S<I<debhelper options>>] [B<--name=>I<name>]"
msgstr ""

#. type: textblock
#: dh_installifupdown:18
msgid ""
"B<dh_installifupdown> is a debhelper program that is responsible for "
"installing F<if-up>, F<if-down>, F<if-pre-up>, and F<if-post-down> hook "
"scripts into package build directories."
msgstr ""

#. type: =item
#: dh_installifupdown:26
msgid "debian/I<package>.if-up"
msgstr ""

#. type: =item
#: dh_installifupdown:28
msgid "debian/I<package>.if-down"
msgstr ""

#. type: =item
#: dh_installifupdown:30
msgid "debian/I<package>.if-pre-up"
msgstr ""

#. type: =item
#: dh_installifupdown:32
msgid "debian/I<package>.if-post-down"
msgstr ""

#. type: textblock
#: dh_installifupdown:34
msgid ""
"These files are installed into etc/network/if-*.d/I<package> in the package "
"build directory."
msgstr ""

#. type: textblock
#: dh_installifupdown:45
msgid ""
"Look for files named F<debian/package.name.if-*> and install them as "
"F<etc/network/if-*/name>, instead of using the usual files and installing "
"them as the package name."
msgstr ""

#. type: textblock
#: dh_installinfo:5
msgid "dh_installinfo - install info files"
msgstr ""

#. type: textblock
#: dh_installinfo:14
msgid "B<dh_installinfo> [S<I<debhelper options>>] [B<-A>] [S<I<file> ...>]"
msgstr ""

#. type: textblock
#: dh_installinfo:18
msgid ""
"B<dh_installinfo> is a debhelper program that is responsible for installing "
"info files into F<usr/share/info> in the package build directory."
msgstr ""

#. type: =item
#: dh_installinfo:25
msgid "debian/I<package>.info"
msgstr ""

#. type: textblock
#: dh_installinfo:27
msgid "List info files to be installed."
msgstr ""

#. type: textblock
#: dh_installinfo:42
msgid ""
"Install these info files into the first package acted on. (Or in all "
"packages if B<-A> is specified)."
msgstr ""

#. type: textblock
#: dh_installinit:5
msgid "dh_installinit - install service init files into package build directories"
msgstr ""

#. type: textblock
#: dh_installinit:15
msgid ""
"B<dh_installinit> [S<I<debhelper options>>] [B<--name=>I<name>] [B<-n>] "
"[B<-R>] [B<-r>] [B<-d>] [S<B<--> I<params>>]"
msgstr ""

#. type: textblock
#: dh_installinit:19
msgid ""
"B<dh_installinit> is a debhelper program that is responsible for installing "
"init scripts with associated defaults files, as well as upstart job files, "
"and systemd service files into package build directories."
msgstr ""

#. type: textblock
#: dh_installinit:23
msgid ""
"It also automatically generates the F<postinst> and F<postrm> and F<prerm> "
"commands needed to set up the symlinks in F</etc/rc*.d/> to start and stop "
"the init scripts."
msgstr ""

#. type: =item
#: dh_installinit:31
msgid "debian/I<package>.init"
msgstr ""

#. type: textblock
#: dh_installinit:33
msgid ""
"If this exists, it is installed into etc/init.d/I<package> in the package "
"build directory."
msgstr ""

#. type: =item
#: dh_installinit:36
msgid "debian/I<package>.default"
msgstr ""

#. type: textblock
#: dh_installinit:38
msgid ""
"If this exists, it is installed into etc/default/I<package> in the package "
"build directory."
msgstr ""

#. type: =item
#: dh_installinit:41
msgid "debian/I<package>.upstart"
msgstr ""

#. type: textblock
#: dh_installinit:43
msgid ""
"If this exists, it is installed into etc/init/I<package>.conf in the package "
"build directory."
msgstr ""

#. type: =item
#: dh_installinit:46
msgid "debian/I<package>.service"
msgstr ""

#. type: textblock
#: dh_installinit:48
msgid ""
"If this exists, it is installed into lib/systemd/system/I<package>.service "
"in the package build directory."
msgstr ""

#. type: =item
#: dh_installinit:51
msgid "debian/I<package>.tmpfile"
msgstr ""

#. type: textblock
#: dh_installinit:53
msgid ""
"If this exists, it is installed into usr/lib/tmpfiles.d/I<package>.conf in "
"the package build directory. (The tmpfiles.d mechanism is currently only "
"used by systemd.)"
msgstr ""

#. type: =item
#: dh_installinit:67
msgid "B<-o>, B<--onlyscripts>"
msgstr ""

#. type: textblock
#: dh_installinit:69
msgid ""
"Only modify F<postinst>/F<postrm>/F<prerm> scripts, do not actually install "
"any init script, default files, upstart job or systemd service file. May be "
"useful if the file is shipped and/or installed by upstream in a way that "
"doesn't make it easy to let B<dh_installinit> find it."
msgstr ""

#. type: =item
#: dh_installinit:74
msgid "B<-R>, B<--restart-after-upgrade>"
msgstr ""

#. type: textblock
#: dh_installinit:76
msgid ""
"Do not stop the init script until after the package upgrade has been "
"completed. This is different than the default behavior, which stops the "
"script in the F<prerm>, and starts it again in the F<postinst>."
msgstr ""

#. type: textblock
#: dh_installinit:80
msgid ""
"This can be useful for daemons that should not have a possibly long downtime "
"during upgrade. But you should make sure that the daemon will not get "
"confused by the package being upgraded while it's running before using this "
"option."
msgstr ""

#. type: =item
#: dh_installinit:85
msgid "B<-r>, B<--no-restart-on-upgrade>"
msgstr ""

#. type: textblock
#: dh_installinit:87
msgid "Do not stop init script on upgrade."
msgstr ""

#. type: =item
#: dh_installinit:89
msgid "B<--no-start>"
msgstr ""

#. type: textblock
#: dh_installinit:91
msgid ""
"Do not start the init script on install or upgrade, or stop it on removal.  "
"Only call B<update-rc.d>. Useful for rcS scripts."
msgstr ""

#. type: =item
#: dh_installinit:94
msgid "B<-d>, B<--remove-d>"
msgstr ""

#. type: textblock
#: dh_installinit:96
msgid ""
"Remove trailing B<d> from the name of the package, and use the result for "
"the filename the upstart job file is installed as in F<etc/init/> , and for "
"the filename the init script is installed as in etc/init.d and the default "
"file is installed as in F<etc/default/> . This may be useful for daemons "
"with names ending in B<d>. (Note: this takes precedence over the "
"B<--init-script> parameter described below.)"
msgstr ""

#. type: =item
#: dh_installinit:103
msgid "B<-u>I<params> B<--update-rcd-params=>I<params>"
msgstr ""

#. type: textblock
#: dh_installinit:107
msgid ""
"Pass I<params> to L<update-rc.d(8)>. If not specified, B<defaults> will be "
"passed to L<update-rc.d(8)>."
msgstr ""

#. type: textblock
#: dh_installinit:112
msgid ""
"Install the init script (and default file) as well as upstart job file using "
"the filename I<name> instead of the default filename, which is the package "
"name. When this parameter is used, B<dh_installinit> looks for and installs "
"files named F<debian/package.name.init>, F<debian/package.name.default> and "
"F<debian/package.name.upstart> instead of the usual F<debian/package.init>, "
"F<debian/package.default> and F<debian/package.upstart>."
msgstr ""

#. type: =item
#: dh_installinit:120
msgid "B<--init-script=>I<scriptname>"
msgstr ""

#. type: textblock
#: dh_installinit:122
msgid ""
"Use I<scriptname> as the filename the init script is installed as in "
"F<etc/init.d/> (and also use it as the filename for the defaults file, if it "
"is installed). If you use this parameter, B<dh_installinit> will look to see "
"if a file in the F<debian/> directory exists that looks like "
"F<package.scriptname> and if so will install it as the init script in "
"preference to the files it normally installs."
msgstr ""

#. type: textblock
#: dh_installinit:129
msgid ""
"This parameter is deprecated, use the B<--name> parameter instead. This "
"parameter is incompatible with the use of upstart jobs."
msgstr ""

#. type: =item
#: dh_installinit:132
msgid "B<--upstart-only>"
msgstr ""

#. type: textblock
#: dh_installinit:134
msgid "Deprecated option, ignored for compatibility."
msgstr ""

#. type: =item
#: dh_installinit:136
msgid "B<--error-handler=>I<function>"
msgstr ""

#. type: textblock
#: dh_installinit:138
msgid ""
"Call the named shell I<function> if running the init script fails. The "
"function should be provided in the F<prerm> and F<postinst> scripts, before "
"the B<#DEBHELPER#> token."
msgstr ""

#. type: =head1
#: dh_installinit:349
msgid "AUTHORS"
msgstr ""

#. type: textblock
#: dh_installinit:353
msgid "Steve Langasek <steve.langasek@canonical.com>"
msgstr ""

#. type: textblock
#: dh_installinit:355
msgid "Michael Stapelberg <stapelberg@debian.org>"
msgstr ""

#. type: textblock
#: dh_installinit:357
msgid "Scott James Remnant <scott@canonical.com>"
msgstr ""

#. type: textblock
#: dh_installlogcheck:5
msgid "dh_installlogcheck - install logcheck rulefiles into etc/logcheck/"
msgstr ""

#. type: textblock
#: dh_installlogcheck:14
msgid "B<dh_installlogcheck> [S<I<debhelper options>>]"
msgstr ""

#. type: textblock
#: dh_installlogcheck:18
msgid ""
"B<dh_installlogcheck> is a debhelper program that is responsible for "
"installing logcheck rule files."
msgstr ""

#. type: =item
#: dh_installlogcheck:25
msgid "debian/I<package>.logcheck.cracking"
msgstr ""

#. type: =item
#: dh_installlogcheck:27
msgid "debian/I<package>.logcheck.violations"
msgstr ""

#. type: =item
#: dh_installlogcheck:29
msgid "debian/I<package>.logcheck.violations.ignore"
msgstr ""

#. type: =item
#: dh_installlogcheck:31
msgid "debian/I<package>.logcheck.ignore.workstation"
msgstr ""

#. type: =item
#: dh_installlogcheck:33
msgid "debian/I<package>.logcheck.ignore.server"
msgstr ""

#. type: =item
#: dh_installlogcheck:35
msgid "debian/I<package>.logcheck.ignore.paranoid"
msgstr ""

#. type: textblock
#: dh_installlogcheck:37
msgid ""
"Each of these files, if present, are installed into corresponding "
"subdirectories of F<etc/logcheck/> in package build directories."
msgstr ""

#. type: textblock
#: dh_installlogcheck:48
msgid ""
"Look for files named F<debian/package.name.logcheck.*> and install them into "
"the corresponding subdirectories of F<etc/logcheck/>, but use the specified "
"name instead of that of the package."
msgstr ""

#. type: verbatim
#: dh_installlogcheck:84
#, no-wrap
msgid ""
"This program is a part of debhelper.\n"
"    \n"
msgstr ""

#. type: textblock
#: dh_installlogcheck:88
msgid "Jon Middleton <jjm@debian.org>"
msgstr ""

#. type: textblock
#: dh_installlogrotate:5
msgid "dh_installlogrotate - install logrotate config files"
msgstr ""

#. type: textblock
#: dh_installlogrotate:14
msgid "B<dh_installlogrotate> [S<I<debhelper options>>] [B<--name=>I<name>]"
msgstr ""

#. type: textblock
#: dh_installlogrotate:18
msgid ""
"B<dh_installlogrotate> is a debhelper program that is responsible for "
"installing logrotate config files into F<etc/logrotate.d> in package build "
"directories.  Files named F<debian/package.logrotate> are installed."
msgstr ""

#. type: textblock
#: dh_installlogrotate:28
msgid ""
"Look for files named F<debian/package.name.logrotate> and install them as "
"F<etc/logrotate.d/name>, instead of using the usual files and installing "
"them as the package name."
msgstr ""

#. type: textblock
#: dh_installman:5
msgid "dh_installman - install man pages into package build directories"
msgstr ""

#. type: textblock
#: dh_installman:15
msgid "B<dh_installman> [S<I<debhelper options>>] [S<I<manpage> ...>]"
msgstr ""

#. type: textblock
#: dh_installman:19
msgid ""
"B<dh_installman> is a debhelper program that handles installing man pages "
"into the correct locations in package build directories. You tell it what "
"man pages go in your packages, and it figures out where to install them "
"based on the section field in their B<.TH> or B<.Dt> line. If you have a "
"properly formatted B<.TH> or B<.Dt> line, your man page will be installed "
"into the right directory, with the right name (this includes proper handling "
"of pages with a subsection, like B<3perl>, which are placed in F<man3>, and "
"given an extension of F<.3perl>). If your B<.TH> or B<.Dt> line is incorrect "
"or missing, the program may guess wrong based on the file extension."
msgstr ""

#. type: textblock
#: dh_installman:29
msgid ""
"It also supports translated man pages, by looking for extensions like "
"F<.ll.8> and F<.ll_LL.8>, or by use of the B<--language> switch."
msgstr ""

#. type: textblock
#: dh_installman:32
msgid ""
"If B<dh_installman> seems to install a man page into the wrong section or "
"with the wrong extension, this is because the man page has the wrong section "
"listed in its B<.TH> or B<.Dt> line. Edit the man page and correct the "
"section, and B<dh_installman> will follow suit. See L<man(7)> for details "
"about the B<.TH> section, and L<mdoc(7)> for the B<.Dt> section. If "
"B<dh_installman> seems to install a man page into a directory like "
"F</usr/share/man/pl/man1/>, that is because your program has a name like "
"F<foo.pl>, and B<dh_installman> assumes that means it is translated into "
"Polish. Use B<--language=C> to avoid this."
msgstr ""

#. type: textblock
#: dh_installman:42
msgid ""
"After the man page installation step, B<dh_installman> will check to see if "
"any of the man pages in the temporary directories of any of the packages it "
"is acting on contain F<.so> links. If so, it changes them to symlinks."
msgstr ""

#. type: textblock
#: dh_installman:46
msgid ""
"Also, B<dh_installman> will use man to guess the character encoding of each "
"manual page and convert it to UTF-8. If the guesswork fails for some reason, "
"you can override it using an encoding declaration. See L<manconv(1)> for "
"details."
msgstr ""

#. type: =item
#: dh_installman:55
msgid "debian/I<package>.manpages"
msgstr ""

#. type: textblock
#: dh_installman:57
msgid "Lists man pages to be installed."
msgstr ""

#. type: =item
#: dh_installman:70
msgid "B<--language=>I<ll>"
msgstr ""

#. type: textblock
#: dh_installman:72
msgid ""
"Use this to specify that the man pages being acted on are written in the "
"specified language."
msgstr ""

#. type: =item
#: dh_installman:75
msgid "I<manpage> ..."
msgstr ""

#. type: textblock
#: dh_installman:77
msgid ""
"Install these man pages into the first package acted on. (Or in all packages "
"if B<-A> is specified)."
msgstr ""

#. type: textblock
#: dh_installman:84
msgid ""
"An older version of this program, L<dh_installmanpages(1)>, is still used by "
"some packages, and so is still included in debhelper.  It is, however, "
"deprecated, due to its counterintuitive and inconsistent interface. Use this "
"program instead."
msgstr ""

#. type: textblock
#: dh_installmanpages:5
msgid "dh_installmanpages - old-style man page installer (deprecated)"
msgstr ""

#. type: textblock
#: dh_installmanpages:15
msgid "B<dh_installmanpages> [S<I<debhelper options>>] [S<I<file> ...>]"
msgstr ""

#. type: textblock
#: dh_installmanpages:19
msgid ""
"B<dh_installmanpages> is a debhelper program that is responsible for "
"automatically installing man pages into F<usr/share/man/> in package build "
"directories."
msgstr ""

#. type: textblock
#: dh_installmanpages:23
msgid ""
"This is a DWIM-style program, with an interface unlike the rest of "
"debhelper. It is deprecated, and you are encouraged to use "
"L<dh_installman(1)> instead."
msgstr ""

#. type: textblock
#: dh_installmanpages:27
msgid ""
"B<dh_installmanpages> scans the current directory and all subdirectories for "
"filenames that look like man pages. (Note that only real files are looked "
"at; symlinks are ignored.) It uses L<file(1)> to verify that the files are "
"in the correct format. Then, based on the files' extensions, it installs "
"them into the correct man directory."
msgstr ""

#. type: textblock
#: dh_installmanpages:33
msgid ""
"All filenames specified as parameters will be skipped by "
"B<dh_installmanpages>.  This is useful if by default it installs some man "
"pages that you do not want to be installed."
msgstr ""

#. type: textblock
#: dh_installmanpages:37
msgid ""
"After the man page installation step, B<dh_installmanpages> will check to "
"see if any of the man pages are F<.so> links. If so, it changes them to "
"symlinks."
msgstr ""

#. type: textblock
#: dh_installmanpages:46
msgid ""
"Do not install these files as man pages, even if they look like valid man "
"pages."
msgstr ""

#. type: =head1
#: dh_installmanpages:51
msgid "BUGS"
msgstr ""

#. type: textblock
#: dh_installmanpages:53
msgid ""
"B<dh_installmanpages> will install the man pages it finds into B<all> "
"packages you tell it to act on, since it can't tell what package the man "
"pages belong in. This is almost never what you really want (use B<-p> to "
"work around this, or use the much better L<dh_installman(1)> program "
"instead)."
msgstr ""

#. type: textblock
#: dh_installmanpages:58
msgid "Files ending in F<.man> will be ignored."
msgstr ""

#. type: textblock
#: dh_installmanpages:60
msgid ""
"Files specified as parameters that contain spaces in their filenames will "
"not be processed properly."
msgstr ""

#. type: textblock
#: dh_installmenu:5
msgid "dh_installmenu - install Debian menu files into package build directories"
msgstr ""

#. type: textblock
#: dh_installmenu:14
msgid "B<dh_installmenu> [S<B<debhelper options>>] [B<-n>]"
msgstr ""

#. type: textblock
#: dh_installmenu:18
msgid ""
"B<dh_installmenu> is a debhelper program that is responsible for installing "
"files used by the Debian B<menu> package into package build directories."
msgstr ""

#. type: textblock
#: dh_installmenu:21
msgid ""
"It also automatically generates the F<postinst> and F<postrm> commands "
"needed to interface with the Debian B<menu> package. These commands are "
"inserted into the maintainer scripts by L<dh_installdeb(1)>."
msgstr ""

#. type: =item
#: dh_installmenu:29
msgid "debian/I<package>.menu"
msgstr ""

#. type: textblock
#: dh_installmenu:31
msgid ""
"Debian menu files, installed into usr/share/menu/I<package> in the package "
"build directory. See L<menufile(5)> for its format."
msgstr ""

#. type: =item
#: dh_installmenu:34
msgid "debian/I<package>.menu-method"
msgstr ""

#. type: textblock
#: dh_installmenu:36
msgid ""
"Debian menu method files, installed into etc/menu-methods/I<package> in the "
"package build directory."
msgstr ""

#. type: textblock
#: dh_installmenu:47 dh_makeshlibs:79
msgid "Do not modify F<postinst>/F<postrm> scripts."
msgstr ""

#. type: textblock
#: dh_installmenu:91
msgid "L<debhelper(7)> L<update-menus(1)> L<menufile(5)>"
msgstr ""

#. type: textblock
#: dh_installmime:5
msgid "dh_installmime - install mime files into package build directories"
msgstr ""

#. type: textblock
#: dh_installmime:14
msgid "B<dh_installmime> [S<I<debhelper options>>]"
msgstr ""

#. type: textblock
#: dh_installmime:18
msgid ""
"B<dh_installmime> is a debhelper program that is responsible for installing "
"mime files into package build directories."
msgstr ""

#. type: =item
#: dh_installmime:25
msgid "debian/I<package>.mime"
msgstr ""

#. type: textblock
#: dh_installmime:27
msgid ""
"Installed into usr/lib/mime/packages/I<package> in the package build "
"directory."
msgstr ""

#. type: =item
#: dh_installmime:30
msgid "debian/I<package>.sharedmimeinfo"
msgstr ""

#. type: textblock
#: dh_installmime:32
msgid ""
"Installed into /usr/share/mime/packages/I<package>.xml in the package build "
"directory."
msgstr ""

#. type: textblock
#: dh_installmodules:5
msgid "dh_installmodules - register kernel modules"
msgstr ""

#. type: textblock
#: dh_installmodules:15
msgid "B<dh_installmodules> [S<I<debhelper options>>] [B<-n>] [B<--name=>I<name>]"
msgstr ""

#. type: textblock
#: dh_installmodules:19
msgid ""
"B<dh_installmodules> is a debhelper program that is responsible for "
"registering kernel modules."
msgstr ""

#. type: textblock
#: dh_installmodules:22
msgid ""
"Kernel modules are searched for in the package build directory and if found, "
"F<preinst>, F<postinst> and F<postrm> commands are automatically generated "
"to run B<depmod> and register the modules when the package is installed.  "
"These commands are inserted into the maintainer scripts by "
"L<dh_installdeb(1)>."
msgstr ""

#. type: =item
#: dh_installmodules:32
msgid "debian/I<package>.modprobe"
msgstr ""

#. type: textblock
#: dh_installmodules:34
msgid "Installed to etc/modprobe.d/I<package>.conf in the package build directory."
msgstr ""

#. type: textblock
#: dh_installmodules:44
msgid "Do not modify F<preinst>/F<postinst>/F<postrm> scripts."
msgstr ""

#. type: textblock
#: dh_installmodules:48
msgid ""
"When this parameter is used, B<dh_installmodules> looks for and installs "
"files named debian/I<package>.I<name>.modprobe instead of the usual "
"debian/I<package>.modprobe"
msgstr ""

#. type: textblock
#: dh_installpam:5
msgid "dh_installpam - install pam support files"
msgstr ""

#. type: textblock
#: dh_installpam:14
msgid "B<dh_installpam> [S<I<debhelper options>>] [B<--name=>I<name>]"
msgstr ""

#. type: textblock
#: dh_installpam:18
msgid ""
"B<dh_installpam> is a debhelper program that is responsible for installing "
"files used by PAM into package build directories."
msgstr ""

#. type: =item
#: dh_installpam:25
msgid "debian/I<package>.pam"
msgstr ""

#. type: textblock
#: dh_installpam:27
msgid "Installed into etc/pam.d/I<package> in the package build directory."
msgstr ""

#. type: textblock
#: dh_installpam:37
msgid ""
"Look for files named debian/I<package>.I<name>.pam and install them as "
"etc/pam.d/I<name>, instead of using the usual files and installing them "
"using the package name."
msgstr ""

#. type: textblock
#: dh_installppp:5
msgid "dh_installppp - install ppp ip-up and ip-down files"
msgstr ""

#. type: textblock
#: dh_installppp:14
msgid "B<dh_installppp> [S<I<debhelper options>>] [B<--name=>I<name>]"
msgstr ""

#. type: textblock
#: dh_installppp:18
msgid ""
"B<dh_installppp> is a debhelper program that is responsible for installing "
"ppp ip-up and ip-down scripts into package build directories."
msgstr ""

#. type: =item
#: dh_installppp:25
msgid "debian/I<package>.ppp.ip-up"
msgstr ""

#. type: textblock
#: dh_installppp:27
msgid "Installed into etc/ppp/ip-up.d/I<package> in the package build directory."
msgstr ""

#. type: =item
#: dh_installppp:29
msgid "debian/I<package>.ppp.ip-down"
msgstr ""

#. type: textblock
#: dh_installppp:31
msgid "Installed into etc/ppp/ip-down.d/I<package> in the package build directory."
msgstr ""

#. type: textblock
#: dh_installppp:41
msgid ""
"Look for files named F<debian/package.name.ppp.ip-*> and install them as "
"F<etc/ppp/ip-*/name>, instead of using the usual files and installing them "
"as the package name."
msgstr ""

#. type: textblock
#: dh_installudev:5
msgid "dh_installudev - install udev rules files"
msgstr ""

#. type: textblock
#: dh_installudev:15
msgid ""
"B<dh_installudev> [S<I<debhelper options>>] [B<-n>] [B<--name=>I<name>] "
"[B<--priority=>I<priority>]"
msgstr ""

#. type: textblock
#: dh_installudev:19
msgid ""
"B<dh_installudev> is a debhelper program that is responsible for installing "
"B<udev> rules files."
msgstr ""

#. type: textblock
#: dh_installudev:22
msgid ""
"Code is added to the F<preinst> and F<postinst> to handle the upgrade from "
"the old B<udev> rules file location."
msgstr ""

#. type: =item
#: dh_installudev:29
msgid "debian/I<package>.udev"
msgstr ""

#. type: textblock
#: dh_installudev:31
msgid "Installed into F<lib/udev/rules.d/> in the package build directory."
msgstr ""

#. type: textblock
#: dh_installudev:41
msgid ""
"When this parameter is used, B<dh_installudev> looks for and installs files "
"named debian/I<package>.I<name>.udev instead of the usual "
"debian/I<package>.udev."
msgstr ""

#. type: =item
#: dh_installudev:45
msgid "B<--priority=>I<priority>"
msgstr ""

#. type: textblock
#: dh_installudev:47
msgid "Sets the priority the file. Default is 40."
msgstr ""

#. type: textblock
#: dh_installudev:51
msgid "Do not modify F<preinst>/F<postinst> scripts."
msgstr ""

#. type: textblock
#: dh_installwm:5
msgid "dh_installwm - register a window manager"
msgstr ""

#. type: textblock
#: dh_installwm:14
msgid ""
"B<dh_installwm> [S<I<debhelper options>>] [B<-n>] [B<--priority=>I<n>] "
"[S<I<wm> ...>]"
msgstr ""

#. type: textblock
#: dh_installwm:18
msgid ""
"B<dh_installwm> is a debhelper program that is responsible for generating "
"the F<postinst> and F<prerm> commands that register a window manager with "
"L<update-alternatives(8)>. The window manager's man page is also registered "
"as a slave symlink (in v6 mode and up), if it is found in "
"F<usr/share/man/man1/> in the package build directory."
msgstr ""

#. type: =item
#: dh_installwm:28
msgid "debian/I<package>.wm"
msgstr ""

#. type: textblock
#: dh_installwm:30
msgid "List window manager programs to register."
msgstr ""

#. type: textblock
#: dh_installwm:40
msgid ""
"Set the priority of the window manager. Default is 20, which is too low for "
"most window managers; see the Debian Policy document for instructions on "
"calculating the correct value."
msgstr ""

#. type: textblock
#: dh_installwm:46
msgid "Do not modify F<postinst>/F<prerm> scripts. Turns this command into a no-op."
msgstr ""

#. type: =item
#: dh_installwm:48
msgid "I<wm> ..."
msgstr ""

#. type: textblock
#: dh_installwm:50
msgid "Window manager programs to register."
msgstr ""

#. type: textblock
#: dh_installxfonts:5
msgid "dh_installxfonts - register X fonts"
msgstr ""

#. type: textblock
#: dh_installxfonts:14
msgid "B<dh_installxfonts> [S<I<debhelper options>>]"
msgstr ""

#. type: textblock
#: dh_installxfonts:18
msgid ""
"B<dh_installxfonts> is a debhelper program that is responsible for "
"registering X fonts, so their corresponding F<fonts.dir>, F<fonts.alias>, "
"and F<fonts.scale> be rebuilt properly at install time."
msgstr ""

#. type: textblock
#: dh_installxfonts:22
msgid ""
"Before calling this program, you should have installed any X fonts provided "
"by your package into the appropriate location in the package build "
"directory, and if you have F<fonts.alias> or F<fonts.scale> files, you "
"should install them into the correct location under F<etc/X11/fonts> in your "
"package build directory."
msgstr ""

#. type: textblock
#: dh_installxfonts:28
msgid ""
"Your package should depend on B<xfonts-utils> so that the "
"B<update-fonts->I<*> commands are available. (This program adds that "
"dependency to B<${misc:Depends}>.)"
msgstr ""

#. type: textblock
#: dh_installxfonts:32
msgid ""
"This program automatically generates the F<postinst> and F<postrm> commands "
"needed to register X fonts. These commands are inserted into the maintainer "
"scripts by B<dh_installdeb>. See L<dh_installdeb(1)> for an explanation of "
"how this works."
msgstr ""

#. type: textblock
#: dh_installxfonts:39
msgid ""
"See L<update-fonts-alias(8)>, L<update-fonts-scale(8)>, and "
"L<update-fonts-dir(8)> for more information about X font installation."
msgstr ""

#. type: textblock
#: dh_installxfonts:42
msgid ""
"See Debian policy, section 11.8.5. for details about doing fonts the Debian "
"way."
msgstr ""

#. type: textblock
#: dh_link:5
msgid "dh_link - create symlinks in package build directories"
msgstr ""

#. type: textblock
#: dh_link:15
msgid ""
"B<dh_link> [S<I<debhelper options>>] [B<-A>] [B<-X>I<item>] [S<I<source "
"destination> ...>]"
msgstr ""

#. type: textblock
#: dh_link:19
msgid ""
"B<dh_link> is a debhelper program that creates symlinks in package build "
"directories."
msgstr ""

#. type: textblock
#: dh_link:22
msgid ""
"B<dh_link> accepts a list of pairs of source and destination files. The "
"source files are the already existing files that will be symlinked from. The "
"destination files are the symlinks that will be created. There B<must> be an "
"equal number of source and destination files specified."
msgstr ""

#. type: textblock
#: dh_link:27
msgid ""
"Be sure you B<do> specify the full filename to both the source and "
"destination files (unlike you would do if you were using something like "
"L<ln(1)>)."
msgstr ""

#. type: textblock
#: dh_link:31
msgid ""
"B<dh_link> will generate symlinks that comply with Debian policy - absolute "
"when policy says they should be absolute, and relative links with as short a "
"path as possible. It will also create any subdirectories it needs to to put "
"the symlinks in."
msgstr ""

#. type: textblock
#: dh_link:36
msgid "Any pre-existing destination files will be replaced with symlinks."
msgstr ""

#. type: textblock
#: dh_link:38
msgid ""
"B<dh_link> also scans the package build tree for existing symlinks which do "
"not conform to Debian policy, and corrects them (v4 or later)."
msgstr ""

#. type: =item
#: dh_link:45
msgid "debian/I<package>.links"
msgstr ""

#. type: textblock
#: dh_link:47
msgid ""
"Lists pairs of source and destination files to be symlinked. Each pair "
"should be put on its own line, with the source and destination separated by "
"whitespace."
msgstr ""

#. type: textblock
#: dh_link:59
msgid ""
"Create any links specified by command line parameters in ALL packages acted "
"on, not just the first."
msgstr ""

#. type: textblock
#: dh_link:64
msgid ""
"Exclude symlinks that contain I<item> anywhere in their filename from being "
"corrected to comply with Debian policy."
msgstr ""

#. type: =item
#: dh_link:67
msgid "I<source destination> ..."
msgstr ""

#. type: textblock
#: dh_link:69
msgid ""
"Create a file named I<destination> as a link to a file named I<source>. Do "
"this in the package build directory of the first package acted on.  (Or in "
"all packages if B<-A> is specified.)"
msgstr ""

#. type: verbatim
#: dh_link:77
#, no-wrap
msgid ""
" dh_link usr/share/man/man1/foo.1 usr/share/man/man1/bar.1\n"
"\n"
msgstr ""

#. type: textblock
#: dh_link:79
msgid "Make F<bar.1> be a symlink to F<foo.1>"
msgstr ""

#. type: verbatim
#: dh_link:81
#, no-wrap
msgid ""
" dh_link var/lib/foo usr/lib/foo \\\n"
"   usr/share/man/man1/foo.1 usr/share/man/man1/bar.1\n"
"\n"
msgstr ""

#. type: textblock
#: dh_link:84
msgid ""
"Make F</usr/lib/foo/> be a link to F</var/lib/foo/>, and F<bar.1> be a "
"symlink to the F<foo.1>"
msgstr ""

#. type: textblock
#: dh_lintian:5
msgid "dh_lintian - install lintian override files into package build directories"
msgstr ""

#. type: textblock
#: dh_lintian:14
msgid "B<dh_lintian> [S<I<debhelper options>>]"
msgstr ""

#. type: textblock
#: dh_lintian:18
msgid ""
"B<dh_lintian> is a debhelper program that is responsible for installing "
"override files used by lintian into package build directories."
msgstr ""

#. type: =item
#: dh_lintian:25
msgid "debian/I<package>.lintian-overrides"
msgstr ""

#. type: textblock
#: dh_lintian:27
msgid ""
"Installed into usr/share/lintian/overrides/I<package> in the package build "
"directory. This file is used to suppress erroneous lintian diagnostics."
msgstr ""

#. type: =item
#: dh_lintian:31
msgid "F<debian/source/lintian-overrides>"
msgstr ""

#. type: textblock
#: dh_lintian:33
msgid ""
"These files are not installed, but will be scanned by lintian to provide "
"overrides for the source package."
msgstr ""

#. type: textblock
#: dh_lintian:65
msgid "L<lintian(1)>"
msgstr ""

#. type: textblock
#: dh_lintian:69
msgid "Steve Robbins <smr@debian.org>"
msgstr ""

#. type: textblock
#: dh_listpackages:5
msgid "dh_listpackages - list binary packages debhelper will act on"
msgstr ""

#. type: textblock
#: dh_listpackages:14
msgid "B<dh_listpackages> [S<I<debhelper options>>]"
msgstr ""

#. type: textblock
#: dh_listpackages:18
msgid ""
"B<dh_listpackages> is a debhelper program that outputs a list of all binary "
"packages debhelper commands will act on. If you pass it some options, it "
"will change the list to match the packages other debhelper commands would "
"act on if passed the same options."
msgstr ""

#. type: textblock
#: dh_makeshlibs:5
msgid "dh_makeshlibs - automatically create shlibs file and call dpkg-gensymbols"
msgstr ""

#. type: textblock
#: dh_makeshlibs:14
msgid ""
"B<dh_makeshlibs> [S<I<debhelper options>>] [B<-m>I<major>] "
"[B<-V>I<[dependencies]>] [B<-n>] [B<-X>I<item>] [S<B<--> I<params>>]"
msgstr ""

#. type: textblock
#: dh_makeshlibs:18
msgid ""
"B<dh_makeshlibs> is a debhelper program that automatically scans for shared "
"libraries, and generates a shlibs file for the libraries it finds."
msgstr ""

#. type: textblock
#: dh_makeshlibs:21
msgid ""
"It also adds a call to ldconfig in the F<postinst> and F<postrm> scripts (in "
"v3 mode and above only) to any packages in which it finds shared libraries."
msgstr ""

#. type: textblock
#: dh_makeshlibs:24
msgid ""
"Packages that support multiarch are detected, and a Pre-Dependency on "
"multiarch-support is set in ${misc:Pre-Depends} ; you should make sure to "
"put that token into an appropriate place in your debian/control file for "
"packages supporting multiarch."
msgstr ""

#. type: =item
#: dh_makeshlibs:33
msgid "debian/I<package>.symbols"
msgstr ""

#. type: =item
#: dh_makeshlibs:35
msgid "debian/I<package>.symbols.I<arch>"
msgstr ""

#. type: textblock
#: dh_makeshlibs:37
msgid ""
"These symbols files, if present, are passed to L<dpkg-gensymbols(1)> to be "
"processed and installed. Use the I<arch> specific names if you need to "
"provide different symbols files for different architectures."
msgstr ""

#. type: =item
#: dh_makeshlibs:47
msgid "B<-m>I<major>, B<--major=>I<major>"
msgstr ""

#. type: textblock
#: dh_makeshlibs:49
msgid ""
"Instead of trying to guess the major number of the library with objdump, use "
"the major number specified after the -m parameter. This is much less useful "
"than it used to be, back in the bad old days when this program looked at "
"library filenames rather than using objdump."
msgstr ""

#. type: =item
#: dh_makeshlibs:54
msgid "B<-V>, B<-V>I<dependencies>"
msgstr ""

#. type: =item
#: dh_makeshlibs:56
msgid "B<--version-info>, B<--version-info=>I<dependencies>"
msgstr ""

#. type: textblock
#: dh_makeshlibs:58
msgid ""
"By default, the shlibs file generated by this program does not make packages "
"depend on any particular version of the package containing the shared "
"library. It may be necessary for you to add some version dependency "
"information to the shlibs file. If B<-V> is specified with no dependency "
"information, the current upstream version of the package is plugged into a "
"dependency that looks like \"I<packagename> B<(E<gt>>= "
"I<packageversion>B<)>\". Note that in debhelper compatibility levels before "
"v4, the Debian part of the package version number is also included. If B<-V> "
"is specified with parameters, the parameters can be used to specify the "
"exact dependency information needed (be sure to include the package name)."
msgstr ""

#. type: textblock
#: dh_makeshlibs:69
msgid ""
"Beware of using B<-V> without any parameters; this is a conservative setting "
"that always ensures that other packages' shared library dependencies are at "
"least as tight as they need to be (unless your library is prone to changing "
"ABI without updating the upstream version number), so that if the maintainer "
"screws up then they won't break. The flip side is that packages might end up "
"with dependencies that are too tight and so find it harder to be upgraded."
msgstr ""

#. type: textblock
#: dh_makeshlibs:83
msgid ""
"Exclude files that contain I<item> anywhere in their filename or directory "
"from being treated as shared libraries."
msgstr ""

#. type: =item
#: dh_makeshlibs:86
msgid "B<--add-udeb=>I<udeb>"
msgstr ""

#. type: textblock
#: dh_makeshlibs:88
msgid ""
"Create an additional line for udebs in the shlibs file and use I<udeb> as "
"the package name for udebs to depend on instead of the regular library "
"package."
msgstr ""

#. type: textblock
#: dh_makeshlibs:93
msgid "Pass I<params> to L<dpkg-gensymbols(1)>."
msgstr ""

#. type: =item
#: dh_makeshlibs:101
msgid "B<dh_makeshlibs>"
msgstr ""

#. type: verbatim
#: dh_makeshlibs:103
#, no-wrap
msgid ""
"Assuming this is a package named F<libfoobar1>, generates a shlibs file "
"that\n"
"looks something like:\n"
" libfoobar 1 libfoobar1\n"
"\n"
msgstr ""

#. type: =item
#: dh_makeshlibs:107
msgid "B<dh_makeshlibs -V>"
msgstr ""

#. type: verbatim
#: dh_makeshlibs:109
#, no-wrap
msgid ""
"Assuming the current version of the package is 1.1-3, generates a shlibs\n"
"file that looks something like:\n"
" libfoobar 1 libfoobar1 (>= 1.1)\n"
"\n"
msgstr ""

#. type: =item
#: dh_makeshlibs:113
msgid "B<dh_makeshlibs -V 'libfoobar1 (E<gt>= 1.0)'>"
msgstr ""

#. type: verbatim
#: dh_makeshlibs:115
#, no-wrap
msgid ""
"Generates a shlibs file that looks something like:\n"
"  libfoobar 1 libfoobar1 (>= 1.0)\n"
"\n"
msgstr ""

#. type: textblock
#: dh_md5sums:5
msgid "dh_md5sums - generate DEBIAN/md5sums file"
msgstr ""

#. type: textblock
#: dh_md5sums:15
msgid ""
"B<dh_md5sums> [S<I<debhelper options>>] [B<-x>] [B<-X>I<item>] "
"[B<--include-conffiles>]"
msgstr ""

#. type: textblock
#: dh_md5sums:19
msgid ""
"B<dh_md5sums> is a debhelper program that is responsible for generating a "
"F<DEBIAN/md5sums> file, which lists the md5sums of each file in the "
"package.  These files are used by the B<debsums> package."
msgstr ""

#. type: textblock
#: dh_md5sums:23
msgid ""
"All files in F<DEBIAN/> are omitted from the F<md5sums> file, as are all "
"conffiles (unless you use the B<--include-conffiles> switch)."
msgstr ""

#. type: textblock
#: dh_md5sums:26
msgid "The md5sums file is installed with proper permissions and ownerships."
msgstr ""

#. type: =item
#: dh_md5sums:32
msgid "B<-x>, B<--include-conffiles>"
msgstr ""

#. type: textblock
#: dh_md5sums:34
msgid ""
"Include conffiles in the md5sums list. Note that this information is "
"redundant since it is included elsewhere in Debian packages."
msgstr ""

#. type: textblock
#: dh_md5sums:39
msgid ""
"Exclude files that contain I<item> anywhere in their filename from being "
"listed in the md5sums file."
msgstr ""

#. type: textblock
#: dh_movefiles:5
msgid "dh_movefiles - move files out of debian/tmp into subpackages"
msgstr ""

#. type: textblock
#: dh_movefiles:14
msgid ""
"B<dh_movefiles> [S<I<debhelper options>>] [B<--sourcedir=>I<dir>] "
"[B<-X>I<item>] [S<I<file> ...>]"
msgstr ""

#. type: textblock
#: dh_movefiles:18
msgid ""
"B<dh_movefiles> is a debhelper program that is responsible for moving files "
"out of F<debian/tmp> or some other directory and into other package build "
"directories. This may be useful if your package has a F<Makefile> that "
"installs everything into F<debian/tmp>, and you need to break that up into "
"subpackages."
msgstr ""

#. type: textblock
#: dh_movefiles:23
msgid ""
"Note: B<dh_install> is a much better program, and you are recommended to use "
"it instead of B<dh_movefiles>."
msgstr ""

#. type: =item
#: dh_movefiles:30
msgid "debian/I<package>.files"
msgstr ""

#. type: textblock
#: dh_movefiles:32
msgid ""
"Lists the files to be moved into a package, separated by whitespace. The "
"filenames listed should be relative to F<debian/tmp/>. You can also list "
"directory names, and the whole directory will be moved."
msgstr ""

#. type: textblock
#: dh_movefiles:44
msgid ""
"Instead of moving files out of F<debian/tmp> (the default), this option "
"makes it move files out of some other directory. Since the entire contents "
"of the sourcedir is moved, specifying something like B<--sourcedir=/> is "
"very unsafe, so to prevent mistakes, the sourcedir must be a relative "
"filename; it cannot begin with a `B</>'."
msgstr ""

#. type: =item
#: dh_movefiles:50
msgid "B<-Xitem>, B<--exclude=item>"
msgstr ""

#. type: textblock
#: dh_movefiles:52
msgid ""
"Exclude files that contain B<item> anywhere in their filename from being "
"installed."
msgstr ""

#. type: textblock
#: dh_movefiles:57
msgid ""
"Lists files to move. The filenames listed should be relative to "
"F<debian/tmp/>. You can also list directory names, and the whole directory "
"will be moved. It is an error to list files here unless you use B<-p>, "
"B<-i>, or B<-a> to tell B<dh_movefiles> which subpackage to put them in."
msgstr ""

#. type: textblock
#: dh_movefiles:66
msgid ""
"Note that files are always moved out of F<debian/tmp> by default (even if "
"you have instructed debhelper to use a compatibility level higher than one, "
"which does not otherwise use debian/tmp for anything at all). The idea "
"behind this is that the package that is being built can be told to install "
"into F<debian/tmp>, and then files can be moved by B<dh_movefiles> from that "
"directory. Any files or directories that remain are ignored, and get deleted "
"by B<dh_clean> later."
msgstr ""

#. type: textblock
#: dh_perl:5
msgid "dh_perl - calculates Perl dependencies and cleans up after MakeMaker"
msgstr ""

#. type: textblock
#: dh_perl:16
msgid "B<dh_perl> [S<I<debhelper options>>] [B<-d>] [S<I<library dirs> ...>]"
msgstr ""

#. type: textblock
#: dh_perl:20
msgid ""
"B<dh_perl> is a debhelper program that is responsible for generating the "
"B<${perl:Depends}> substitutions and adding them to substvars files."
msgstr ""

#. type: textblock
#: dh_perl:23
msgid ""
"The program will look at Perl scripts and modules in your package, and will "
"use this information to generate a dependency on B<perl> or B<perlapi>. The "
"dependency will be substituted into your package's F<control> file wherever "
"you place the token B<${perl:Depends}>."
msgstr ""

#. type: textblock
#: dh_perl:28
msgid ""
"B<dh_perl> also cleans up empty directories that MakeMaker can generate when "
"installing Perl modules."
msgstr ""

#. type: =item
#: dh_perl:35
msgid "B<-d>"
msgstr ""

#. type: textblock
#: dh_perl:37
msgid ""
"In some specific cases you may want to depend on B<perl-base> rather than "
"the full B<perl> package. If so, you can pass the -d option to make "
"B<dh_perl> generate a dependency on the correct base package. This is only "
"necessary for some packages that are included in the base system."
msgstr ""

#. type: textblock
#: dh_perl:42
msgid ""
"Note that this flag may cause no dependency on B<perl-base> to be generated "
"at all. B<perl-base> is Essential, so its dependency can be left out, unless "
"a versioned dependency is needed."
msgstr ""

#. type: =item
#: dh_perl:46
msgid "B<-V>"
msgstr ""

#. type: textblock
#: dh_perl:48
msgid ""
"By default, scripts and architecture independent modules don't depend on any "
"specific version of B<perl>. The B<-V> option causes the current version of "
"the B<perl> (or B<perl-base> with B<-d>) package to be specified."
msgstr ""

#. type: =item
#: dh_perl:52
msgid "I<library dirs>"
msgstr ""

#. type: textblock
#: dh_perl:54
msgid ""
"If your package installs Perl modules in non-standard directories, you can "
"make B<dh_perl> check those directories by passing their names on the "
"command line. It will only check the F<vendorlib> and F<vendorarch> "
"directories by default."
msgstr ""

#. type: textblock
#: dh_perl:63
msgid "Debian policy, version 3.8.3"
msgstr ""

#. type: textblock
#: dh_perl:65
msgid "Perl policy, version 1.20"
msgstr ""

#. type: textblock
#: dh_perl:156
msgid "Brendan O'Dea <bod@debian.org>"
msgstr ""

#. type: textblock
#: dh_prep:5
msgid "dh_prep - perform cleanups in preparation for building a binary package"
msgstr ""

#. type: textblock
#: dh_prep:14
msgid "B<dh_prep> [S<I<debhelper options>>] [B<-X>I<item>]"
msgstr ""

#. type: textblock
#: dh_prep:18
msgid ""
"B<dh_prep> is a debhelper program that performs some file cleanups in "
"preparation for building a binary package. (This is what B<dh_clean -k> used "
"to do.) It removes the package build directories, F<debian/tmp>, and some "
"temp files that are generated when building a binary package."
msgstr ""

#. type: textblock
#: dh_prep:23
msgid ""
"It is typically run at the top of the B<binary-arch> and B<binary-indep> "
"targets, or at the top of a target such as install that they depend on."
msgstr ""

#. type: textblock
#: dh_prep:32
msgid ""
"Exclude files that contain F<item> anywhere in their filename from being "
"deleted, even if they would normally be deleted. You may use this option "
"multiple times to build up a list of things to exclude."
msgstr ""

#. type: textblock
#: dh_scrollkeeper:5
msgid "dh_scrollkeeper - deprecated no-op"
msgstr ""

#. type: textblock
#: dh_scrollkeeper:14
msgid "B<dh_scrollkeeper> [S<I<debhelper options>>] [B<-n>] [S<I<directory>>]"
msgstr ""

#. type: textblock
#: dh_scrollkeeper:18
msgid ""
"B<dh_scrollkeeper> was a debhelper program that handled registering OMF "
"files for ScrollKeeper. However, it no longer does anything, and is now "
"deprecated."
msgstr ""

#. type: textblock
#: dh_shlibdeps:5
msgid "dh_shlibdeps - calculate shared library dependencies"
msgstr ""

#. type: textblock
#: dh_shlibdeps:15
msgid ""
"B<dh_shlibdeps> [S<I<debhelper options>>] [B<-L>I<package>] "
"[B<-l>I<directory>] [B<-X>I<item>] [S<B<--> I<params>>]"
msgstr ""

#. type: textblock
#: dh_shlibdeps:19
msgid ""
"B<dh_shlibdeps> is a debhelper program that is responsible for calculating "
"shared library dependencies for packages."
msgstr ""

#. type: textblock
#: dh_shlibdeps:22
msgid ""
"This program is merely a wrapper around L<dpkg-shlibdeps(1)> that calls it "
"once for each package listed in the F<control> file, passing it a list of "
"ELF executables and shared libraries it has found."
msgstr ""

#. type: textblock
#: dh_shlibdeps:32
msgid ""
"Exclude files that contain F<item> anywhere in their filename from being "
"passed to B<dpkg-shlibdeps>. This will make their dependencies be ignored.  "
"This may be useful in some situations, but use it with caution. This option "
"may be used more than once to exclude more than one thing."
msgstr ""

#. type: textblock
#: dh_shlibdeps:39
msgid "Pass I<params> to L<dpkg-shlibdeps(1)>."
msgstr ""

#. type: =item
#: dh_shlibdeps:41
msgid "B<-u>I<params>, B<--dpkg-shlibdeps-params=>I<params>"
msgstr ""

#. type: textblock
#: dh_shlibdeps:43
msgid ""
"This is another way to pass I<params> to L<dpkg-shlibdeps(1)>.  It is "
"deprecated; use B<--> instead."
msgstr ""

#. type: =item
#: dh_shlibdeps:46
msgid "B<-l>I<directory>[B<:>I<directory> ...]"
msgstr ""

#. type: textblock
#: dh_shlibdeps:48
msgid ""
"With recent versions of B<dpkg-shlibdeps>, this option is generally not "
"needed."
msgstr ""

#. type: textblock
#: dh_shlibdeps:51
msgid ""
"It tells B<dpkg-shlibdeps> (via its B<-l> parameter), to look for private "
"package libraries in the specified directory (or directories -- separate "
"with colons). With recent versions of B<dpkg-shlibdeps>, this is mostly only "
"useful for packages that build multiple flavors of the same library, or "
"other situations where the library is installed into a directory not on the "
"regular library search path."
msgstr ""

#. type: =item
#: dh_shlibdeps:59
msgid "B<-L>I<package>, B<--libpackage=>I<package>"
msgstr ""

#. type: textblock
#: dh_shlibdeps:61
msgid ""
"With recent versions of B<dpkg-shlibdeps>, this option is generally not "
"needed, unless your package builds multiple flavors of the same library."
msgstr ""

#. type: textblock
#: dh_shlibdeps:64
msgid ""
"It tells B<dpkg-shlibdeps> (via its B<-S> parameter) to look first in the "
"package build directory for the specified package, when searching for "
"libraries, symbol files, and shlibs files."
msgstr ""

#. type: textblock
#: dh_shlibdeps:72
msgid ""
"Suppose that your source package produces libfoo1, libfoo-dev, and "
"libfoo-bin binary packages. libfoo-bin links against libfoo1, and should "
"depend on it. In your rules file, first run B<dh_makeshlibs>, then "
"B<dh_shlibdeps>:"
msgstr ""

#. type: verbatim
#: dh_shlibdeps:76
#, no-wrap
msgid ""
"\tdh_makeshlibs\n"
"\tdh_shlibdeps\n"
"\n"
msgstr ""

#. type: textblock
#: dh_shlibdeps:79
msgid ""
"This will have the effect of generating automatically a shlibs file for "
"libfoo1, and using that file and the libfoo1 library in the "
"F<debian/libfoo1/usr/lib> directory to calculate shared library dependency "
"information."
msgstr ""

#. type: textblock
#: dh_shlibdeps:84
msgid ""
"If a libbar1 package is also produced, that is an alternate build of libfoo, "
"and is installed into F</usr/lib/bar/>, you can make libfoo-bin depend on "
"libbar1 as follows:"
msgstr ""

#. type: verbatim
#: dh_shlibdeps:88
#, no-wrap
msgid ""
"\tdh_shlibdeps -Llibbar1 -l/usr/lib/bar\n"
"\t\n"
msgstr ""

#. type: textblock
#: dh_shlibdeps:154
msgid "L<debhelper(7)>, L<dpkg-shlibdeps(1)>"
msgstr ""

#. type: textblock
#: dh_strip:5
msgid "dh_strip - strip executables, shared libraries, and some static libraries"
msgstr ""

#. type: textblock
#: dh_strip:15
msgid ""
"B<dh_strip> [S<I<debhelper options>>] [B<-X>I<item>] "
"[B<--dbg-package=>I<package>] [B<--keep-debug>]"
msgstr ""

#. type: textblock
#: dh_strip:19
msgid ""
"B<dh_strip> is a debhelper program that is responsible for stripping "
"executables, shared libraries, and static libraries that are not used for "
"debugging."
msgstr ""

#. type: textblock
#: dh_strip:23
msgid ""
"This program examines your package build directories and works out what to "
"strip on its own. It uses L<file(1)> and file permissions and filenames to "
"figure out what files are shared libraries (F<*.so>), executable binaries, "
"and static (F<lib*.a>) and debugging libraries (F<lib*_g.a>, F<debug/*.so>), "
"and strips each as much as is possible. (Which is not at all for debugging "
"libraries.) In general it seems to make very good guesses, and will do the "
"right thing in almost all cases."
msgstr ""

#. type: textblock
#: dh_strip:31
msgid ""
"Since it is very hard to automatically guess if a file is a module, and hard "
"to determine how to strip a module, B<dh_strip> does not currently deal with "
"stripping binary modules such as F<.o> files."
msgstr ""

#. type: textblock
#: dh_strip:41
msgid ""
"Exclude files that contain I<item> anywhere in their filename from being "
"stripped. You may use this option multiple times to build up a list of "
"things to exclude."
msgstr ""

#. type: =item
#: dh_strip:45
msgid "B<--dbg-package=>I<package>"
msgstr ""

#. type: textblock
#: dh_strip:47
msgid ""
"Causes B<dh_strip> to save debug symbols stripped from the packages it acts "
"on as independent files in the package build directory of the specified "
"debugging package."
msgstr ""

#. type: textblock
#: dh_strip:51
msgid ""
"For example, if your packages are libfoo and foo and you want to include a "
"I<foo-dbg> package with debugging symbols, use B<dh_strip "
"--dbg-package=>I<foo-dbg>."
msgstr ""

#. type: textblock
#: dh_strip:54
msgid ""
"Note that this option behaves significantly different in debhelper "
"compatibility levels 4 and below. Instead of specifying the name of a debug "
"package to put symbols in, it specifies a package (or packages) which should "
"have separated debug symbols, and the separated symbols are placed in "
"packages with B<-dbg> added to their name."
msgstr ""

#. type: =item
#: dh_strip:60
msgid "B<-k>, B<--keep-debug>"
msgstr ""

#. type: textblock
#: dh_strip:62
msgid ""
"Debug symbols will be retained, but split into an independent file in "
"F<usr/lib/debug/> in the package build directory. B<--dbg-package> is easier "
"to use than this option, but this option is more flexible."
msgstr ""

#. type: textblock
#: dh_strip:70
msgid ""
"If the B<DEB_BUILD_OPTIONS> environment variable contains B<nostrip>, "
"nothing will be stripped, in accordance with Debian policy (section 10.1 "
"\"Binaries\")."
msgstr ""

#. type: textblock
#: dh_strip:76
msgid "Debian policy, version 3.0.1"
msgstr ""

#. type: textblock
#: dh_suidregister:5
msgid "dh_suidregister - suid registration program (deprecated)"
msgstr ""

#. type: textblock
#: dh_suidregister:9 dh_undocumented:14
msgid "Do not run!"
msgstr ""

#. type: textblock
#: dh_suidregister:13
msgid ""
"This program used to register suid and sgid files with L<suidregister(1)>, "
"but with the introduction of L<dpkg-statoverride(8)>, registration of files "
"in this way is unnecessary, and even harmful, so this program is deprecated "
"and should not be used."
msgstr ""

#. type: =head1
#: dh_suidregister:18
msgid "CONVERTING TO STATOVERRIDE"
msgstr ""

#. type: textblock
#: dh_suidregister:20
msgid ""
"Converting a package that uses this program to use the new statoverride "
"mechanism is easy. Just remove the call to B<dh_suidregister> from "
"F<debian/rules>, and add a versioned conflicts into your F<control> file, as "
"follows:"
msgstr ""

#. type: verbatim
#: dh_suidregister:25
#, no-wrap
msgid ""
"  Conflicts: suidmanager (<< 0.50)\n"
"\n"
msgstr ""

#. type: textblock
#: dh_suidregister:27
msgid ""
"The conflicts is only necessary if your package used to register things with "
"suidmanager; if it did not, you can just remove the call to this program "
"from your rules file."
msgstr ""

#. type: textblock
#: dh_testdir:5
msgid "dh_testdir - test directory before building Debian package"
msgstr ""

#. type: textblock
#: dh_testdir:14
msgid "B<dh_testdir> [S<I<debhelper options>>] [S<I<file> ...>]"
msgstr ""

#. type: textblock
#: dh_testdir:18
msgid ""
"B<dh_testdir> tries to make sure that you are in the correct directory when "
"building a Debian package. It makes sure that the file F<debian/control> "
"exists, as well as any other files you specify. If not, it exits with an "
"error."
msgstr ""

#. type: textblock
#: dh_testdir:29
msgid "Test for the existence of these files too."
msgstr ""

#. type: textblock
#: dh_testroot:5
msgid "dh_testroot - ensure that a package is built as root"
msgstr ""

#. type: textblock
#: dh_testroot:9
msgid "B<dh_testroot> [S<I<debhelper options>>]"
msgstr ""

#. type: textblock
#: dh_testroot:13
msgid ""
"B<dh_testroot> simply checks to see if you are root. If not, it exits with "
"an error. Debian packages must be built as root, though you can use "
"L<fakeroot(1)>"
msgstr ""

#. type: textblock
#: dh_undocumented:5
msgid "dh_undocumented - undocumented.7 symlink program (deprecated no-op)"
msgstr ""

#. type: textblock
#: dh_undocumented:18
msgid ""
"This program used to make symlinks to the F<undocumented.7> man page for man "
"pages not present in a package. Debian policy now frowns on use of the "
"F<undocumented.7> man page, and so this program does nothing, and should not "
"be used."
msgstr ""

#. type: textblock
#: dh_usrlocal:5
msgid "dh_usrlocal - migrate usr/local directories to maintainer scripts"
msgstr ""

#. type: textblock
#: dh_usrlocal:17
msgid "B<dh_usrlocal> [S<I<debhelper options>>] [B<-n>]"
msgstr ""

#. type: textblock
#: dh_usrlocal:21
msgid ""
"B<dh_usrlocal> is a debhelper program that can be used for building packages "
"that will provide a subdirectory in F</usr/local> when installed."
msgstr ""

#. type: textblock
#: dh_usrlocal:24
msgid ""
"It finds subdirectories of F<usr/local> in the package build directory, and "
"removes them, replacing them with maintainer script snippets (unless B<-n> "
"is used) to create the directories at install time, and remove them when the "
"package is removed, in a manner compliant with Debian policy. These snippets "
"are inserted into the maintainer scripts by B<dh_installdeb>. See "
"L<dh_installdeb(1)> for an explanation of debhelper maintainer script "
"snippets."
msgstr ""

#. type: textblock
#: dh_usrlocal:32
msgid ""
"If the directories found in the build tree have unusual owners, groups, or "
"permissions, then those values will be preserved in the directories made by "
"the F<postinst> script. However, as a special exception, if a directory is "
"owned by root.root, it will be treated as if it is owned by root.staff and "
"is mode 2775. This is useful, since that is the group and mode policy "
"recommends for directories in F</usr/local>."
msgstr ""

#. type: textblock
#: dh_usrlocal:57
msgid "Debian policy, version 2.2"
msgstr ""

#. type: textblock
#: dh_usrlocal:124
msgid "Andrew Stribblehill <ads@debian.org>"
msgstr ""
