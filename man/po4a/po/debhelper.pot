# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2018-12-24 14:26-0600\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: =head1
#: debhelper.pod:3 debhelper-obsolete-compat.pod:1 dh:3 dh_auto_build:3 dh_auto_clean:3 dh_auto_configure:3 dh_auto_install:3 dh_auto_test:3 dh_bugfiles:3 dh_builddeb:5 dh_clean:3 dh_compress:3 dh_dwz:3 dh_fixperms:3 dh_gconf:3 dh_gencontrol:3 dh_icons:3 dh_install:3 dh_installcatalogs:3 dh_installchangelogs:3 dh_installcron:3 dh_installdeb:3 dh_installdebconf:3 dh_installdirs:3 dh_installdocs:5 dh_installemacsen:3 dh_installexamples:5 dh_installifupdown:3 dh_installinfo:3 dh_installinit:3 dh_installinitramfs:3 dh_installlogcheck:3 dh_installlogrotate:3 dh_installman:3 dh_installmanpages:3 dh_installmenu:3 dh_installmime:3 dh_installmodules:3 dh_installpam:3 dh_installppp:3 dh_installudev:3 dh_installwm:3 dh_installxfonts:3 dh_link:3 dh_lintian:3 dh_listpackages:3 dh_makeshlibs:3 dh_md5sums:3 dh_movefiles:3 dh_perl:3 dh_prep:3 dh_shlibdeps:3 dh_strip:3 dh_testdir:3 dh_testroot:5 dh_usrlocal:5 dh_systemd_enable:3 dh_systemd_start:3
msgid "NAME"
msgstr ""

#. type: textblock
#: debhelper.pod:5
msgid "debhelper - the debhelper tool suite"
msgstr ""

#. type: =head1
#: debhelper.pod:7 debhelper-obsolete-compat.pod:5 dh:19 dh_auto_build:16 dh_auto_clean:16 dh_auto_configure:16 dh_auto_install:18 dh_auto_test:16 dh_bugfiles:15 dh_builddeb:17 dh_clean:15 dh_compress:17 dh_dwz:16 dh_fixperms:16 dh_gconf:15 dh_gencontrol:16 dh_icons:16 dh_install:15 dh_installcatalogs:17 dh_installchangelogs:15 dh_installcron:15 dh_installdeb:15 dh_installdebconf:15 dh_installdirs:15 dh_installdocs:17 dh_installemacsen:15 dh_installexamples:17 dh_installifupdown:15 dh_installinfo:15 dh_installinit:16 dh_installinitramfs:15 dh_installlogcheck:15 dh_installlogrotate:15 dh_installman:16 dh_installmanpages:16 dh_installmenu:15 dh_installmime:15 dh_installmodules:16 dh_installpam:15 dh_installppp:15 dh_installudev:15 dh_installwm:15 dh_installxfonts:15 dh_link:16 dh_lintian:15 dh_listpackages:15 dh_makeshlibs:15 dh_md5sums:16 dh_movefiles:15 dh_perl:17 dh_prep:15 dh_shlibdeps:17 dh_strip:16 dh_testdir:15 dh_testroot:9 dh_usrlocal:19 dh_systemd_enable:16 dh_systemd_start:17
msgid "SYNOPSIS"
msgstr ""

#. type: textblock
#: debhelper.pod:9
msgid ""
"B<dh_>I<*> [B<-v>] [B<-a>] [B<-i>] [B<--no-act>] [B<-p>I<package>] "
"[B<-N>I<package>] [B<-P>I<tmpdir>]"
msgstr ""

#. type: =head1
#: debhelper.pod:11 dh:23 dh_auto_build:20 dh_auto_clean:20 dh_auto_configure:20 dh_auto_install:22 dh_auto_test:20 dh_bugfiles:19 dh_builddeb:21 dh_clean:19 dh_compress:21 dh_dwz:20 dh_fixperms:20 dh_gconf:19 dh_gencontrol:20 dh_icons:20 dh_install:19 dh_installcatalogs:21 dh_installchangelogs:19 dh_installcron:19 dh_installdeb:19 dh_installdebconf:19 dh_installdirs:19 dh_installdocs:21 dh_installemacsen:19 dh_installexamples:21 dh_installifupdown:19 dh_installinfo:19 dh_installinit:20 dh_installinitramfs:19 dh_installlogcheck:19 dh_installlogrotate:19 dh_installman:20 dh_installmanpages:20 dh_installmenu:19 dh_installmime:19 dh_installmodules:20 dh_installpam:19 dh_installppp:19 dh_installudev:19 dh_installwm:19 dh_installxfonts:19 dh_link:20 dh_lintian:19 dh_listpackages:19 dh_makeshlibs:19 dh_md5sums:20 dh_movefiles:19 dh_perl:21 dh_prep:19 dh_shlibdeps:21 dh_strip:20 dh_testdir:19 dh_testroot:13 dh_usrlocal:23 dh_systemd_enable:20 dh_systemd_start:21
msgid "DESCRIPTION"
msgstr ""

#. type: textblock
#: debhelper.pod:13
msgid ""
"Debhelper is used to help you build a Debian package. The philosophy behind "
"debhelper is to provide a collection of small, simple, and easily understood "
"tools that are used in F<debian/rules> to automate various common aspects of "
"building a package. This means less work for you, the packager.  It also, to "
"some degree means that these tools can be changed if Debian policy changes, "
"and packages that use them will require only a rebuild to comply with the "
"new policy."
msgstr ""

#. type: textblock
#: debhelper.pod:21
msgid ""
"A typical F<debian/rules> file that uses debhelper will call several "
"debhelper commands in sequence, or use L<dh(1)> to automate this "
"process. Examples of rules files that use debhelper are in "
"F</usr/share/doc/debhelper/examples/>"
msgstr ""

#. type: textblock
#: debhelper.pod:25
msgid ""
"To create a new Debian package using debhelper, you can just copy one of the "
"sample rules files and edit it by hand. Or you can try the B<dh-make> "
"package, which contains a L<dh_make|dh_make(1)> command that partially "
"automates the process. For a more gentle introduction, the B<maint-guide> "
"Debian package contains a tutorial about making your first package using "
"debhelper."
msgstr ""

#. type: textblock
#: debhelper.pod:31
msgid ""
"Except where tool explicitly denotes otherwise, all of the debhelper tools "
"assumes that they run from root directory of an unpacked source package.  "
"This is so they can locate find files like F<debian/control> when needed."
msgstr ""

#. type: =head1
#: debhelper.pod:36
msgid "DEBHELPER COMMANDS"
msgstr ""

#. type: textblock
#: debhelper.pod:38
msgid ""
"Here is the list of debhelper commands you can use. See their man pages for "
"additional documentation."
msgstr ""

#. type: textblock
#: debhelper.pod:43
msgid "#LIST#"
msgstr ""

#. type: =head2
#: debhelper.pod:47
msgid "Deprecated Commands"
msgstr ""

#. type: textblock
#: debhelper.pod:49
msgid "A few debhelper commands are deprecated and should not be used."
msgstr ""

#. type: textblock
#: debhelper.pod:53
msgid "#LIST_DEPRECATED#"
msgstr ""

#. type: =head2
#: debhelper.pod:57
msgid "Other Commands"
msgstr ""

#. type: textblock
#: debhelper.pod:59
msgid ""
"If a program's name starts with B<dh_>, and the program is not on the above "
"lists, then it is not part of the debhelper package, but it should still "
"work like the other programs described on this page."
msgstr ""

#. type: =head1
#: debhelper.pod:63
msgid "DEBHELPER CONFIG FILES"
msgstr ""

#. type: textblock
#: debhelper.pod:65
msgid ""
"Many debhelper commands make use of files in F<debian/> to control what they "
"do. Besides the common F<debian/changelog> and F<debian/control>, which are "
"in all packages, not just those using debhelper, some additional files can "
"be used to configure the behavior of specific debhelper commands. These "
"files are typically named debian/I<package>.foo (where I<package> of course, "
"is replaced with the package that is being acted on)."
msgstr ""

#. type: textblock
#: debhelper.pod:72
msgid ""
"For example, B<dh_installdocs> uses files named F<debian/package.docs> to "
"list the documentation files it will install. See the man pages of "
"individual commands for details about the names and formats of the files "
"they use.  Generally, these files will list files to act on, one file per "
"line. Some programs in debhelper use pairs of files and destinations or "
"slightly more complicated formats."
msgstr ""

#. type: textblock
#: debhelper.pod:79
msgid ""
"Note for the first (or only) binary package listed in F<debian/control>, "
"debhelper will use F<debian/foo> when there's no F<debian/I<package>.foo> "
"file.  However, it is often a good idea to keep the F<I<package>.> prefix as "
"it is more explicit.  The primary exception to this are files that debhelper "
"by default installs in every binary package when it does not have a package "
"prefix (such as F<debian/copyright> or F<debian/changelog>)."
msgstr ""

#. type: textblock
#: debhelper.pod:87
msgid ""
"In some rare cases, you may want to have different versions of these files "
"for different architectures or OSes. If files named "
"debian/I<package>.foo.I<ARCH> or debian/I<package>.foo.I<OS> exist, where "
"I<ARCH> and I<OS> are the same as the output of \"B<dpkg-architecture "
"-qDEB_HOST_ARCH>\" / \"B<dpkg-architecture -qDEB_HOST_ARCH_OS>\", then they "
"will be used in preference to other, more general files."
msgstr ""

#. type: textblock
#: debhelper.pod:94
msgid ""
"Mostly, these config files are used to specify lists of various types of "
"files. Documentation or example files to install, files to move, and so on.  "
"When appropriate, in cases like these, you can use standard shell wildcard "
"characters (B<?> and B<*> and B<[>I<..>B<]> character classes) in the "
"files.  You can also put comments in these files; lines beginning with B<#> "
"are ignored."
msgstr ""

#. type: textblock
#: debhelper.pod:101
msgid ""
"The syntax of these files is intentionally kept very simple to make them "
"easy to read, understand, and modify."
msgstr ""

#. type: =head2
#: debhelper.pod:104
msgid "Executable debhelper config files"
msgstr ""

#. type: textblock
#: debhelper.pod:106
msgid ""
"If you need additional flexibility, many of the debhelper tools "
"(e.g. L<dh_install(1)>) support executing a config file as a script."
msgstr ""

#. type: textblock
#: debhelper.pod:109
msgid ""
"To use this feature, simply mark the config file as executable (e.g. B<< "
"chmod +x debian/I<package>.install >>) and the tool will attempt to execute "
"it and use the output of the script.  In many cases, you can use "
"L<dh-exec(1)> as interpreter of the config file to retain most of the "
"original syntax while getting the additional flexibility you need."
msgstr ""

#. type: textblock
#: debhelper.pod:117
msgid ""
"When using executable debhelper config files, please be aware of the "
"following:"
msgstr ""

#. type: =item
#: debhelper.pod:122 debhelper.pod:127
msgid "*"
msgstr ""

#. type: textblock
#: debhelper.pod:124
msgid ""
"The executable config file B<must> exit with success (i.e. its return code "
"should indicate success)."
msgstr ""

#. type: textblock
#: debhelper.pod:129
msgid ""
"The output will be used exactly as it is.  Notably, debhelper will I<not> "
"expand wildcards or strip comments in the output."
msgstr ""

#. type: textblock
#: debhelper.pod:134
msgid ""
"If you need the package to build on a file system where you cannot disable "
"the executable bit, then you can use L<dh-exec(1)> and its B<strip-output> "
"script."
msgstr ""

#. type: =head1
#: debhelper.pod:138
msgid "SHARED DEBHELPER OPTIONS"
msgstr ""

#. type: textblock
#: debhelper.pod:140
msgid "The following command line options are supported by all debhelper programs."
msgstr ""

#. type: =item
#: debhelper.pod:144
msgid "B<-v>, B<--verbose>"
msgstr ""

#. type: textblock
#: debhelper.pod:146
msgid "Verbose mode: show all commands that modify the package build directory."
msgstr ""

#. type: =item
#: debhelper.pod:148 dh:85
msgid "B<--no-act>"
msgstr ""

#. type: textblock
#: debhelper.pod:150
msgid ""
"Do not really do anything. If used with -v, the result is that the command "
"will output what it would have done."
msgstr ""

#. type: =item
#: debhelper.pod:153
msgid "B<-a>, B<--arch>"
msgstr ""

#. type: textblock
#: debhelper.pod:155
msgid ""
"Act on architecture dependent packages that should be built for the "
"B<DEB_HOST_ARCH> architecture."
msgstr ""

#. type: =item
#: debhelper.pod:158
msgid "B<-i>, B<--indep>"
msgstr ""

#. type: textblock
#: debhelper.pod:160
msgid "Act on all architecture independent packages."
msgstr ""

#. type: =item
#: debhelper.pod:162
msgid "B<-p>I<package>, B<--package=>I<package>"
msgstr ""

#. type: textblock
#: debhelper.pod:164
msgid ""
"Act on the package named I<package>. This option may be specified multiple "
"times to make debhelper operate on a given set of packages."
msgstr ""

#. type: =item
#: debhelper.pod:167
msgid "B<-s>, B<--same-arch>"
msgstr ""

#. type: textblock
#: debhelper.pod:169
msgid "Deprecated alias of B<-a>."
msgstr ""

#. type: textblock
#: debhelper.pod:171 dh_install:77 dh_install:86
msgid "This option is removed in compat 12."
msgstr ""

#. type: =item
#: debhelper.pod:173
msgid "B<-N>I<package>, B<--no-package=>I<package>"
msgstr ""

#. type: textblock
#: debhelper.pod:175
msgid ""
"Do not act on the specified package even if an B<-a>, B<-i>, or B<-p> option "
"lists the package as one that should be acted on."
msgstr ""

#. type: =item
#: debhelper.pod:178
msgid "B<--remaining-packages>"
msgstr ""

#. type: textblock
#: debhelper.pod:180
msgid ""
"Do not act on the packages which have already been acted on by this "
"debhelper command earlier (i.e. if the command is present in the package "
"debhelper log).  For example, if you need to call the command with special "
"options only for a couple of binary packages, pass this option to the last "
"call of the command to process the rest of packages with default settings."
msgstr ""

#. type: =item
#: debhelper.pod:186
msgid "B<--ignore=>I<file>"
msgstr ""

#. type: textblock
#: debhelper.pod:188
msgid ""
"Ignore the specified file. This can be used if F<debian/> contains a "
"debhelper config file that a debhelper command should not act on. Note that "
"F<debian/compat>, F<debian/control>, and F<debian/changelog> can't be "
"ignored, but then, there should never be a reason to ignore those files."
msgstr ""

#. type: textblock
#: debhelper.pod:193
msgid ""
"For example, if upstream ships a F<debian/init> that you don't want "
"B<dh_installinit> to install, use B<--ignore=debian/init>"
msgstr ""

#. type: =item
#: debhelper.pod:196
msgid "B<-P>I<tmpdir>, B<--tmpdir=>I<tmpdir>"
msgstr ""

#. type: textblock
#: debhelper.pod:198
msgid "Use I<tmpdir> for package build directory. The default is debian/I<package>"
msgstr ""

#. type: =item
#: debhelper.pod:200
msgid "B<--mainpackage=>I<package>"
msgstr ""

#. type: textblock
#: debhelper.pod:202
msgid ""
"This little-used option changes the package which debhelper considers the "
"\"main package\", that is, the first one listed in F<debian/control>, and "
"the one for which F<debian/foo> files can be used instead of the usual "
"F<debian/package.foo> files."
msgstr ""

#. type: =item
#: debhelper.pod:207
msgid "B<-O=>I<option>|I<bundle>"
msgstr ""

#. type: textblock
#: debhelper.pod:209
msgid ""
"This is used by L<dh(1)> when passing user-specified options to all the "
"commands it runs. If the command supports the specified option or option "
"bundle, it will take effect. If the command does not support the option (or "
"any part of an option bundle), it will be ignored."
msgstr ""

#. type: =head1
#: debhelper.pod:216
msgid "COMMON DEBHELPER OPTIONS"
msgstr ""

#. type: textblock
#: debhelper.pod:218
msgid ""
"The following command line options are supported by some debhelper "
"programs.  See the man page of each program for a complete explanation of "
"what each option does."
msgstr ""

#. type: =item
#: debhelper.pod:224
msgid "B<-n>"
msgstr ""

#. type: textblock
#: debhelper.pod:226
msgid "Do not modify F<postinst>, F<postrm>, etc. scripts."
msgstr ""

#. type: =item
#: debhelper.pod:228 dh_compress:56 dh_dwz:44 dh_installchangelogs:72 dh_installdocs:99 dh_installexamples:77 dh_link:75 dh_makeshlibs:139 dh_md5sums:40 dh_shlibdeps:34 dh_strip:42
msgid "B<-X>I<item>, B<--exclude=>I<item>"
msgstr ""

#. type: textblock
#: debhelper.pod:230
msgid ""
"Exclude an item from processing. This option may be used multiple times, to "
"exclude more than one thing. The I<item> is typically part of a filename, "
"and any file containing the specified text will be excluded."
msgstr ""

#. type: =item
#: debhelper.pod:234 dh_bugfiles:57 dh_compress:63 dh_installdirs:46 dh_installdocs:94 dh_installexamples:45 dh_installinfo:42 dh_installman:87 dh_installwm:52 dh_link:70
msgid "B<-A>, B<--all>"
msgstr ""

#. type: textblock
#: debhelper.pod:236
msgid ""
"Makes files or other items that are specified on the command line take "
"effect in ALL packages acted on, not just the first."
msgstr ""

#. type: =head1
#: debhelper.pod:241
msgid "BUILD SYSTEM OPTIONS"
msgstr ""

#. type: textblock
#: debhelper.pod:243
msgid ""
"The following command line options are supported by all of the "
"B<dh_auto_>I<*> debhelper programs. These programs support a variety of "
"build systems, and normally heuristically determine which to use, and how to "
"use them.  You can use these command line options to override the default "
"behavior.  Typically these are passed to L<dh(1)>, which then passes them to "
"all the B<dh_auto_>I<*> programs."
msgstr ""

#. type: =item
#: debhelper.pod:252
msgid "B<-S>I<buildsystem>, B<--buildsystem=>I<buildsystem>"
msgstr ""

#. type: textblock
#: debhelper.pod:254
msgid ""
"Force use of the specified I<buildsystem>, instead of trying to auto-select "
"one which might be applicable for the package."
msgstr ""

#. type: =item
#: debhelper.pod:257
msgid "B<-D>I<directory>, B<--sourcedirectory=>I<directory>"
msgstr ""

#. type: textblock
#: debhelper.pod:259
msgid ""
"Assume that the original package source tree is at the specified "
"I<directory> rather than the top level directory of the Debian source "
"package tree."
msgstr ""

#. type: =item
#: debhelper.pod:263
msgid "B<-B>[I<directory>], B<--builddirectory=>[I<directory>]"
msgstr ""

#. type: textblock
#: debhelper.pod:265
msgid ""
"Enable out of source building and use the specified I<directory> as the "
"build directory. If I<directory> parameter is omitted, a default build "
"directory will be chosen."
msgstr ""

#. type: textblock
#: debhelper.pod:269
msgid ""
"If this option is not specified, building will be done in source by default "
"unless the build system requires or prefers out of source tree building.  In "
"such a case, the default build directory will be used even if "
"B<--builddirectory> is not specified."
msgstr ""

#. type: textblock
#: debhelper.pod:274
msgid ""
"If the build system prefers out of source tree building but still allows in "
"source building, the latter can be re-enabled by passing a build directory "
"path that is the same as the source directory path."
msgstr ""

#. type: =item
#: debhelper.pod:278
msgid "B<--parallel>, B<--no-parallel>"
msgstr ""

#. type: textblock
#: debhelper.pod:280
msgid ""
"Control whether parallel builds should be used if underlying build system "
"supports them.  The number of parallel jobs is controlled by the "
"B<DEB_BUILD_OPTIONS> environment variable (L<Debian Policy, section 4.9.1>) "
"at build time. It might also be subject to a build system specific limit."
msgstr ""

#. type: textblock
#: debhelper.pod:286
msgid ""
"If neither option is specified, debhelper currently defaults to "
"B<--parallel> in compat 10 (or later) and B<--no-parallel> otherwise."
msgstr ""

#. type: textblock
#: debhelper.pod:289
msgid ""
"As an optimization, B<dh> will try to avoid passing these options to "
"subprocesses, if they are unnecessary and the only options passed.  Notably "
"this happens when B<DEB_BUILD_OPTIONS> does not have a I<parallel> parameter "
"(or its value is 1)."
msgstr ""

#. type: =item
#: debhelper.pod:294
msgid "B<--max-parallel=>I<maximum>"
msgstr ""

#. type: textblock
#: debhelper.pod:296
msgid ""
"This option implies B<--parallel> and allows further limiting the number of "
"jobs that can be used in a parallel build. If the package build is known to "
"only work with certain levels of concurrency, you can set this to the "
"maximum level that is known to work, or that you wish to support."
msgstr ""

#. type: textblock
#: debhelper.pod:301
msgid ""
"Notably, setting the maximum to 1 is effectively the same as using "
"B<--no-parallel>."
msgstr ""

#. type: =item
#: debhelper.pod:304 dh:77
msgid "B<--list>, B<-l>"
msgstr ""

#. type: textblock
#: debhelper.pod:306
msgid ""
"List all build systems supported by debhelper on this system. The list "
"includes both default and third party build systems (marked as such). Also "
"shows which build system would be automatically selected, or which one is "
"manually specified with the B<--buildsystem> option."
msgstr ""

#. type: =head1
#: debhelper.pod:313
msgid "COMPATIBILITY LEVELS"
msgstr ""

#. type: textblock
#: debhelper.pod:315
msgid ""
"From time to time, major non-backwards-compatible changes need to be made to "
"debhelper, to keep it clean and well-designed as needs change and its author "
"gains more experience. To prevent such major changes from breaking existing "
"packages, the concept of debhelper compatibility levels was introduced. You "
"must tell debhelper which compatibility level it should use, and it modifies "
"its behavior in various ways."
msgstr ""

#. type: textblock
#: debhelper.pod:322
msgid ""
"In current debhelper, you can specify the compatibility level in "
"F<debian/control> by adding a Build-Depends on the debhelper-compat "
"package.  For example, to use v#RECOMMENDED_COMPAT# mode, ensure "
"F<debian/control> has:"
msgstr ""

#. type: verbatim
#: debhelper.pod:326
#, no-wrap
msgid ""
"  Build-Depends: debhelper-compat (= #RECOMMENDED_COMPAT#)\n"
"\n"
msgstr ""

#. type: textblock
#: debhelper.pod:328
msgid ""
"This also serves as an appropriate versioned build dependency on a "
"sufficient version of the debhelper package, so you do not need to specify a "
"separate versioned build dependency on the debhelper package unless you need "
"a specific point release of debhelper (such as for the introduction of a new "
"feature or bugfix within a compatibility level)."
msgstr ""

#. type: textblock
#: debhelper.pod:334
msgid ""
"Note that debhelper does not provide debhelper-compat for experimental or "
"beta compatibility levels; packages experimenting with those compatibility "
"levels should use F<debian/compat> or B<DH_COMPAT>."
msgstr ""

#. type: textblock
#: debhelper.pod:338
msgid ""
"Prior versions of debhelper required specifying the compatibility level in "
"the file F<debian/compat>, and current debhelper still supports this for "
"backward compatibility, though a package may not specify a compatibility "
"level via multiple methods at once. To use this method, F<debian/compat> "
"should contain the compatibility level as a single number, and no other "
"content. If you specify the compatibility level by this method, your package "
"will also need a versioned build dependency on a version of the debhelper "
"package equal to (or greater than) the compatibility level your package "
"uses. So, if you specify compatibility level #RECOMMENDED_COMPAT# in "
"F<debian/compat>, ensure F<debian/control> has:"
msgstr ""

#. type: verbatim
#: debhelper.pod:349
#, no-wrap
msgid ""
"  Build-Depends: debhelper (>= #RECOMMENDED_COMPAT#~)\n"
"\n"
msgstr ""

#. type: textblock
#: debhelper.pod:351
msgid ""
"Unless otherwise indicated, all debhelper documentation assumes that you are "
"using the most recent compatibility level, and in most cases does not "
"indicate if the behavior is different in an earlier compatibility level, so "
"if you are not using the most recent compatibility level, you're advised to "
"read below for notes about what is different in earlier compatibility "
"levels."
msgstr ""

#. type: =head2
#: debhelper.pod:358
msgid "Supported compatibility levels"
msgstr ""

#. type: textblock
#: debhelper.pod:360
msgid "These are the available compatibility levels:"
msgstr ""

#. type: =item
#: debhelper.pod:364 debhelper-obsolete-compat.pod:89
msgid "v5"
msgstr ""

#. type: textblock
#: debhelper.pod:366 debhelper-obsolete-compat.pod:91
msgid "This is the lowest supported compatibility level."
msgstr ""

#. type: textblock
#: debhelper.pod:368
msgid ""
"If you are upgrading from an earlier compatibility level, please review "
"L<debhelper-obsolete-compat(7)>."
msgstr ""

#. type: textblock
#: debhelper.pod:371 debhelper.pod:403 debhelper.pod:433 debhelper.pod:464 debhelper-obsolete-compat.pod:28 debhelper-obsolete-compat.pod:35 debhelper-obsolete-compat.pod:58 debhelper-obsolete-compat.pod:87
msgid "This mode is deprecated."
msgstr ""

#. type: =item
#: debhelper.pod:373
msgid "v6"
msgstr ""

#. type: textblock
#: debhelper.pod:375
msgid "Changes from v5 are:"
msgstr ""

#. type: =item
#: debhelper.pod:379 debhelper.pod:384 debhelper.pod:390 debhelper.pod:396 debhelper.pod:411 debhelper.pod:418 debhelper.pod:422 debhelper.pod:426 debhelper.pod:441 debhelper.pod:445 debhelper.pod:453 debhelper.pod:458 debhelper.pod:472 debhelper.pod:477 debhelper.pod:484 debhelper.pod:489 debhelper.pod:494 debhelper.pod:502 debhelper.pod:508 debhelper.pod:513 debhelper.pod:518 debhelper.pod:531 debhelper.pod:536 debhelper.pod:542 debhelper.pod:548 debhelper.pod:553 debhelper.pod:559 debhelper.pod:565 debhelper.pod:575 debhelper.pod:581 debhelper.pod:604 debhelper.pod:611 debhelper.pod:617 debhelper.pod:623 debhelper.pod:629 debhelper.pod:649 debhelper.pod:655 debhelper.pod:667 debhelper.pod:675 debhelper.pod:681 debhelper.pod:686 debhelper.pod:691 debhelper.pod:696 debhelper.pod:704 debhelper.pod:714 debhelper.pod:724 debhelper.pod:731 debhelper.pod:743 debhelper.pod:748 debhelper.pod:776 debhelper.pod:795 debhelper.pod:805 debhelper.pod:809 debhelper.pod:814 debhelper.pod:819 debhelper.pod:826 debhelper.pod:832 debhelper.pod:840 debhelper.pod:846 debhelper.pod:850 debhelper.pod:855 debhelper.pod:860 debhelper.pod:869 debhelper.pod:885 debhelper.pod:892 debhelper.pod:908 debhelper.pod:916 debhelper.pod:921 debhelper.pod:936 debhelper-obsolete-compat.pod:43 debhelper-obsolete-compat.pod:48 debhelper-obsolete-compat.pod:52 debhelper-obsolete-compat.pod:66 debhelper-obsolete-compat.pod:71 debhelper-obsolete-compat.pod:76 debhelper-obsolete-compat.pod:81 debhelper-obsolete-compat.pod:97 debhelper-obsolete-compat.pod:101 debhelper-obsolete-compat.pod:106 debhelper-obsolete-compat.pod:110 dh_testroot:36 dh_testroot:41 dh_testroot:46
msgid "-"
msgstr ""

#. type: textblock
#: debhelper.pod:381
msgid ""
"Commands that generate maintainer script fragments will order the fragments "
"in reverse order for the F<prerm> and F<postrm> scripts."
msgstr ""

#. type: textblock
#: debhelper.pod:386
msgid ""
"B<dh_installwm> will install a slave manpage link for "
"F<x-window-manager.1.gz>, if it sees the man page in F<usr/share/man/man1> "
"in the package build directory."
msgstr ""

#. type: textblock
#: debhelper.pod:392
msgid ""
"B<dh_builddeb> did not previously delete everything matching "
"B<DH_ALWAYS_EXCLUDE>, if it was set to a list of things to exclude, such as "
"B<CVS:.svn:.git>. Now it does."
msgstr ""

#. type: textblock
#: debhelper.pod:398
msgid ""
"B<dh_installman> allows overwriting existing man pages in the package build "
"directory. In previous compatibility levels it silently refuses to do this."
msgstr ""

#. type: =item
#: debhelper.pod:405
msgid "v7"
msgstr ""

#. type: textblock
#: debhelper.pod:407
msgid "Changes from v6 are:"
msgstr ""

#. type: textblock
#: debhelper.pod:413
msgid ""
"B<dh_install>, will fall back to looking for files in F<debian/tmp> if it "
"doesn't find them in the current directory (or wherever you tell it look "
"using B<--sourcedir>). This allows B<dh_install> to interoperate with "
"B<dh_auto_install>, which installs to F<debian/tmp>, without needing any "
"special parameters."
msgstr ""

#. type: textblock
#: debhelper.pod:420
msgid "B<dh_clean> will read F<debian/clean> and delete files listed there."
msgstr ""

#. type: textblock
#: debhelper.pod:424
msgid "B<dh_clean> will delete toplevel F<*-stamp> files."
msgstr ""

#. type: textblock
#: debhelper.pod:428
msgid ""
"B<dh_installchangelogs> will guess at what file is the upstream changelog if "
"none is specified."
msgstr ""

#. type: =item
#: debhelper.pod:435
msgid "v8"
msgstr ""

#. type: textblock
#: debhelper.pod:437
msgid "Changes from v7 are:"
msgstr ""

#. type: textblock
#: debhelper.pod:443
msgid "Commands will fail rather than warning when they are passed unknown options."
msgstr ""

#. type: textblock
#: debhelper.pod:447
msgid ""
"B<dh_makeshlibs> will run B<dpkg-gensymbols> on all shared libraries that it "
"generates shlibs files for. So B<-X> can be used to exclude libraries.  "
"Also, libraries in unusual locations that B<dpkg-gensymbols> would not have "
"processed before will be passed to it, a behavior change that can cause some "
"packages to fail to build."
msgstr ""

#. type: textblock
#: debhelper.pod:455
msgid ""
"B<dh> requires the sequence to run be specified as the first parameter, and "
"any switches come after it. Ie, use \"B<dh $@ --foo>\", not \"B<dh --foo "
"$@>\"."
msgstr ""

#. type: textblock
#: debhelper.pod:460
msgid ""
"B<dh_auto_>I<*> prefer to use Perl's B<Module::Build> in preference to "
"F<Makefile.PL>."
msgstr ""

#. type: =item
#: debhelper.pod:466
msgid "v9"
msgstr ""

#. type: textblock
#: debhelper.pod:468
msgid "Changes from v8 are:"
msgstr ""

#. type: textblock
#: debhelper.pod:474
msgid ""
"Multiarch support. In particular, B<dh_auto_configure> passes multiarch "
"directories to autoconf in --libdir and --libexecdir."
msgstr ""

#. type: textblock
#: debhelper.pod:479
msgid ""
"dh is aware of the usual dependencies between targets in debian/rules.  So, "
"\"dh binary\" will run any build, build-arch, build-indep, install, etc "
"targets that exist in the rules file. There's no need to define an explicit "
"binary target with explicit dependencies on the other targets."
msgstr ""

#. type: textblock
#: debhelper.pod:486
msgid ""
"B<dh_strip> compresses debugging symbol files to reduce the installed size "
"of -dbg packages."
msgstr ""

#. type: textblock
#: debhelper.pod:491
msgid ""
"B<dh_auto_configure> does not include the source package name in "
"--libexecdir when using autoconf."
msgstr ""

#. type: textblock
#: debhelper.pod:496
msgid "B<dh> does not default to enabling --with=python-support"
msgstr ""

#. type: textblock
#: debhelper.pod:498
msgid ""
"(Obsolete: As the B<dh_pysupport> tool was removed from Debian stretch.  "
"Since debhelper/10.3, B<dh> no longer enables this sequence add-on "
"regardless of compat level)"
msgstr ""

#. type: textblock
#: debhelper.pod:504
msgid ""
"All of the B<dh_auto_>I<*> debhelper programs and B<dh> set environment "
"variables listed by B<dpkg-buildflags>, unless they are already set."
msgstr ""

#. type: textblock
#: debhelper.pod:510
msgid ""
"B<dh_auto_configure> passes B<dpkg-buildflags> CFLAGS, CPPFLAGS, and LDFLAGS "
"to perl F<Makefile.PL> and F<Build.PL>"
msgstr ""

#. type: textblock
#: debhelper.pod:515
msgid ""
"B<dh_strip> puts separated debug symbols in a location based on their "
"build-id."
msgstr ""

#. type: textblock
#: debhelper.pod:520
msgid ""
"Executable debhelper config files are run and their output used as the "
"configuration."
msgstr ""

#. type: =item
#: debhelper.pod:525
msgid "v10"
msgstr ""

#. type: textblock
#: debhelper.pod:527
msgid "Changes from v9 are:"
msgstr ""

#. type: textblock
#: debhelper.pod:533
msgid ""
"B<dh_installinit> will no longer install a file named debian/I<package> as "
"an init script."
msgstr ""

#. type: textblock
#: debhelper.pod:538
msgid ""
"B<dh_installdocs> will error out if it detects links created with --link-doc "
"between packages of architecture \"all\" and non-\"all\" as it breaks "
"binNMUs."
msgstr ""

#. type: textblock
#: debhelper.pod:544
msgid ""
"B<dh_installdeb> no longer installs a maintainer-provided "
"debian/I<package>.shlibs file.  This is now done by B<dh_makeshlibs> "
"instead."
msgstr ""

#. type: textblock
#: debhelper.pod:550
msgid ""
"B<dh_installwm> refuses to create a broken package if no man page can be "
"found (required to register for the x-window-manager alternative)."
msgstr ""

#. type: textblock
#: debhelper.pod:555
msgid ""
"Debhelper will default to B<--parallel> for all buildsystems that support "
"parallel building.  This can be disabled by using either B<--no-parallel> or "
"passing B<--max-parallel> with a value of 1."
msgstr ""

#. type: textblock
#: debhelper.pod:561
msgid ""
"The B<dh> command will not accept any of the deprecated \"manual sequence "
"control\" parameters (B<--before>, B<--after>, etc.).  Please use override "
"targets instead."
msgstr ""

#. type: textblock
#: debhelper.pod:567
msgid ""
"The B<dh> command will no longer use log files to track which commands have "
"been run.  The B<dh> command I<still> keeps track of whether it already ran "
"the \"build\" sequence and skip it if it did."
msgstr ""

#. type: textblock
#: debhelper.pod:571
msgid "The main effects of this are:"
msgstr ""

#. type: textblock
#: debhelper.pod:577
msgid ""
"With this, it is now easier to debug the I<install> or/and I<binary> "
"sequences because they can now trivially be re-run (without having to do a "
"full \"clean and rebuild\" cycle)"
msgstr ""

#. type: textblock
#: debhelper.pod:583
msgid ""
"The main caveat is that B<dh_*> now only keeps track of what happened in a "
"single override target.  When all the calls to a given B<dh_cmd> command "
"happens in the same override target everything will work as before."
msgstr ""

#. type: textblock
#: debhelper.pod:588
msgid "Example of where it can go wrong:"
msgstr ""

#. type: verbatim
#: debhelper.pod:590
#, no-wrap
msgid ""
"  override_dh_foo:\n"
"    dh_foo -pmy-pkg\n"
"\n"
msgstr ""

#. type: verbatim
#: debhelper.pod:593
#, no-wrap
msgid ""
"  override_dh_bar:\n"
"    dh_bar\n"
"    dh_foo --remaining\n"
"\n"
msgstr ""

#. type: textblock
#: debhelper.pod:597
msgid ""
"In this case, the call to B<dh_foo --remaining> will I<also> include "
"I<my-pkg>, since B<dh_foo -pmy-pkg> was run in a separate override target.  "
"This issue is not limited to B<--remaining>, but also includes B<-a>, B<-i>, "
"etc."
msgstr ""

#. type: textblock
#: debhelper.pod:606
msgid ""
"The B<dh_installdeb> command now shell-escapes the lines in the "
"F<maintscript> config file.  This was the original intent but it did not "
"work properly and packages have begun to rely on the incomplete shell "
"escaping (e.g. quoting file names)."
msgstr ""

#. type: textblock
#: debhelper.pod:613
msgid ""
"The B<dh_installinit> command now defaults to B<--restart-after-upgrade>.  "
"For packages needing the previous behaviour, please use "
"B<--no-restart-after-upgrade>."
msgstr ""

#. type: textblock
#: debhelper.pod:619
msgid ""
"The B<autoreconf> sequence is now enabled by default.  Please pass "
"B<--without autoreconf> to B<dh> if this is not desirable for a given "
"package"
msgstr ""

#. type: textblock
#: debhelper.pod:625
msgid ""
"The B<systemd> sequence is now enabled by default.  Please pass B<--without "
"systemd> to B<dh> if this is not desirable for a given package."
msgstr ""

#. type: textblock
#: debhelper.pod:631
msgid ""
"B<Retroactively removed>: B<dh> no longer creates the package build "
"directory when skipping running debhelper commands. This will not affect "
"packages that only build with debhelper commands, but it may expose bugs in "
"commands not included in debhelper."
msgstr ""

#. type: textblock
#: debhelper.pod:636
msgid ""
"This compatibility feature had a bug since its inception in "
"debhelper/9.20130516 that made it fail to apply in compat 9 and earlier.  As "
"there has been no reports of issues caused by this bug in those ~5 years, "
"this item have been removed rather than fixed."
msgstr ""

#. type: =item
#: debhelper.pod:643
msgid "v11"
msgstr ""

#. type: textblock
#: debhelper.pod:645
msgid "Changes from v10 are:"
msgstr ""

#. type: textblock
#: debhelper.pod:651
msgid ""
"B<dh_installinit> no longer installs F<service> or F<tmpfile> files, nor "
"generates maintainer scripts for those files.  Please use the new "
"B<dh_installsystemd> helper."
msgstr ""

#. type: textblock
#: debhelper.pod:657
msgid ""
"The B<dh_systemd_enable> and B<dh_systemd_start> helpers have been replaced "
"by the new B<dh_installsystemd> helper.  For the same reason, the B<systemd> "
"sequence for B<dh> has also been removed.  If you need to disable the "
"B<dh_installsystemd> helper tool, please use an empty override target."
msgstr ""

#. type: textblock
#: debhelper.pod:663
msgid ""
"Please note that the B<dh_installsystemd> tool has a slightly different "
"behaviour in some cases (e.g. when using the B<--name> parameter)."
msgstr ""

#. type: textblock
#: debhelper.pod:669
msgid ""
"B<dh_installdirs> no longer creates debian/I<package> directories unless "
"explicitly requested (or it has to create a subdirectory in it)."
msgstr ""

#. type: textblock
#: debhelper.pod:673
msgid "The vast majority of all packages will be unaffected by this change."
msgstr ""

#. type: textblock
#: debhelper.pod:677
msgid ""
"The B<makefile> buildsystem now passes B<INSTALL=\"install "
"--strip-program=true\"> to L<make(1)>.  Derivative buildsystems "
"(e.g. B<configure> or B<cmake>) are unaffected by this change."
msgstr ""

#. type: textblock
#: debhelper.pod:683
msgid ""
"The B<autoconf> buildsystem now passes B<--runstatedir=/run> to "
"F<./configure>."
msgstr ""

#. type: textblock
#: debhelper.pod:688
msgid ""
"The B<cmake> buildsystem now passes B<-DCMAKE_INSTALL_RUNSTATEDIR=/run> to "
"L<cmake(1)>."
msgstr ""

#. type: textblock
#: debhelper.pod:693
msgid ""
"B<dh_installman> will now prefer detecting the language from the path name "
"rather than the extension."
msgstr ""

#. type: textblock
#: debhelper.pod:698
msgid ""
"B<dh_auto_install> will now only create the destination directory it needs.  "
"Previously, it would create the package build directory for all packages.  "
"This will not affect packages that only build with debhelper commands, but "
"it may expose bugs in commands not included in debhelper."
msgstr ""

#. type: textblock
#: debhelper.pod:706
msgid ""
"The helpers B<dh_installdocs>, B<dh_installexamples>, B<dh_installinfo>, and "
"B<dh_installman> now error out if their config has a pattern that does not "
"match anything or reference a path that does not exist."
msgstr ""

#. type: textblock
#: debhelper.pod:710
msgid ""
"Known exceptions include building with the B<nodoc> profile, where the above "
"tools will silently permit failed matches where the patterns are used to "
"specify documentation."
msgstr ""

#. type: textblock
#: debhelper.pod:716
msgid ""
"The helpers B<dh_installdocs>, B<dh_installexamples>, B<dh_installinfo>, and "
"B<dh_installman> now accept the parameter B<--sourcedir> with same meaning "
"as B<dh_install>. Furthermore, they now also fall back to F<debian/tmp> like "
"B<dh_install>."
msgstr ""

#. type: textblock
#: debhelper.pod:721
msgid ""
"Migration note: A bug in debhelper 11 up to 11.1.5 made B<dh_installinfo> "
"incorrectly ignore B<--sourcedir>."
msgstr ""

#. type: textblock
#: debhelper.pod:726
msgid ""
"The B<perl-makemaker> and B<perl-build> build systems no longer pass B<-I.> "
"to perl.  Packages that still need this behaviour can emulate it by using "
"the B<PERL5LIB> environment variable.  E.g. by adding B<export PERL5LIB=.> "
"in their debian/rules file (or similar)."
msgstr ""

#. type: textblock
#: debhelper.pod:733
msgid ""
"The B<PERL_USE_UNSAFE_INC> environment variable is no longer set by B<dh> or "
"any of the B<dh_auto_*> tools.  It was added as a temporary work around to "
"avoid a lot of packages failing to build at the same time."
msgstr ""

#. type: textblock
#: debhelper.pod:738
msgid ""
"Note this item will eventually become obsolete as upstream intends to drop "
"support for the B<PERL_USE_UNSAFE_INC> environment variable.  When perl "
"drops support for it, then this variable will be removed retroactively from "
"existing compat levels as well."
msgstr ""

#. type: textblock
#: debhelper.pod:745
msgid ""
"The B<dh_makeshlibs> helper will now exit with an error if objdump returns a "
"non-zero exit from analysing a given file."
msgstr ""

#. type: textblock
#: debhelper.pod:750
msgid ""
"The B<dh_installdocs> and B<dh_installexamples> tools may now install "
"I<most> of the documentation in a different path to comply with the "
"recommendation from Debian policy §12.3 (since version 3.9.7)."
msgstr ""

#. type: textblock
#: debhelper.pod:754
msgid ""
"Note that if a given source package only contains a single binary package in "
"F<debian/control> or none of the packages are I<-doc> packages, then this "
"change is not relevant for that source package and you can skip to the next "
"change."
msgstr ""

#. type: textblock
#: debhelper.pod:759
msgid ""
"By default, these tools will now attempt to determine a \"main package for "
"the documentation\" (called a I<doc-main-package> from here on) for every "
"I<-doc> package.  If they find such a I<doc-main-package>, they will now "
"install the documentation into the path F<< "
"/usr/share/doc/I<doc-main-package> >> in the given doc package.  I.e. the "
"path can change but the documentation is still shipped in the I<-doc> "
"package."
msgstr ""

#. type: textblock
#: debhelper.pod:767
msgid ""
"The B<--doc-main-package> option can be used when the auto-detection is "
"insufficient or to reset the path to its previous value if there is a reason "
"to diverge from Debian policy recommendation."
msgstr ""

#. type: textblock
#: debhelper.pod:771
msgid ""
"Some documentation will not be affected by this change.  These exceptions "
"include the copyright file, changelog files, README.Debian, etc.  These "
"files will still be installed in the path F<< /usr/share/doc/I<package> >>."
msgstr ""

#. type: textblock
#: debhelper.pod:778
msgid ""
"The B<dh_strip> and B<dh_shlibdeps> tools no longer uses filename patterns "
"to determine which files to process.  Instead, they open the file and look "
"for an ELF header to determine if a given file is an shared object or an ELF "
"executable."
msgstr ""

#. type: textblock
#: debhelper.pod:783
msgid "This change may cause the tools to process more files than previously."
msgstr ""

#. type: =item
#: debhelper.pod:787
msgid "v12"
msgstr ""

#. type: textblock
#: debhelper.pod:789
msgid "This is the recommended mode of operation."
msgstr ""

#. type: textblock
#: debhelper.pod:791
msgid "Changes from v11 are:"
msgstr ""

#. type: textblock
#: debhelper.pod:797
msgid ""
"The B<dh_makeshlibs> tool now generates shlibs files with versioned "
"dependency by default.  This means that B<-VUpstream-Version> (a.k.a. B<-V>) "
"is now the default."
msgstr ""

#. type: textblock
#: debhelper.pod:801
msgid ""
"If an unversioned dependency in the shlibs file is wanted, this can be "
"obtained by passing B<-VNone> instead.  However, please see "
"L<dh_makeshlibs(1)> for the caveat of unversioned dependencies."
msgstr ""

#. type: textblock
#: debhelper.pod:807
msgid ""
"The B<-s> (B<--same-arch>) option is removed.  Please use B<-a> (B<--arch>) "
"instead."
msgstr ""

#. type: textblock
#: debhelper.pod:811
msgid ""
"Invoking B<dh_clean -k> now causes an error instead of a deprecation "
"warning."
msgstr ""

#. type: textblock
#: debhelper.pod:816
msgid ""
"The B<--no-restart-on-upgrade> option in B<dh_installinit> has been "
"removed.  Please use the new name B<--no-stop-on-upgrade>"
msgstr ""

#. type: textblock
#: debhelper.pod:821
msgid ""
"There was a bug in the B<doit> (and similar) functions from "
"L<Debian::Debhelper::Dh_Lib> that made them spawn a shell in one particular "
"circumstance.  This bug is now removed and will cause helpers that rely on "
"the bug to fail with a \"command not found\"-error."
msgstr ""

#. type: textblock
#: debhelper.pod:828
msgid ""
"The B<--list-missing> and B<--fail-missing> in B<dh_install> has been "
"removed.  Please use B<dh_missing> and its corresponding options, which can "
"also see the files installed by other helpers."
msgstr ""

#. type: textblock
#: debhelper.pod:834
msgid ""
"The B<dh_installinit> helper no longer installs configuration for the "
"upstart init system.  Instead, it will abort the build if it finds an old "
"upstart configuration file.  The error is there to remind the package "
"maintainer to ensure the proper removal of the conffiles shipped in previous "
"versions of the package (if any)."
msgstr ""

#. type: textblock
#: debhelper.pod:842
msgid ""
"The B<dh_installdeb> tool will do basic validation of some "
"L<dpkg-maintscript-helper(1)> commands and will error out if the commands "
"appear to be invalid."
msgstr ""

#. type: textblock
#: debhelper.pod:848
msgid "The B<dh_missing> tool will now default to B<--list-missing>."
msgstr ""

#. type: textblock
#: debhelper.pod:852
msgid ""
"The B<dh_makeshlibs> tool will now only pass libraries to "
"L<dpkg-gensymbols(1)> if the ELF binary has a SONAME (containing \".so\")."
msgstr ""

#. type: textblock
#: debhelper.pod:857
msgid ""
"The B<dh_compress> tool no longer compresses examples (i.e. anything "
"installed in F<</usr/share/doc/I<package>/examples>>.)"
msgstr ""

#. type: textblock
#: debhelper.pod:862
msgid ""
"The standard sequence in B<dh> now includes B<dh_dwz> and "
"B<dh_installinitramfs> by default.  This makes the B<dwz> and "
"B<installinitramfs> sequences obsolete and they will now fail with an "
"error.  If you want to skip these commands, then please insert an empty "
"override target for them in F<debian/rules> (e.g. I<override_dh_dwz:>)"
msgstr ""

#. type: textblock
#: debhelper.pod:871
msgid ""
"The build systems B<meson> and B<autoconf> no longer explicitly set the "
"B<--libexecdir> variable and thus relies on the build system default - which "
"should be B</usr/libexec> (per FHS 3.0, adopted in Debian Policy 4.1.5)."
msgstr ""

#. type: textblock
#: debhelper.pod:876
msgid ""
"If a particular upstream package does not use the correct default, the "
"parameter can often be passed manually via L<dh_auto_configure(1)>.  E.g.  "
"via the following example:"
msgstr ""

#. type: verbatim
#: debhelper.pod:880
#, no-wrap
msgid ""
"    override_dh_auto_configure:\n"
"    \tdh_auto_configure -- --libexecdir=/usr/libexec\n"
"\n"
msgstr ""

#. type: textblock
#: debhelper.pod:883
msgid "Note the B<--> before the B<--libexecdir> parameter."
msgstr ""

#. type: textblock
#: debhelper.pod:887
msgid ""
"The B<dh_installdeb> tool no longer installs the maintainer provided "
"F<conffiles> file.  The file has mostly been obsolete since compatibility "
"level 3, where B<dh_installdeb> began to automatically compute the resulting "
"F<conffiles> control file."
msgstr ""

#. type: textblock
#: debhelper.pod:894
msgid ""
"The B<dh_installsystemd> tool no longer relies on B<dh_installinit> for "
"handling systemd services that have a sysvinit alternative.  Both tools must "
"now be used in such a case to ensure the service is properly started under "
"both sysvinit and systemd."
msgstr ""

#. type: textblock
#: debhelper.pod:899
msgid ""
"If you have an override for B<dh_installinit> (e.g. to call it with "
"B<--no-start>) then you will probably need one for B<dh_installsystemd> as "
"well now."
msgstr ""

#. type: textblock
#: debhelper.pod:903
msgid ""
"This change makes B<dh_installinit> inject a I<misc:Pre-Depends> for B<< "
"init-system-helpers (>= 1.54~) >>.  Please ensure that the package lists "
"B<${misc:Pre-Depends}> in its B<Pre-Depends> field before upgrading to "
"compat 12."
msgstr ""

#. type: textblock
#: debhelper.pod:910
msgid ""
"The third-party B<dh_golang> tool (from B<dh-golang> package) now defaults "
"on honoring B<DH_GOLANG_EXCLUDES> variable for source installation in -dev "
"packages and not only during the building process. Please set "
"B<DH_GOLANG_EXCLUDES_ALL> to false to revert to the previous behaviour. See "
"B<Debian::Debhelper::Buildsystem::golang(3pm)> for details and examples."
msgstr ""

#. type: textblock
#: debhelper.pod:918
msgid ""
"B<dh_installsystemduser> is now included in the B<dh> standard sequence by "
"default."
msgstr ""

#. type: textblock
#: debhelper.pod:923
msgid ""
"The B<python-distutils> buildsystem is now removed.  Please use the "
"third-party build system B<pybuild> instead."
msgstr ""

#. type: =item
#: debhelper.pod:928
msgid "v13"
msgstr ""

#. type: textblock
#: debhelper.pod:930 strings-kept-translations.pod:9
msgid "This compatibility level is still open for development; use with caution."
msgstr ""

#. type: textblock
#: debhelper.pod:932
msgid "Changes from v12 are:"
msgstr ""

#. type: textblock
#: debhelper.pod:938
msgid ""
"The B<meson+ninja> build system now uses B<meson test> instead of B<ninja "
"test> when running the test suite.  Any override of B<dh_auto_test> that "
"passes extra parameters to upstream test runner should be reviewed as "
"B<meson test> is not command line compatible with B<ninja test>."
msgstr ""

#. type: =head1
#: debhelper.pod:948 dh_auto_test:48 dh_dwz:57 dh_installcatalogs:64 dh_installdocs:192 dh_installemacsen:75 dh_installexamples:89 dh_installinit:205 dh_installinitramfs:53 dh_installman:128 dh_installmodules:57 dh_installudev:50 dh_installwm:63 dh_installxfonts:40 dh_movefiles:67 dh_strip:119 dh_usrlocal:60 dh_systemd_enable:104 dh_systemd_start:68
msgid "NOTES"
msgstr ""

#. type: =head2
#: debhelper.pod:950
msgid "Multiple binary package support"
msgstr ""

#. type: textblock
#: debhelper.pod:952
msgid ""
"If your source package generates more than one binary package, debhelper "
"programs will default to acting on all binary packages when run. If your "
"source package happens to generate one architecture dependent package, and "
"another architecture independent package, this is not the correct behavior, "
"because you need to generate the architecture dependent packages in the "
"binary-arch F<debian/rules> target, and the architecture independent "
"packages in the binary-indep F<debian/rules> target."
msgstr ""

#. type: textblock
#: debhelper.pod:960
msgid ""
"To facilitate this, as well as give you more control over which packages are "
"acted on by debhelper programs, all debhelper programs accept the B<-a>, "
"B<-i>, B<-p>, and B<-s> parameters. These parameters are cumulative.  If "
"none are given, debhelper programs default to acting on all packages listed "
"in the control file, with the exceptions below."
msgstr ""

#. type: textblock
#: debhelper.pod:966
msgid ""
"First, any package whose B<Architecture> field in B<debian/control> does not "
"match the B<DEB_HOST_ARCH> architecture will be excluded (L<Debian Policy, "
"section 5.6.8>)."
msgstr ""

#. type: textblock
#: debhelper.pod:970
msgid ""
"Also, some additional packages may be excluded based on the contents of the "
"B<DEB_BUILD_PROFILES> environment variable and B<Build-Profiles> fields in "
"binary package stanzas in B<debian/control>, according to the draft policy "
"at L<https://wiki.debian.org/BuildProfileSpec>."
msgstr ""

#. type: =head3
#: debhelper.pod:975
msgid "Interaction between package selections and Build-Profiles"
msgstr ""

#. type: textblock
#: debhelper.pod:977
msgid ""
"Build-Profiles affect which packages are included in the package selections "
"mechanisms in debhelper.  Generally, the package selections are described "
"from the assumption that all packages are enabled.  This section describes "
"how the selections react when a package is disabled due to the active "
"Build-Profiles (or lack of active Build-Profiles)."
msgstr ""

#. type: =item
#: debhelper.pod:985
msgid "-a/--arch, -i/--indep OR no selection options (a raw \"dh_X\" call)"
msgstr ""

#. type: textblock
#: debhelper.pod:987
msgid ""
"The package disabled by Build-Profiles is silently excluded from the "
"selection."
msgstr ""

#. type: textblock
#: debhelper.pod:990
msgid ""
"Note you will receive a warning if I<all> packages related to these "
"selections are disabled.  In that case, it generally does not make sense to "
"do the build in the first place."
msgstr ""

#. type: =item
#: debhelper.pod:994
msgid "-N I<package> / --no-package I<package>"
msgstr ""

#. type: textblock
#: debhelper.pod:996
msgid "The option is accepted and effectively does nothing."
msgstr ""

#. type: =item
#: debhelper.pod:998
msgid "-p I<package> / --package I<package>"
msgstr ""

#. type: textblock
#: debhelper.pod:1000
msgid "The option is accepted, but debhelper will not act on the package."
msgstr ""

#. type: textblock
#: debhelper.pod:1004
msgid ""
"Note that it does not matter whether a package is enabled or disabled by "
"default."
msgstr ""

#. type: =head2
#: debhelper.pod:1007
msgid "Automatic generation of Debian install scripts"
msgstr ""

#. type: textblock
#: debhelper.pod:1009
msgid ""
"Some debhelper commands will automatically generate parts of Debian "
"maintainer scripts. If you want these automatically generated things "
"included in your existing Debian maintainer scripts, then you need to add "
"B<#DEBHELPER#> to your scripts, in the place the code should be added.  "
"B<#DEBHELPER#> will be replaced by any auto-generated code when you run "
"B<dh_installdeb>."
msgstr ""

#. type: textblock
#: debhelper.pod:1016
msgid ""
"If a script does not exist at all and debhelper needs to add something to "
"it, then debhelper will create the complete script."
msgstr ""

#. type: textblock
#: debhelper.pod:1019
msgid ""
"All debhelper commands that automatically generate code in this way let it "
"be disabled by the -n parameter (see above)."
msgstr ""

#. type: textblock
#: debhelper.pod:1022
msgid ""
"Note that the inserted code will be shell code, so you cannot directly use "
"it in a Perl script. If you would like to embed it into a Perl script, here "
"is one way to do that (note that I made sure that $1, $2, etc are set with "
"the set command):"
msgstr ""

#. type: verbatim
#: debhelper.pod:1027
#, no-wrap
msgid ""
"  my $temp=\"set -e\\nset -- @ARGV\\n\" . << 'EOF';\n"
"  #DEBHELPER#\n"
"  EOF\n"
"  if (system($temp)) {\n"
"     my $exit_code = ($? >> 8) & 0xff;\n"
"     my $signal = $? & 0x7f;\n"
"     if ($exit_code) {\n"
"         die(\"The debhelper script failed with error code: "
"${exit_code}\");\n"
"     } else {\n"
"         die(\"The debhelper script was killed by signal: ${signal}\");\n"
"     }\n"
"  }\n"
"\n"
msgstr ""

#. type: =head2
#: debhelper.pod:1040
msgid "Automatic generation of miscellaneous dependencies."
msgstr ""

#. type: textblock
#: debhelper.pod:1042
msgid ""
"Some debhelper commands may make the generated package need to depend on "
"some other packages. For example, if you use L<dh_installdebconf(1)>, your "
"package will generally need to depend on debconf. Or if you use "
"L<dh_installxfonts(1)>, your package will generally need to depend on a "
"particular version of xutils. Keeping track of these miscellaneous "
"dependencies can be annoying since they are dependent on how debhelper does "
"things, so debhelper offers a way to automate it."
msgstr ""

#. type: textblock
#: debhelper.pod:1050
msgid ""
"All commands of this type, besides documenting what dependencies may be "
"needed on their man pages, will automatically generate a substvar called "
"B<${misc:Depends}>. If you put that token into your F<debian/control> file, "
"it will be expanded to the dependencies debhelper figures you need."
msgstr ""

#. type: textblock
#: debhelper.pod:1055
msgid ""
"This is entirely independent of the standard B<${shlibs:Depends}> generated "
"by L<dh_makeshlibs(1)>, and the B<${perl:Depends}> generated by "
"L<dh_perl(1)>.  You can choose not to use any of these, if debhelper's "
"guesses don't match reality."
msgstr ""

#. type: =head2
#: debhelper.pod:1060
msgid "Package build directories"
msgstr ""

#. type: textblock
#: debhelper.pod:1062
msgid ""
"By default, all debhelper programs assume that the temporary directory used "
"for assembling the tree of files in a package is debian/I<package>."
msgstr ""

#. type: textblock
#: debhelper.pod:1065
msgid ""
"Sometimes, you might want to use some other temporary directory. This is "
"supported by the B<-P> flag. For example, \"B<dh_installdocs "
"-Pdebian/tmp>\", will use B<debian/tmp> as the temporary directory. Note "
"that if you use B<-P>, the debhelper programs can only be acting on a single "
"package at a time. So if you have a package that builds many binary "
"packages, you will need to also use the B<-p> flag to specify which binary "
"package the debhelper program will act on."
msgstr ""

#. type: =head2
#: debhelper.pod:1073
msgid "udebs"
msgstr ""

#. type: textblock
#: debhelper.pod:1075
msgid ""
"Debhelper includes support for udebs. To create a udeb with debhelper, add "
"\"B<Package-Type: udeb>\" to the package's stanza in F<debian/control>.  "
"Debhelper will try to create udebs that comply with debian-installer policy, "
"by making the generated package files end in F<.udeb>, not installing any "
"documentation into a udeb, skipping over F<preinst>, F<postrm>, F<prerm>, "
"and F<config> scripts, etc."
msgstr ""

#. type: =head1
#: debhelper.pod:1082
msgid "ENVIRONMENT"
msgstr ""

#. type: textblock
#: debhelper.pod:1084
msgid ""
"The following environment variables can influence the behavior of "
"debhelper.  It is important to note that these must be actual environment "
"variables in order to function properly (not simply F<Makefile> "
"variables). To specify them properly in F<debian/rules>, be sure to "
"\"B<export>\" them. For example, \"B<export DH_VERBOSE>\"."
msgstr ""

#. type: =item
#: debhelper.pod:1092
msgid "B<DH_VERBOSE>"
msgstr ""

#. type: textblock
#: debhelper.pod:1094
msgid ""
"Set to B<1> to enable verbose mode. Debhelper will output every command it "
"runs. Also enables verbose build logs for some build systems like autoconf."
msgstr ""

#. type: =item
#: debhelper.pod:1097
msgid "B<DH_QUIET>"
msgstr ""

#. type: textblock
#: debhelper.pod:1099
msgid ""
"Set to B<1> to enable quiet mode. Debhelper will not output commands calling "
"the upstream build system nor will dh print which subcommands are called and "
"depending on the upstream build system might make that more quiet, too.  "
"This makes it easier to spot important messages but makes the output quite "
"useless as buildd log.  Ignored if DH_VERBOSE is also set."
msgstr ""

#. type: =item
#: debhelper.pod:1106
msgid "B<DH_COMPAT>"
msgstr ""

#. type: textblock
#: debhelper.pod:1108
msgid ""
"Temporarily specifies what compatibility level debhelper should run at, "
"overriding any value specified via Build-Depends on debhelper-compat or via "
"the F<debian/compat> file."
msgstr ""

#. type: =item
#: debhelper.pod:1112
msgid "B<DH_NO_ACT>"
msgstr ""

#. type: textblock
#: debhelper.pod:1114
msgid "Set to B<1> to enable no-act mode."
msgstr ""

#. type: =item
#: debhelper.pod:1116
msgid "B<DH_OPTIONS>"
msgstr ""

#. type: textblock
#: debhelper.pod:1118
msgid ""
"Anything in this variable will be prepended to the command line arguments of "
"all debhelper commands."
msgstr ""

#. type: textblock
#: debhelper.pod:1121
msgid ""
"When using L<dh(1)>, it can be passed options that will be passed on to each "
"debhelper command, which is generally better than using DH_OPTIONS."
msgstr ""

#. type: =item
#: debhelper.pod:1124
msgid "B<DH_ALWAYS_EXCLUDE>"
msgstr ""

#. type: textblock
#: debhelper.pod:1126
msgid ""
"If set, this adds the value the variable is set to to the B<-X> options of "
"all commands that support the B<-X> option. Moreover, B<dh_builddeb> will "
"B<rm -rf> anything that matches the value in your package build tree."
msgstr ""

#. type: textblock
#: debhelper.pod:1130
msgid ""
"This can be useful if you are doing a build from a CVS source tree, in which "
"case setting B<DH_ALWAYS_EXCLUDE=CVS> will prevent any CVS directories from "
"sneaking into the package you build. Or, if a package has a source tarball "
"that (unwisely) includes CVS directories, you might want to export "
"B<DH_ALWAYS_EXCLUDE=CVS> in F<debian/rules>, to make it take effect wherever "
"your package is built."
msgstr ""

#. type: textblock
#: debhelper.pod:1137
msgid ""
"Multiple things to exclude can be separated with colons, as in "
"B<DH_ALWAYS_EXCLUDE=CVS:.svn>"
msgstr ""

#. type: =item
#: debhelper.pod:1140
msgid "B<DH_EXTRA_ADDONS>"
msgstr ""

#. type: textblock
#: debhelper.pod:1142
msgid ""
"If set, this adds the specified dh addons to be run in the appropriate "
"places in the sequence of commands. This is equivalent to specifying the "
"addon to run with the --with flag in the debian/rules file. Any --without "
"calls specifying an addon in this environment variable will not be run."
msgstr ""

#. type: textblock
#: debhelper.pod:1147
msgid ""
"This is intended to be used by downstreams or specific local configurations "
"that require a debhelper addon to be run during multiple builds without "
"having to patch a large number of rules file. If at all possible, this "
"should be avoided in favor of a --with flag in the rules file."
msgstr ""

#. type: =head1
#: debhelper.pod:1154 debhelper-obsolete-compat.pod:118 dh:1104 dh_auto_build:53 dh_auto_clean:55 dh_auto_configure:58 dh_auto_install:97 dh_auto_test:64 dh_bugfiles:133 dh_builddeb:182 dh_clean:186 dh_compress:236 dh_dwz:141 dh_fixperms:162 dh_gconf:105 dh_gencontrol:207 dh_icons:75 dh_install:350 dh_installcatalogs:125 dh_installchangelogs:268 dh_installcron:78 dh_installdeb:270 dh_installdebconf:128 dh_installdirs:128 dh_installdocs:444 dh_installemacsen:138 dh_installexamples:175 dh_installifupdown:72 dh_installinfo:107 dh_installinit:425 dh_installinitramfs:85 dh_installlogcheck:81 dh_installlogrotate:53 dh_installman:362 dh_installmanpages:198 dh_installmenu:88 dh_installmime:63 dh_installmodules:109 dh_installpam:62 dh_installppp:68 dh_installudev:102 dh_installwm:129 dh_installxfonts:96 dh_link:163 dh_lintian:60 dh_listpackages:35 dh_makeshlibs:355 dh_md5sums:117 dh_movefiles:161 dh_perl:159 dh_prep:70 dh_shlibdeps:199 dh_strip:427 dh_testdir:63 dh_testroot:91 dh_usrlocal:136 dh_systemd_enable:281 dh_systemd_start:280
msgid "SEE ALSO"
msgstr ""

#. type: =item
#: debhelper.pod:1158
msgid "F</usr/share/doc/debhelper/examples/>"
msgstr ""

#. type: textblock
#: debhelper.pod:1160
msgid "A set of example F<debian/rules> files that use debhelper."
msgstr ""

#. type: =item
#: debhelper.pod:1162
msgid "L<http://joeyh.name/code/debhelper/>"
msgstr ""

#. type: textblock
#: debhelper.pod:1164
msgid "Debhelper web site."
msgstr ""

#. type: =head1
#: debhelper.pod:1168 dh:1110 dh_auto_build:59 dh_auto_clean:61 dh_auto_configure:64 dh_auto_install:103 dh_auto_test:70 dh_bugfiles:141 dh_builddeb:188 dh_clean:192 dh_compress:242 dh_dwz:147 dh_fixperms:168 dh_gconf:111 dh_gencontrol:213 dh_icons:81 dh_install:356 dh_installcatalogs:131 dh_installchangelogs:274 dh_installcron:84 dh_installdeb:276 dh_installdebconf:134 dh_installdirs:134 dh_installdocs:450 dh_installemacsen:145 dh_installexamples:181 dh_installifupdown:78 dh_installinfo:113 dh_installlogcheck:87 dh_installlogrotate:59 dh_installman:368 dh_installmanpages:204 dh_installmenu:96 dh_installmime:69 dh_installmodules:115 dh_installpam:68 dh_installppp:74 dh_installudev:108 dh_installwm:135 dh_installxfonts:102 dh_link:169 dh_lintian:68 dh_listpackages:41 dh_makeshlibs:361 dh_md5sums:123 dh_movefiles:167 dh_perl:165 dh_prep:76 dh_shlibdeps:205 dh_strip:433 dh_testdir:69 dh_testroot:97 dh_usrlocal:142
msgid "AUTHOR"
msgstr ""

#. type: textblock
#: debhelper.pod:1170 dh:1112 dh_auto_build:61 dh_auto_clean:63 dh_auto_configure:66 dh_auto_install:105 dh_auto_test:72 dh_builddeb:190 dh_clean:194 dh_compress:244 dh_fixperms:170 dh_gencontrol:215 dh_install:358 dh_installchangelogs:276 dh_installcron:86 dh_installdeb:278 dh_installdebconf:136 dh_installdirs:136 dh_installdocs:452 dh_installemacsen:147 dh_installexamples:183 dh_installifupdown:80 dh_installinfo:115 dh_installinit:433 dh_installlogrotate:61 dh_installman:370 dh_installmanpages:206 dh_installmenu:98 dh_installmime:71 dh_installmodules:117 dh_installpam:70 dh_installppp:76 dh_installudev:110 dh_installwm:137 dh_installxfonts:104 dh_link:171 dh_listpackages:43 dh_makeshlibs:363 dh_md5sums:125 dh_movefiles:169 dh_prep:78 dh_shlibdeps:207 dh_strip:435 dh_testdir:71 dh_testroot:99
msgid "Joey Hess <joeyh@debian.org>"
msgstr ""

#. type: textblock
#: debhelper-obsolete-compat.pod:3
msgid "debhelper-obsolete-compat - List of no longer supported compat levels"
msgstr ""

#. type: textblock
#: debhelper-obsolete-compat.pod:7
msgid ""
"This document contains the upgrade guidelines from all compat levels which "
"are no longer supported.  Accordingly it is mostly for historical purposes "
"and to assist people upgrading from a non-supported compat level to a "
"supported level."
msgstr ""

#. type: textblock
#: debhelper-obsolete-compat.pod:12
msgid "For upgrades from supported compat levels, please see L<debhelper(7)>."
msgstr ""

#. type: =head1
#: debhelper-obsolete-compat.pod:14
msgid "UPGRADE LIST FOR COMPAT LEVELS"
msgstr ""

#. type: textblock
#: debhelper-obsolete-compat.pod:16
msgid "The following is the list of now obsolete compat levels and their changes."
msgstr ""

#. type: =item
#: debhelper-obsolete-compat.pod:21
msgid "v1"
msgstr ""

#. type: textblock
#: debhelper-obsolete-compat.pod:23
msgid ""
"This is the original debhelper compatibility level, and so it is the default "
"one. In this mode, debhelper will use F<debian/tmp> as the package tree "
"directory for the first binary package listed in the control file, while "
"using debian/I<package> for all other packages listed in the F<control> "
"file."
msgstr ""

#. type: =item
#: debhelper-obsolete-compat.pod:30
msgid "v2"
msgstr ""

#. type: textblock
#: debhelper-obsolete-compat.pod:32
msgid ""
"In this mode, debhelper will consistently use debian/I<package> as the "
"package tree directory for every package that is built."
msgstr ""

#. type: =item
#: debhelper-obsolete-compat.pod:37
msgid "v3"
msgstr ""

#. type: textblock
#: debhelper-obsolete-compat.pod:39
msgid "This mode works like v2, with the following additions:"
msgstr ""

#. type: textblock
#: debhelper-obsolete-compat.pod:45
msgid ""
"Debhelper config files support globbing via B<*> and B<?>, when "
"appropriate. To turn this off and use those characters raw, just prefix with "
"a backslash."
msgstr ""

#. type: textblock
#: debhelper-obsolete-compat.pod:50
msgid ""
"B<dh_makeshlibs> makes the F<postinst> and F<postrm> scripts call "
"B<ldconfig>."
msgstr ""

#. type: textblock
#: debhelper-obsolete-compat.pod:54
msgid ""
"Every file in F<etc/> is automatically flagged as a conffile by "
"B<dh_installdeb>."
msgstr ""

#. type: =item
#: debhelper-obsolete-compat.pod:60
msgid "v4"
msgstr ""

#. type: textblock
#: debhelper-obsolete-compat.pod:62
msgid "Changes from v3 are:"
msgstr ""

#. type: textblock
#: debhelper-obsolete-compat.pod:68
msgid ""
"B<dh_makeshlibs -V> will not include the Debian part of the version number "
"in the generated dependency line in the shlibs file."
msgstr ""

#. type: textblock
#: debhelper-obsolete-compat.pod:73
msgid ""
"You are encouraged to put the new B<${misc:Depends}> into F<debian/control> "
"to supplement the B<${shlibs:Depends}> field."
msgstr ""

#. type: textblock
#: debhelper-obsolete-compat.pod:78
msgid ""
"B<dh_fixperms> will make all files in F<bin/> directories and in "
"F<etc/init.d> executable."
msgstr ""

#. type: textblock
#: debhelper-obsolete-compat.pod:83
msgid "B<dh_link> will correct existing links to conform with policy."
msgstr ""

#. type: textblock
#: debhelper-obsolete-compat.pod:93
msgid "Changes from v4 are:"
msgstr ""

#. type: textblock
#: debhelper-obsolete-compat.pod:99
msgid "Comments are ignored in debhelper config files."
msgstr ""

#. type: textblock
#: debhelper-obsolete-compat.pod:103
msgid ""
"B<dh_strip --dbg-package> now specifies the name of a package to put "
"debugging symbols in, not the packages to take the symbols from."
msgstr ""

#. type: textblock
#: debhelper-obsolete-compat.pod:108
msgid "B<dh_installdocs> skips installing empty files."
msgstr ""

#. type: textblock
#: debhelper-obsolete-compat.pod:112
msgid "B<dh_install> errors out if wildcards expand to nothing."
msgstr ""

#. type: textblock
#: debhelper-obsolete-compat.pod:120 dh:1106 dh_auto_build:55 dh_auto_clean:57 dh_auto_configure:60 dh_auto_install:99 dh_auto_test:66 dh_builddeb:184 dh_clean:188 dh_compress:238 dh_dwz:143 dh_fixperms:164 dh_gconf:107 dh_gencontrol:209 dh_install:352 dh_installcatalogs:127 dh_installchangelogs:270 dh_installcron:80 dh_installdeb:272 dh_installdebconf:130 dh_installdirs:130 dh_installdocs:446 dh_installexamples:177 dh_installifupdown:74 dh_installinfo:109 dh_installlogcheck:83 dh_installlogrotate:55 dh_installman:364 dh_installmanpages:200 dh_installmime:65 dh_installmodules:111 dh_installpam:64 dh_installppp:70 dh_installudev:104 dh_installwm:131 dh_installxfonts:98 dh_link:165 dh_listpackages:37 dh_makeshlibs:357 dh_md5sums:119 dh_movefiles:163 dh_perl:161 dh_prep:72 dh_strip:429 dh_testdir:65 dh_testroot:93 dh_usrlocal:138 dh_systemd_start:282
msgid "L<debhelper(7)>"
msgstr ""

#. type: =head1
#: debhelper-obsolete-compat.pod:122 dh_installinit:431 dh_systemd_enable:285 dh_systemd_start:284
msgid "AUTHORS"
msgstr ""

#. type: textblock
#: debhelper-obsolete-compat.pod:124 dh_dwz:149
msgid "Niels Thykier <niels@thykier.net>"
msgstr ""

#. type: textblock
#: debhelper-obsolete-compat.pod:126
msgid "Joey Hess"
msgstr ""

#. type: textblock
#: dh:5
msgid "dh - debhelper command sequencer"
msgstr ""

#. type: textblock
#: dh:21
msgid ""
"B<dh> I<sequence> [B<--with> I<addon>[B<,>I<addon> ...]] [B<--list>] "
"[S<I<debhelper options>>]"
msgstr ""

#. type: textblock
#: dh:25
msgid ""
"B<dh> runs a sequence of debhelper commands. The supported I<sequence>s "
"correspond to the targets of a F<debian/rules> file: B<build-arch>, "
"B<build-indep>, B<build>, B<clean>, B<install-indep>, B<install-arch>, "
"B<install>, B<binary-arch>, B<binary-indep>, and B<binary>."
msgstr ""

#. type: =head1
#: dh:30
msgid "OVERRIDE TARGETS"
msgstr ""

#. type: textblock
#: dh:32
msgid ""
"A F<debian/rules> file using B<dh> can override the command that is run at "
"any step in a sequence, by defining an override target."
msgstr ""

#. type: textblock
#: dh:35
msgid ""
"To override I<dh_command>, add a target named B<override_>I<dh_command> to "
"the rules file. When it would normally run I<dh_command>, B<dh> will instead "
"call that target. The override target can then run the command with "
"additional options, or run entirely different commands instead. See examples "
"below."
msgstr ""

#. type: textblock
#: dh:41
msgid ""
"Override targets can also be defined to run only when building architecture "
"dependent or architecture independent packages.  Use targets with names like "
"B<override_>I<dh_command>B<-arch> and B<override_>I<dh_command>B<-indep>.  "
"(Note that to use this feature, you should Build-Depend on debhelper 8.9.7 "
"or above.)"
msgstr ""

#. type: =head1
#: dh:48 dh_auto_build:32 dh_auto_clean:33 dh_auto_configure:35 dh_auto_install:46 dh_auto_test:34 dh_bugfiles:53 dh_builddeb:34 dh_clean:47 dh_compress:52 dh_dwz:26 dh_fixperms:40 dh_gconf:42 dh_gencontrol:38 dh_icons:33 dh_install:66 dh_installcatalogs:53 dh_installchangelogs:60 dh_installcron:43 dh_installdebconf:64 dh_installdirs:42 dh_installdocs:90 dh_installemacsen:56 dh_installexamples:41 dh_installifupdown:42 dh_installinfo:38 dh_installinit:78 dh_installinitramfs:43 dh_installlogcheck:45 dh_installlogrotate:25 dh_installman:83 dh_installmanpages:43 dh_installmenu:44 dh_installmodules:41 dh_installpam:34 dh_installppp:38 dh_installudev:34 dh_installwm:38 dh_link:66 dh_makeshlibs:52 dh_md5sums:31 dh_movefiles:41 dh_perl:34 dh_prep:29 dh_shlibdeps:30 dh_strip:38 dh_testdir:26 dh_usrlocal:50 dh_systemd_enable:83 dh_systemd_start:33
msgid "OPTIONS"
msgstr ""

#. type: =item
#: dh:52
msgid "B<--with> I<addon>[B<,>I<addon> ...]"
msgstr ""

#. type: textblock
#: dh:54
msgid ""
"Add the debhelper commands specified by the given addon to appropriate "
"places in the sequence of commands that is run. This option can be repeated "
"more than once, or multiple addons can be listed, separated by commas.  This "
"is used when there is a third-party package that provides debhelper "
"commands. See the F<PROGRAMMING> file for documentation about the sequence "
"addon interface."
msgstr ""

#. type: textblock
#: dh:61
msgid ""
"A B<Build-Depends> relation on the package B<dh-sequence->I<addon> implies a "
"B<--with> I<addon>. This avoids the need for an explicit B<--with> in "
"F<debian/rules> that only duplicates what is already declared via the build "
"dependencies in F<debian/control>.  Note that only relations in the "
"B<Build-Depends> field are considered (i.e. B<Build-Depends-Indep> and "
"B<Build-Depends-Arch> are deliberately unsupported).  Please keep in mind "
"that B<dh> insists on \"simple\" relations (e.g. a relation like "
"\"B<dh-sequence->I<addon> | B<some-other-pkg>\" will I<not> imply B<--with> "
"I<addon>)."
msgstr ""

#. type: =item
#: dh:71
msgid "B<--without> I<addon>"
msgstr ""

#. type: textblock
#: dh:73
msgid ""
"The inverse of B<--with>, disables using the given addon. This option can be "
"repeated more than once, or multiple addons to disable can be listed, "
"separated by commas."
msgstr ""

#. type: textblock
#: dh:79
msgid "List all available addons."
msgstr ""

#. type: textblock
#: dh:81
msgid ""
"When called only with this option, B<dh> can be called from any directory "
"(i.e. it does not need access to files from a source package)."
msgstr ""

#. type: textblock
#: dh:87
msgid "Prints commands that would run for a given sequence, but does not run them."
msgstr ""

#. type: textblock
#: dh:89
msgid ""
"Note that dh normally skips running commands that it knows will do nothing.  "
"With --no-act, the full list of commands in a sequence is printed."
msgstr ""

#. type: textblock
#: dh:94
msgid ""
"Other options passed to B<dh> are passed on to each command it runs. This "
"can be used to set an option like B<-v> or B<-X> or B<-N>, as well as for "
"more specialised options."
msgstr ""

#. type: =head1
#: dh:98 dh_installdocs:181 dh_installman:114 dh_link:88 dh_makeshlibs:155 dh_shlibdeps:78
msgid "EXAMPLES"
msgstr ""

#. type: textblock
#: dh:100
msgid ""
"To see what commands are included in a sequence, without actually doing "
"anything:"
msgstr ""

#. type: verbatim
#: dh:103
#, no-wrap
msgid ""
"\tdh binary-arch --no-act\n"
"\n"
msgstr ""

#. type: textblock
#: dh:105
msgid ""
"This is a very simple rules file, for packages where the default sequences "
"of commands work with no additional options."
msgstr ""

#. type: verbatim
#: dh:108 dh:115 dh:129 dh:142 dh:199 dh:210
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@\n"
"\n"
msgstr ""

#. type: textblock
#: dh:112
msgid ""
"Often you'll want to pass an option to a specific debhelper command. The "
"easy way to do with is by adding an override target for that command."
msgstr ""

#. type: verbatim
#: dh:119
#, no-wrap
msgid ""
"\toverride_dh_strip:\n"
"\t\tdh_strip -Xfoo\n"
"\n"
msgstr ""

#. type: verbatim
#: dh:122
#, no-wrap
msgid ""
"\toverride_dh_auto_configure:\n"
"\t\tdh_auto_configure -- --with-foo --disable-bar\n"
"\n"
msgstr ""

#. type: textblock
#: dh:125
msgid ""
"Sometimes the automated L<dh_auto_configure(1)> and L<dh_auto_build(1)> "
"can't guess what to do for a strange package. Here's how to avoid running "
"either and instead run your own commands."
msgstr ""

#. type: verbatim
#: dh:133
#, no-wrap
msgid ""
"\toverride_dh_auto_configure:\n"
"\t\t./mondoconfig\n"
"\n"
msgstr ""

#. type: verbatim
#: dh:136
#, no-wrap
msgid ""
"\toverride_dh_auto_build:\n"
"\t\tmake universe-explode-in-delight\n"
"\n"
msgstr ""

#. type: textblock
#: dh:139
msgid ""
"Another common case is wanting to do something manually before or after a "
"particular debhelper command is run."
msgstr ""

#. type: verbatim
#: dh:146
#, no-wrap
msgid ""
"\toverride_dh_fixperms:\n"
"\t\tdh_fixperms\n"
"\t\tchmod 4755 debian/foo/usr/bin/foo\n"
"\n"
msgstr ""

#. type: textblock
#: dh:150
msgid ""
"Python tools are not run by dh by default, due to the continual change in "
"that area. Here is how to use B<dh_python2>."
msgstr ""

#. type: verbatim
#: dh:153
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --with python2\n"
"\n"
msgstr ""

#. type: textblock
#: dh:157
msgid ""
"Here is how to force use of Perl's B<Module::Build> build system, which can "
"be necessary if debhelper wrongly detects that the package uses MakeMaker."
msgstr ""

#. type: verbatim
#: dh:161
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --buildsystem=perl_build\n"
"\n"
msgstr ""

#. type: textblock
#: dh:165
msgid ""
"Here is an example of overriding where the B<dh_auto_>I<*> commands find the "
"package's source, for a package where the source is located in a "
"subdirectory."
msgstr ""

#. type: verbatim
#: dh:169
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --sourcedirectory=src\n"
"\n"
msgstr ""

#. type: textblock
#: dh:173
msgid ""
"And here is an example of how to tell the B<dh_auto_>I<*> commands to build "
"in a subdirectory, which will be removed on B<clean>."
msgstr ""

#. type: verbatim
#: dh:176
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --builddirectory=build\n"
"\n"
msgstr ""

#. type: textblock
#: dh:180
msgid ""
"If your package can be built in parallel, please either use compat 10 or "
"pass B<--parallel> to dh. Then B<dpkg-buildpackage -j> will work."
msgstr ""

#. type: verbatim
#: dh:183
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --parallel\n"
"\n"
msgstr ""

#. type: textblock
#: dh:187
msgid ""
"If your package cannot be built reliably while using multiple threads, "
"please pass B<--no-parallel> to dh (or the relevant B<dh_auto_>I<*> "
"command):"
msgstr ""

#. type: verbatim
#: dh:192
#, no-wrap
msgid ""
"\t#!/usr/bin/make -f\n"
"\t%:\n"
"\t\tdh $@ --no-parallel\n"
"\n"
msgstr ""

#. type: textblock
#: dh:196
msgid ""
"Here is a way to prevent B<dh> from running several commands that you don't "
"want it to run, by defining empty override targets for each command."
msgstr ""

#. type: verbatim
#: dh:203
#, no-wrap
msgid ""
"\t# Commands not to run:\n"
"\toverride_dh_auto_test override_dh_compress override_dh_fixperms:\n"
"\n"
msgstr ""

#. type: textblock
#: dh:206
msgid ""
"A long build process for a separate documentation package can be separated "
"out using architecture independent overrides.  These will be skipped when "
"running build-arch and binary-arch sequences."
msgstr ""

#. type: verbatim
#: dh:214
#, no-wrap
msgid ""
"\toverride_dh_auto_build-indep:\n"
"\t\t$(MAKE) -C docs\n"
"\n"
msgstr ""

#. type: verbatim
#: dh:217
#, no-wrap
msgid ""
"\t# No tests needed for docs\n"
"\toverride_dh_auto_test-indep:\n"
"\n"
msgstr ""

#. type: verbatim
#: dh:220
#, no-wrap
msgid ""
"\toverride_dh_auto_install-indep:\n"
"\t\t$(MAKE) -C docs install\n"
"\n"
msgstr ""

#. type: textblock
#: dh:223
msgid ""
"Adding to the example above, suppose you need to chmod a file, but only when "
"building the architecture dependent package, as it's not present when "
"building only documentation."
msgstr ""

#. type: verbatim
#: dh:227
#, no-wrap
msgid ""
"\toverride_dh_fixperms-arch:\n"
"\t\tdh_fixperms\n"
"\t\tchmod 4755 debian/foo/usr/bin/foo\n"
"\n"
msgstr ""

#. type: =head1
#: dh:231
msgid "INTERNALS"
msgstr ""

#. type: textblock
#: dh:233
msgid ""
"If you're curious about B<dh>'s internals, here's how it works under the "
"hood."
msgstr ""

#. type: textblock
#: dh:235
msgid ""
"In compat 10 (or later), B<dh> creates a stamp file "
"F<debian/debhelper-build-stamp> after the build step(s) are complete to "
"avoid re-running them.  It is possible to avoid the stamp file by passing "
"B<--without=build-stamp> to B<dh>.  This makes \"no clean\" builds behave "
"more like what some people expect at the expense of possibly running the "
"build and test twice (the second time as root or under L<fakeroot(1)>)."
msgstr ""

#. type: textblock
#: dh:243
msgid ""
"Inside an override target, B<dh_*> commands will create a log file "
"F<debian/package.debhelper.log> to keep track of which packages the "
"command(s) have been run for.  These log files are then removed once the "
"override target is complete."
msgstr ""

#. type: textblock
#: dh:248
msgid ""
"In compat 9 or earlier, each debhelper command will record when it's "
"successfully run in F<debian/package.debhelper.log>. (Which B<dh_clean> "
"deletes.) So B<dh> can tell which commands have already been run, for which "
"packages, and skip running those commands again."
msgstr ""

#. type: textblock
#: dh:253
msgid ""
"Each time B<dh> is run (in compat 9 or earlier), it examines the log, and "
"finds the last logged command that is in the specified sequence. It then "
"continues with the next command in the sequence. The B<--until>, "
"B<--before>, B<--after>, and B<--remaining> options can override this "
"behavior (though they were removed in compat 10)."
msgstr ""

#. type: textblock
#: dh:259
msgid ""
"A sequence can also run dependent targets in debian/rules.  For example, the "
"\"binary\" sequence runs the \"install\" target."
msgstr ""

#. type: textblock
#: dh:262
msgid ""
"B<dh> uses the B<DH_INTERNAL_OPTIONS> environment variable to pass "
"information through to debhelper commands that are run inside override "
"targets. The contents (and indeed, existence) of this environment variable, "
"as the name might suggest, is subject to change at any time."
msgstr ""

#. type: textblock
#: dh:267
msgid ""
"Commands in the B<build-indep>, B<install-indep> and B<binary-indep> "
"sequences are passed the B<-i> option to ensure they only work on "
"architecture independent packages, and commands in the B<build-arch>, "
"B<install-arch> and B<binary-arch> sequences are passed the B<-a> option to "
"ensure they only work on architecture dependent packages."
msgstr ""

#. type: =head1
#: dh:273
msgid "DEPRECATED OPTIONS"
msgstr ""

#. type: textblock
#: dh:275
msgid ""
"The following options are deprecated. It's much better to use override "
"targets instead.  They are B<not> available in compat 10."
msgstr ""

#. type: =item
#: dh:281
msgid "B<--until> I<cmd>"
msgstr ""

#. type: textblock
#: dh:283
msgid "Run commands in the sequence until and including I<cmd>, then stop."
msgstr ""

#. type: =item
#: dh:285
msgid "B<--before> I<cmd>"
msgstr ""

#. type: textblock
#: dh:287
msgid "Run commands in the sequence before I<cmd>, then stop."
msgstr ""

#. type: =item
#: dh:289
msgid "B<--after> I<cmd>"
msgstr ""

#. type: textblock
#: dh:291
msgid "Run commands in the sequence that come after I<cmd>."
msgstr ""

#. type: =item
#: dh:293
msgid "B<--remaining>"
msgstr ""

#. type: textblock
#: dh:295
msgid "Run all commands in the sequence that have yet to be run."
msgstr ""

#. type: textblock
#: dh:299
msgid ""
"In the above options, I<cmd> can be a full name of a debhelper command, or a "
"substring. It'll first search for a command in the sequence exactly matching "
"the name, to avoid any ambiguity. If there are multiple substring matches, "
"the last one in the sequence will be used."
msgstr ""

#. type: textblock
#: dh:1108 dh_auto_build:57 dh_auto_clean:59 dh_auto_configure:62 dh_auto_install:101 dh_auto_test:68 dh_bugfiles:139 dh_builddeb:186 dh_clean:190 dh_compress:240 dh_dwz:145 dh_fixperms:166 dh_gconf:109 dh_gencontrol:211 dh_icons:79 dh_install:354 dh_installchangelogs:272 dh_installcron:82 dh_installdeb:274 dh_installdebconf:132 dh_installdirs:132 dh_installdocs:448 dh_installemacsen:143 dh_installexamples:179 dh_installifupdown:76 dh_installinfo:111 dh_installinit:429 dh_installinitramfs:91 dh_installlogrotate:57 dh_installman:366 dh_installmanpages:202 dh_installmenu:94 dh_installmime:67 dh_installmodules:113 dh_installpam:66 dh_installppp:72 dh_installudev:106 dh_installwm:133 dh_installxfonts:100 dh_link:167 dh_lintian:64 dh_listpackages:39 dh_makeshlibs:359 dh_md5sums:121 dh_movefiles:165 dh_perl:163 dh_prep:74 dh_shlibdeps:203 dh_strip:431 dh_testdir:67 dh_testroot:95 dh_usrlocal:140
msgid "This program is a part of debhelper."
msgstr ""

#. type: textblock
#: dh_auto_build:5
msgid "dh_auto_build - automatically builds a package"
msgstr ""

#. type: textblock
#: dh_auto_build:18
msgid ""
"B<dh_auto_build> [S<I<build system options>>] [S<I<debhelper options>>] "
"[S<B<--> I<params>>]"
msgstr ""

#. type: textblock
#: dh_auto_build:22
msgid ""
"B<dh_auto_build> is a debhelper program that tries to automatically build a "
"package. It does so by running the appropriate command for the build system "
"it detects the package uses. For example, if a F<Makefile> is found, this is "
"done by running B<make> (or B<MAKE>, if the environment variable is set). If "
"there's a F<setup.py>, or F<Build.PL>, it is run to build the package."
msgstr ""

#. type: textblock
#: dh_auto_build:28
msgid ""
"This is intended to work for about 90% of packages. If it doesn't work, "
"you're encouraged to skip using B<dh_auto_build> at all, and just run the "
"build process manually."
msgstr ""

#. type: textblock
#: dh_auto_build:34 dh_auto_clean:35 dh_auto_configure:37 dh_auto_install:48 dh_auto_test:36
msgid ""
"See L<debhelper(7)/B<BUILD SYSTEM OPTIONS>> for a list of common build "
"system selection and control options."
msgstr ""

#. type: =item
#: dh_auto_build:39 dh_auto_clean:40 dh_auto_configure:42 dh_auto_install:59 dh_auto_test:41 dh_builddeb:48 dh_dwz:50 dh_gencontrol:42 dh_installdebconf:72 dh_installinit:167 dh_makeshlibs:149 dh_shlibdeps:41
msgid "B<--> I<params>"
msgstr ""

#. type: textblock
#: dh_auto_build:41
msgid ""
"Pass I<params> to the program that is run, after the parameters that "
"B<dh_auto_build> usually passes."
msgstr ""

#. type: textblock
#: dh_auto_clean:5
msgid "dh_auto_clean - automatically cleans up after a build"
msgstr ""

#. type: textblock
#: dh_auto_clean:18
msgid ""
"B<dh_auto_clean> [S<I<build system options>>] [S<I<debhelper options>>] "
"[S<B<--> I<params>>]"
msgstr ""

#. type: textblock
#: dh_auto_clean:22
msgid ""
"B<dh_auto_clean> is a debhelper program that tries to automatically clean up "
"after a package build. It does so by running the appropriate command for the "
"build system it detects the package uses. For example, if there's a "
"F<Makefile> and it contains a B<distclean>, B<realclean>, or B<clean> "
"target, then this is done by running B<make> (or B<MAKE>, if the environment "
"variable is set). If there is a F<setup.py> or F<Build.PL>, it is run to "
"clean the package."
msgstr ""

#. type: textblock
#: dh_auto_clean:29
msgid ""
"This is intended to work for about 90% of packages. If it doesn't work, or "
"tries to use the wrong clean target, you're encouraged to skip using "
"B<dh_auto_clean> at all, and just run B<make clean> manually."
msgstr ""

#. type: textblock
#: dh_auto_clean:42
msgid ""
"Pass I<params> to the program that is run, after the parameters that "
"B<dh_auto_clean> usually passes."
msgstr ""

#. type: textblock
#: dh_auto_configure:5
msgid "dh_auto_configure - automatically configure a package prior to building"
msgstr ""

#. type: textblock
#: dh_auto_configure:18
msgid ""
"B<dh_auto_configure> [S<I<build system options>>] [S<I<debhelper options>>] "
"[S<B<--> I<params>>]"
msgstr ""

#. type: textblock
#: dh_auto_configure:22
msgid ""
"B<dh_auto_configure> is a debhelper program that tries to automatically "
"configure a package prior to building. It does so by running the appropriate "
"command for the build system it detects the package uses.  For example, it "
"looks for and runs a F<./configure> script, F<Makefile.PL>, F<Build.PL>, or "
"F<cmake>. A standard set of parameters is determined and passed to the "
"program that is run. Some build systems, such as make, do not need a "
"configure step; for these B<dh_auto_configure> will exit without doing "
"anything."
msgstr ""

#. type: textblock
#: dh_auto_configure:31
msgid ""
"This is intended to work for about 90% of packages. If it doesn't work, "
"you're encouraged to skip using B<dh_auto_configure> at all, and just run "
"F<./configure> or its equivalent manually."
msgstr ""

#. type: textblock
#: dh_auto_configure:44
msgid ""
"Pass I<params> to the program that is run, after the parameters that "
"B<dh_auto_configure> usually passes. For example:"
msgstr ""

#. type: verbatim
#: dh_auto_configure:47
#, no-wrap
msgid ""
"  dh_auto_configure -- --with-foo --enable-bar\n"
"\n"
msgstr ""

#. type: textblock
#: dh_auto_install:5
msgid "dh_auto_install - automatically runs make install or similar"
msgstr ""

#. type: textblock
#: dh_auto_install:20
msgid ""
"B<dh_auto_install> [S<I<build system options>>] [S<I<debhelper options>>] "
"[S<B<--> I<params>>]"
msgstr ""

#. type: textblock
#: dh_auto_install:24
msgid ""
"B<dh_auto_install> is a debhelper program that tries to automatically "
"install built files. It does so by running the appropriate command for the "
"build system it detects the package uses. For example, if there's a "
"F<Makefile> and it contains a B<install> target, then this is done by "
"running B<make> (or B<MAKE>, if the environment variable is set). If there "
"is a F<setup.py> or F<Build.PL>, it is used. Note that the Ant build system "
"does not support installation, so B<dh_auto_install> will not install files "
"built using Ant."
msgstr ""

#. type: textblock
#: dh_auto_install:32
msgid ""
"Unless B<--destdir> option is specified, the files are installed into "
"debian/I<package>/ if there is only one binary package. In the multiple "
"binary package case, the files are instead installed into F<debian/tmp/>, "
"and should be moved from there to the appropriate package build directory "
"using L<dh_install(1)>."
msgstr ""

#. type: textblock
#: dh_auto_install:38
msgid ""
"B<DESTDIR> is used to tell make where to install the files.  If the Makefile "
"was generated by MakeMaker from a F<Makefile.PL>, it will automatically set "
"B<PREFIX=/usr> too, since such Makefiles need that."
msgstr ""

#. type: textblock
#: dh_auto_install:42
msgid ""
"This is intended to work for about 90% of packages. If it doesn't work, or "
"tries to use the wrong install target, you're encouraged to skip using "
"B<dh_auto_install> at all, and just run make install manually."
msgstr ""

#. type: =item
#: dh_auto_install:53 dh_builddeb:38
msgid "B<--destdir=>I<directory>"
msgstr ""

#. type: textblock
#: dh_auto_install:55
msgid ""
"Install files into the specified I<directory>. If this option is not "
"specified, destination directory is determined automatically as described in "
"the L</B<DESCRIPTION>> section."
msgstr ""

#. type: textblock
#: dh_auto_install:61
msgid ""
"Pass I<params> to the program that is run, after the parameters that "
"B<dh_auto_install> usually passes."
msgstr ""

#. type: textblock
#: dh_auto_test:5
msgid "dh_auto_test - automatically runs a package's test suites"
msgstr ""

#. type: textblock
#: dh_auto_test:18
msgid ""
"B<dh_auto_test> [S<I<build system options>>] [S<I<debhelper options>>] "
"[S<B<--> I<params>>]"
msgstr ""

#. type: textblock
#: dh_auto_test:22
msgid ""
"B<dh_auto_test> is a debhelper program that tries to automatically run a "
"package's test suite. It does so by running the appropriate command for the "
"build system it detects the package uses. For example, if there's a Makefile "
"and it contains a B<test> or B<check> target, then this is done by running "
"B<make> (or B<MAKE>, if the environment variable is set). If the test suite "
"fails, the command will exit nonzero. If there's no test suite, it will exit "
"zero without doing anything."
msgstr ""

#. type: textblock
#: dh_auto_test:30
msgid ""
"This is intended to work for about 90% of packages with a test suite. If it "
"doesn't work, you're encouraged to skip using B<dh_auto_test> at all, and "
"just run the test suite manually."
msgstr ""

#. type: textblock
#: dh_auto_test:43
msgid ""
"Pass I<params> to the program that is run, after the parameters that "
"B<dh_auto_test> usually passes."
msgstr ""

#. type: textblock
#: dh_auto_test:50
msgid ""
"If the B<DEB_BUILD_OPTIONS> environment variable contains B<nocheck>, no "
"tests will be performed."
msgstr ""

#. type: textblock
#: dh_bugfiles:5
msgid ""
"dh_bugfiles - install bug reporting customization files into package build "
"directories"
msgstr ""

#. type: textblock
#: dh_bugfiles:17
msgid "B<dh_bugfiles> [B<-A>] [S<I<debhelper options>>]"
msgstr ""

#. type: textblock
#: dh_bugfiles:21
msgid ""
"B<dh_bugfiles> is a debhelper program that is responsible for installing bug "
"reporting customization files (bug scripts and/or bug control files and/or "
"presubj files) into package build directories."
msgstr ""

#. type: =head1
#: dh_bugfiles:25 dh_clean:34 dh_compress:35 dh_gconf:26 dh_install:40 dh_installcatalogs:39 dh_installchangelogs:36 dh_installcron:24 dh_installdeb:25 dh_installdebconf:37 dh_installdirs:28 dh_installdocs:40 dh_installemacsen:30 dh_installexamples:31 dh_installifupdown:25 dh_installinfo:28 dh_installinit:41 dh_installinitramfs:30 dh_installlogcheck:24 dh_installman:73 dh_installmenu:28 dh_installmime:24 dh_installmodules:31 dh_installpam:24 dh_installppp:24 dh_installudev:24 dh_installwm:28 dh_link:46 dh_lintian:24 dh_makeshlibs:29 dh_movefiles:29 dh_systemd_enable:41
msgid "FILES"
msgstr ""

#. type: =item
#: dh_bugfiles:29
msgid "debian/I<package>.bug-script"
msgstr ""

#. type: textblock
#: dh_bugfiles:31
msgid ""
"This is the script to be run by the bug reporting program for generating a "
"bug report template. This file is installed as F<usr/share/bug/package> in "
"the package build directory if no other types of bug reporting customization "
"files are going to be installed for the package in question. Otherwise, this "
"file is installed as F<usr/share/bug/package/script>. Finally, the installed "
"script is given execute permissions."
msgstr ""

#. type: =item
#: dh_bugfiles:38
msgid "debian/I<package>.bug-control"
msgstr ""

#. type: textblock
#: dh_bugfiles:40
msgid ""
"It is the bug control file containing some directions for the bug reporting "
"tool. This file is installed as F<usr/share/bug/package/control> in the "
"package build directory."
msgstr ""

#. type: =item
#: dh_bugfiles:44
msgid "debian/I<package>.bug-presubj"
msgstr ""

#. type: textblock
#: dh_bugfiles:46
msgid ""
"The contents of this file are displayed to the user by the bug reporting "
"tool before allowing the user to write a bug report on the package to the "
"Debian Bug Tracking System. This file is installed as "
"F<usr/share/bug/package/presubj> in the package build directory."
msgstr ""

#. type: textblock
#: dh_bugfiles:59
msgid ""
"Install F<debian/bug-*> files to ALL packages acted on when respective "
"F<debian/package.bug-*> files do not exist. Normally, F<debian/bug-*> will "
"be installed to the first package only."
msgstr ""

#. type: textblock
#: dh_bugfiles:135
msgid "F</usr/share/doc/reportbug/README.developers.gz>"
msgstr ""

#. type: textblock
#: dh_bugfiles:137 dh_lintian:62
msgid "L<debhelper(1)>"
msgstr ""

#. type: textblock
#: dh_bugfiles:143
msgid "Modestas Vainius <modestas@vainius.eu>"
msgstr ""

#. type: textblock
#: dh_builddeb:7
msgid "dh_builddeb - build Debian binary packages"
msgstr ""

#. type: textblock
#: dh_builddeb:19
msgid ""
"B<dh_builddeb> [S<I<debhelper options>>] [B<--destdir=>I<directory>] "
"[B<--filename=>I<name>] [S<B<--> I<params>>]"
msgstr ""

#. type: textblock
#: dh_builddeb:23
msgid ""
"B<dh_builddeb> simply calls L<dpkg-deb(1)> to build a Debian package or "
"packages.  It will also build dbgsym packages when L<dh_strip(1)> and "
"L<dh_gencontrol(1)> have prepared them."
msgstr ""

#. type: textblock
#: dh_builddeb:27
msgid ""
"It supports building multiple binary packages in parallel, when enabled by "
"DEB_BUILD_OPTIONS."
msgstr ""

#. type: textblock
#: dh_builddeb:30
msgid ""
"When the I<Rules-Requires-Root> field is not (effectively)  "
"I<binary-targets>, B<dh_builddeb> will pass B<--root-owner-group> to "
"L<dpkg-deb(1)>."
msgstr ""

#. type: textblock
#: dh_builddeb:40
msgid ""
"Use this if you want the generated F<.deb> files to be put in a directory "
"other than the default of \"F<..>\"."
msgstr ""

#. type: =item
#: dh_builddeb:43
msgid "B<--filename=>I<name>"
msgstr ""

#. type: textblock
#: dh_builddeb:45
msgid ""
"Use this if you want to force the generated .deb file to have a particular "
"file name. Does not work well if more than one .deb is generated!"
msgstr ""

#. type: textblock
#: dh_builddeb:50
msgid "Pass I<params> to L<dpkg-deb(1)> when it is used to build the package."
msgstr ""

#. type: =item
#: dh_builddeb:53
msgid "B<-u>I<params>"
msgstr ""

#. type: textblock
#: dh_builddeb:55
msgid ""
"This is another way to pass I<params> to L<dpkg-deb(1)>.  It is deprecated; "
"use B<--> instead."
msgstr ""

#. type: textblock
#: dh_clean:5
msgid "dh_clean - clean up package build directories"
msgstr ""

#. type: textblock
#: dh_clean:17
msgid ""
"B<dh_clean> [S<I<debhelper options>>] [B<-k>] [B<-d>] [B<-X>I<item>] "
"[S<I<path> ...>]"
msgstr ""

#. type: verbatim
#: dh_clean:21
#, no-wrap
msgid ""
"B<dh_clean> is a debhelper program that is responsible for cleaning up after "
"a\n"
"package is built. It removes the package build directories, and removes "
"some\n"
"other files including F<debian/files>, and any detritus left behind by "
"other\n"
"debhelper commands. It also removes common files that should not appear in "
"a\n"
"Debian diff:\n"
"  #*# *~ DEADJOE *.orig *.rej *.SUMS TAGS .deps/* *.P *-stamp\n"
"\n"
msgstr ""

#. type: textblock
#: dh_clean:28
msgid ""
"It does not run \"make clean\" to clean up after the build process. Use "
"L<dh_auto_clean(1)> to do things like that."
msgstr ""

#. type: textblock
#: dh_clean:31
msgid ""
"B<dh_clean> should be the last debhelper command run in the B<clean> target "
"in F<debian/rules>."
msgstr ""

#. type: =item
#: dh_clean:38
msgid "F<debian/clean>"
msgstr ""

#. type: textblock
#: dh_clean:40
msgid "Can list other paths to be removed."
msgstr ""

#. type: textblock
#: dh_clean:42
msgid ""
"Note that directories listed in this file B<must> end with a trailing "
"slash.  Any content in these directories will be removed as well."
msgstr ""

#. type: =item
#: dh_clean:51 dh_installchangelogs:64
msgid "B<-k>, B<--keep>"
msgstr ""

#. type: textblock
#: dh_clean:53
msgid "This is deprecated, use L<dh_prep(1)> instead."
msgstr ""

#. type: textblock
#: dh_clean:55
msgid "The option is removed in compat 12."
msgstr ""

#. type: =item
#: dh_clean:57
msgid "B<-d>, B<--dirs-only>"
msgstr ""

#. type: textblock
#: dh_clean:59
msgid ""
"Only clean the package build directories, do not clean up any other files at "
"all."
msgstr ""

#. type: =item
#: dh_clean:62 dh_prep:33
msgid "B<-X>I<item> B<--exclude=>I<item>"
msgstr ""

#. type: textblock
#: dh_clean:64
msgid ""
"Exclude files that contain I<item> anywhere in their filename from being "
"deleted, even if they would normally be deleted. You may use this option "
"multiple times to build up a list of things to exclude."
msgstr ""

#. type: =item
#: dh_clean:68
msgid "I<path> ..."
msgstr ""

#. type: textblock
#: dh_clean:70
msgid "Delete these I<path>s too."
msgstr ""

#. type: textblock
#: dh_clean:72
msgid ""
"Note that directories passed as arguments B<must> end with a trailing "
"slash.  Any content in these directories will be removed as well."
msgstr ""

#. type: textblock
#: dh_compress:5
msgid "dh_compress - compress files and fix symlinks in package build directories"
msgstr ""

#. type: textblock
#: dh_compress:19
msgid ""
"B<dh_compress> [S<I<debhelper options>>] [B<-X>I<item>] [B<-A>] [S<I<file> "
"...>]"
msgstr ""

#. type: textblock
#: dh_compress:23
msgid ""
"B<dh_compress> is a debhelper program that is responsible for compressing "
"the files in package build directories, and makes sure that any symlinks "
"that pointed to the files before they were compressed are updated to point "
"to the new files."
msgstr ""

#. type: textblock
#: dh_compress:28
msgid ""
"By default, B<dh_compress> compresses files that Debian policy mandates "
"should be compressed, namely all files in F<usr/share/info>, "
"F<usr/share/man>, files in F<usr/share/doc> that are larger than 4k in size, "
"(except the F<copyright> file, F<.html> and other web files, image files, "
"and files that appear to be already compressed based on their extensions), "
"and all F<changelog> files. Plus PCF fonts underneath "
"F<usr/share/fonts/X11/>"
msgstr ""

#. type: =item
#: dh_compress:39
msgid "debian/I<package>.compress"
msgstr ""

#. type: textblock
#: dh_compress:41
msgid "These files are deprecated."
msgstr ""

#. type: textblock
#: dh_compress:43
msgid ""
"If this file exists, the default files are not compressed. Instead, the file "
"is ran as a shell script, and all filenames that the shell script outputs "
"will be compressed. The shell script will be run from inside the package "
"build directory. Note though that using B<-X> is a much better idea in "
"general; you should only use a F<debian/package.compress> file if you really "
"need to."
msgstr ""

#. type: textblock
#: dh_compress:58
msgid ""
"Exclude files that contain F<item> anywhere in their filename from being "
"compressed. For example, B<-X.tiff> will exclude TIFF files from "
"compression.  You may use this option multiple times to build up a list of "
"things to exclude."
msgstr ""

#. type: textblock
#: dh_compress:65
msgid ""
"Compress all files specified by command line parameters in ALL packages "
"acted on."
msgstr ""

#. type: =item
#: dh_compress:68 dh_installdocs:174 dh_installexamples:82 dh_installinfo:57 dh_installmanpages:47 dh_movefiles:58 dh_testdir:30
msgid "I<file> ..."
msgstr ""

#. type: textblock
#: dh_compress:70
msgid "Add these files to the list of files to compress."
msgstr ""

#. type: =head1
#: dh_compress:74 dh_perl:64 dh_strip:133 dh_usrlocal:66
msgid "CONFORMS TO"
msgstr ""

#. type: textblock
#: dh_compress:76
msgid "Debian policy, version 3.0"
msgstr ""

#. type: textblock
#: dh_dwz:5
msgid "dh_dwz - optimize DWARF debug information in ELF binaries via dwz"
msgstr ""

#. type: textblock
#: dh_dwz:18
msgid "B<dh_dwz> [S<I<debhelper options>>] [B<-X>I<item>] [S<B<--> I<params>>]"
msgstr ""

#. type: textblock
#: dh_dwz:22
msgid ""
"B<dh_dwz> is a debhelper program that will optimize the (uncompressed)  size "
"of the DWARF debug information in ELF binaries.  It does so by running "
"L<dwz(1)> on all the ELF binaries in the package."
msgstr ""

#. type: =item
#: dh_dwz:30
msgid "B<--dwz-multifile>, B<--no-dwz-multifile>"
msgstr ""

#. type: textblock
#: dh_dwz:32
msgid ""
"Whether L<dwz(1)> should generate a I<multifile> from the ELF binaries in "
"the same package (it does by default).  When enabled, if a package ships at "
"least 2 ELF binaries, B<dh_dwz> will instruct L<dwz(1)> to generate a "
"multifile for the package."
msgstr ""

#. type: textblock
#: dh_dwz:37
msgid ""
"Note this options may not work if a package contains more ELF binaries than "
"can fit on a single command line.  If this becomes a problem, please pass "
"B<--no-dwz-multifile> to work around the issue."
msgstr ""

#. type: textblock
#: dh_dwz:41
msgid ""
"The generated multifile will be compressed with B<objcopy "
"--compress-debug-sections>."
msgstr ""

#. type: textblock
#: dh_dwz:46 dh_strip:44
msgid ""
"Exclude files that contain I<item> anywhere in their filename from being "
"stripped. You may use this option multiple times to build up a list of "
"things to exclude."
msgstr ""

#. type: textblock
#: dh_dwz:52
msgid ""
"Pass I<params> to L<dwz(1)> when it processes ELF binaries.  This is mostly "
"useful for setting memory related parameters (e.g. -l and -L)."
msgstr ""

#. type: textblock
#: dh_dwz:59
msgid ""
"If the B<DEB_BUILD_OPTIONS> environment variable contains B<nostrip>, "
"nothing will be stripped, in accordance with Debian policy (section 10.1 "
"\"Binaries\")."
msgstr ""

#. type: textblock
#: dh_dwz:63
msgid ""
"While this tool technically does not remove debug information from binaries, "
"it is still skipped when the B<DEB_BUILD_OPTIONS> environment variable "
"contains B<nostrip>.  This is because B<nostrip> is often used to optimize "
"build times (e.g. for \"build and test\"-cycles) rather than optimizing for "
"size."
msgstr ""

#. type: textblock
#: dh_fixperms:5
msgid "dh_fixperms - fix permissions of files in package build directories"
msgstr ""

#. type: textblock
#: dh_fixperms:18
msgid "B<dh_fixperms> [S<I<debhelper options>>] [B<-X>I<item>]"
msgstr ""

#. type: textblock
#: dh_fixperms:22
msgid ""
"B<dh_fixperms> is a debhelper program that is responsible for setting the "
"permissions of files and directories in package build directories to a sane "
"state -- a state that complies with Debian policy."
msgstr ""

#. type: textblock
#: dh_fixperms:26
msgid ""
"B<dh_fixperms> makes all files in F<usr/share/doc> in the package build "
"directory (excluding files in the F<examples/> directory) be mode 644. It "
"also changes the permissions of all man pages to mode 644. It removes group "
"and other write permission from all files. It removes execute permissions "
"from any libraries, headers, Perl modules, or desktop files that have it "
"set. It makes all files in the standard F<bin> and F<sbin> directories, "
"F<usr/games/> and F<etc/init.d> executable (since v4). Finally, it removes "
"the setuid and setgid bits from all files in the package."
msgstr ""

#. type: textblock
#: dh_fixperms:36
msgid ""
"When the I<Rules-Requires-Root> field has the (effective) value of "
"I<binary-targets>, B<dh_fixperms> will also reset the ownership of all paths "
"to \"root:root\"."
msgstr ""

#. type: =item
#: dh_fixperms:44
msgid "B<-X>I<item>, B<--exclude> I<item>"
msgstr ""

#. type: textblock
#: dh_fixperms:46
msgid ""
"Exclude files that contain I<item> anywhere in their filename from having "
"their permissions changed. You may use this option multiple times to build "
"up a list of things to exclude."
msgstr ""

#. type: textblock
#: dh_gconf:5
msgid "dh_gconf - install GConf defaults files and register schemas (deprecated)"
msgstr ""

#. type: textblock
#: dh_gconf:17
msgid "B<dh_gconf> [S<I<debhelper options>>] [B<--priority=>I<priority>]"
msgstr ""

#. type: textblock
#: dh_gconf:21
msgid ""
"B<dh_gconf> is a debhelper program that is responsible for installing GConf "
"defaults files and registering GConf schemas."
msgstr ""

#. type: textblock
#: dh_gconf:24
msgid "An appropriate dependency on gconf2 will be generated in B<${misc:Depends}>."
msgstr ""

#. type: =item
#: dh_gconf:30
msgid "debian/I<package>.gconf-defaults"
msgstr ""

#. type: textblock
#: dh_gconf:32
msgid ""
"Installed into F<usr/share/gconf/defaults/10_package> in the package build "
"directory, with I<package> replaced by the package name."
msgstr ""

#. type: =item
#: dh_gconf:35
msgid "debian/I<package>.gconf-mandatory"
msgstr ""

#. type: textblock
#: dh_gconf:37
msgid ""
"Installed into F<usr/share/gconf/mandatory/10_package> in the package build "
"directory, with I<package> replaced by the package name."
msgstr ""

#. type: =item
#: dh_gconf:46
msgid "B<--priority> I<priority>"
msgstr ""

#. type: textblock
#: dh_gconf:48
msgid ""
"Use I<priority> (which should be a 2-digit number) as the defaults priority "
"instead of B<10>. Higher values than ten can be used by derived "
"distributions (B<20>), CDD distributions (B<50>), or site-specific packages "
"(B<90>)."
msgstr ""

#. type: textblock
#: dh_gconf:113
msgid "Ross Burton <ross@burtonini.com> Josselin Mouette <joss@debian.org>"
msgstr ""

#. type: textblock
#: dh_gencontrol:5
msgid "dh_gencontrol - generate and install control file"
msgstr ""

#. type: textblock
#: dh_gencontrol:18
msgid "B<dh_gencontrol> [S<I<debhelper options>>] [S<B<--> I<params>>]"
msgstr ""

#. type: textblock
#: dh_gencontrol:22
msgid ""
"B<dh_gencontrol> is a debhelper program that is responsible for generating "
"control files, and installing them into the I<DEBIAN> directory with the "
"proper permissions."
msgstr ""

#. type: textblock
#: dh_gencontrol:26
msgid ""
"This program is merely a wrapper around L<dpkg-gencontrol(1)>, which calls "
"it once for each package being acted on (plus related dbgsym packages), and "
"passes in some additional useful flags."
msgstr ""

#. type: textblock
#: dh_gencontrol:30
msgid ""
"B<Note> that if you use B<dh_gencontrol>, you must also use "
"L<dh_builddeb(1)> to build the packages.  Otherwise, your build may fail to "
"build as B<dh_gencontrol> (via L<dpkg-gencontrol(1)>) declares which "
"packages are built.  As debhelper automatically generates dbgsym packages, "
"it some times adds additional packages, which will be built by "
"L<dh_builddeb(1)>."
msgstr ""

#. type: textblock
#: dh_gencontrol:44
msgid "Pass I<params> to L<dpkg-gencontrol(1)>."
msgstr ""

#. type: =item
#: dh_gencontrol:46
msgid "B<-u>I<params>, B<--dpkg-gencontrol-params=>I<params>"
msgstr ""

#. type: textblock
#: dh_gencontrol:48
msgid ""
"This is another way to pass I<params> to L<dpkg-gencontrol(1)>.  It is "
"deprecated; use B<--> instead."
msgstr ""

#. type: textblock
#: dh_icons:5
msgid "dh_icons - Update caches of Freedesktop icons"
msgstr ""

#. type: textblock
#: dh_icons:18
msgid "B<dh_icons> [S<I<debhelper options>>] [B<-n>]"
msgstr ""

#. type: textblock
#: dh_icons:22
msgid ""
"B<dh_icons> is a debhelper program that updates caches of Freedesktop icons "
"when needed, using the B<update-icon-caches> program provided by GTK+2.12.  "
"Currently this program does not handle installation of the files, though it "
"may do so at a later date, so should be run after icons are installed in the "
"package build directories."
msgstr ""

#. type: textblock
#: dh_icons:28
msgid ""
"It takes care of adding maintainer script fragments to call "
"B<update-icon-caches> for icon directories. (This is not done for gnome and "
"hicolor icons, as those are handled by triggers.)  These commands are "
"inserted into the maintainer scripts by L<dh_installdeb(1)>."
msgstr ""

#. type: =item
#: dh_icons:37 dh_installcatalogs:57 dh_installdebconf:68 dh_installemacsen:60 dh_installinit:82 dh_installinitramfs:47 dh_installmenu:48 dh_installmodules:45 dh_installwm:48 dh_makeshlibs:132 dh_usrlocal:54
msgid "B<-n>, B<--no-scripts>"
msgstr ""

#. type: textblock
#: dh_icons:39
msgid "Do not modify maintainer scripts."
msgstr ""

#. type: textblock
#: dh_icons:77
msgid "L<debhelper>"
msgstr ""

#. type: textblock
#: dh_icons:83
msgid ""
"Ross Burton <ross@burtonini.com> Jordi Mallach <jordi@debian.org> Josselin "
"Mouette <joss@debian.org>"
msgstr ""

#. type: textblock
#: dh_install:5
msgid "dh_install - install files into package build directories"
msgstr ""

#. type: textblock
#: dh_install:17
msgid ""
"B<dh_install> [B<-X>I<item>] [B<--autodest>] [B<--sourcedir=>I<dir>] "
"[S<I<debhelper options>>] [S<I<file|dir> ... I<destdir>>]"
msgstr ""

#. type: textblock
#: dh_install:21
msgid ""
"B<dh_install> is a debhelper program that handles installing files into "
"package build directories. There are many B<dh_install>I<*> commands that "
"handle installing specific types of files such as documentation, examples, "
"man pages, and so on, and they should be used when possible as they often "
"have extra intelligence for those particular tasks. B<dh_install>, then, is "
"useful for installing everything else, for which no particular intelligence "
"is needed. It is a replacement for the old B<dh_movefiles> command."
msgstr ""

#. type: textblock
#: dh_install:29
msgid ""
"This program may be used in one of two ways. If you just have a file or two "
"that the upstream Makefile does not install for you, you can run "
"B<dh_install> on them to move them into place. On the other hand, maybe you "
"have a large package that builds multiple binary packages. You can use the "
"upstream F<Makefile> to install it all into F<debian/tmp>, and then use "
"B<dh_install> to copy directories and files from there into the proper "
"package build directories."
msgstr ""

#. type: textblock
#: dh_install:36
msgid ""
"From debhelper compatibility level 7 on, B<dh_install> will fall back to "
"looking in F<debian/tmp> for files, if it does not find them in the current "
"directory (or wherever you've told it to look using B<--sourcedir>)."
msgstr ""

#. type: =item
#: dh_install:44
msgid "debian/I<package>.install"
msgstr ""

#. type: textblock
#: dh_install:46
msgid ""
"List the files to install into each package and the directory they should be "
"installed to. The format is a set of lines, where each line lists a file or "
"files to install, and at the end of the line tells the directory it should "
"be installed in. The name of the files (or directories) to install should be "
"given relative to the current directory, while the installation directory is "
"given relative to the package build directory. You may use wildcards in the "
"names of the files to install."
msgstr ""

#. type: textblock
#: dh_install:54
msgid ""
"Note that if you list exactly one filename or wildcard-pattern on a line by "
"itself, with no explicit destination, then B<dh_install> will automatically "
"guess the destination to use, the same as if the --autodest option were "
"used."
msgstr ""

#. type: =item
#: dh_install:59
msgid "debian/not-installed"
msgstr ""

#. type: textblock
#: dh_install:61
msgid ""
"Used with the deprecated B<--list-missing> and B<--fail-missing> options.  "
"Please refer to L<dh_missing(1)> for the documentation of this file."
msgstr ""

#. type: =item
#: dh_install:70
msgid "B<--list-missing>"
msgstr ""

#. type: textblock
#: dh_install:72
msgid ""
"B<Deprecated>: Please use B<dh_missing --list-missing> instead.  If you use "
"this option, B<dh_install> will call B<dh_missing> with that option after it "
"has processed all the files.  Please see L<dh_missing(1)> for the "
"documentation of this option."
msgstr ""

#. type: =item
#: dh_install:79
msgid "B<--fail-missing>"
msgstr ""

#. type: textblock
#: dh_install:81
msgid ""
"B<Deprecated>: Please use B<dh_missing --fail-missing> instead.  If you use "
"this option, B<dh_install> will call B<dh_missing> with that option after it "
"has processed all the files.  Please see L<dh_missing(1)> for the "
"documentation of this option."
msgstr ""

#. type: =item
#: dh_install:88 dh_installdirs:59 dh_installdocs:104 dh_installexamples:50 dh_installinfo:47 dh_installman:97 dh_movefiles:45
msgid "B<--sourcedir=>I<dir>"
msgstr ""

#. type: textblock
#: dh_install:90
msgid "Look in the specified directory for files to be installed."
msgstr ""

#. type: textblock
#: dh_install:92
msgid ""
"Note that this is not the same as the B<--sourcedirectory> option used by "
"the B<dh_auto_>I<*> commands. You rarely need to use this option, since "
"B<dh_install> automatically looks for files in F<debian/tmp> in debhelper "
"compatibility level 7 and above."
msgstr ""

#. type: =item
#: dh_install:97
msgid "B<--autodest>"
msgstr ""

#. type: textblock
#: dh_install:99
msgid ""
"Guess as the destination directory to install things to. If this is "
"specified, you should not list destination directories in "
"F<debian/package.install> files or on the command line. Instead, "
"B<dh_install> will guess as follows:"
msgstr ""

#. type: textblock
#: dh_install:104
msgid ""
"Strip off F<debian/tmp> (or the sourcedir if one is given) from the front of "
"the filename, if it is present, and install into the dirname of the "
"filename. So if the filename is F<debian/tmp/usr/bin>, then that directory "
"will be copied to F<debian/package/usr/>. If the filename is "
"F<debian/tmp/etc/passwd>, it will be copied to F<debian/package/etc/>."
msgstr ""

#. type: =item
#: dh_install:110
msgid "I<file|dir> ... I<destdir>"
msgstr ""

#. type: textblock
#: dh_install:112
msgid ""
"Lists files (or directories) to install and where to install them to.  The "
"files will be installed into the first package F<dh_install> acts on."
msgstr ""

#. type: =head1
#: dh_install:325
msgid "LIMITATIONS"
msgstr ""

#. type: textblock
#: dh_install:327
msgid ""
"B<dh_install> cannot rename files or directories, it can only install them "
"with the names they already have into wherever you want in the package build "
"tree."
msgstr ""

#. type: textblock
#: dh_install:331
msgid ""
"However, renaming can be achieved by using B<dh-exec> with compatibility "
"level 9 or later.  An example debian/I<package>.install file using "
"B<dh-exec> could look like:"
msgstr ""

#. type: verbatim
#: dh_install:335
#, no-wrap
msgid ""
" #!/usr/bin/dh-exec\n"
" debian/default.conf => /etc/my-package/start.conf\n"
"\n"
msgstr ""

#. type: textblock
#: dh_install:338
msgid "Please remember the following three things:"
msgstr ""

#. type: =item
#: dh_install:342
msgid ""
"* The package must be using compatibility level 9 or later (see "
"L<debhelper(7)>)"
msgstr ""

#. type: =item
#: dh_install:344
msgid "* The package will need a build-dependency on dh-exec."
msgstr ""

#. type: =item
#: dh_install:346
msgid "* The install file must be marked as executable."
msgstr ""

#. type: textblock
#: dh_installcatalogs:5
msgid "dh_installcatalogs - install and register SGML Catalogs"
msgstr ""

#. type: textblock
#: dh_installcatalogs:19
msgid "B<dh_installcatalogs> [S<I<debhelper options>>] [B<-n>]"
msgstr ""

#. type: textblock
#: dh_installcatalogs:23
msgid ""
"B<dh_installcatalogs> is a debhelper program that installs and registers "
"SGML catalogs. It complies with the Debian XML/SGML policy."
msgstr ""

#. type: textblock
#: dh_installcatalogs:26
msgid ""
"Catalogs will be registered in a supercatalog, in "
"F</etc/sgml/I<package>.cat>."
msgstr ""

#. type: textblock
#: dh_installcatalogs:29
msgid ""
"This command automatically adds maintainer script snippets for registering "
"and unregistering the catalogs and supercatalogs (unless B<-n> is "
"used). These snippets are inserted into the maintainer scripts and the "
"B<triggers> file by B<dh_installdeb>; see L<dh_installdeb(1)> for an "
"explanation of Debhelper maintainer script snippets."
msgstr ""

#. type: textblock
#: dh_installcatalogs:36
msgid ""
"A dependency on B<sgml-base> will be added to B<${misc:Depends}>, so be sure "
"your package uses that variable in F<debian/control>."
msgstr ""

#. type: =item
#: dh_installcatalogs:43
msgid "debian/I<package>.sgmlcatalogs"
msgstr ""

#. type: textblock
#: dh_installcatalogs:45
msgid ""
"Lists the catalogs to be installed per package. Each line in that file "
"should be of the form C<I<source> I<dest>>, where I<source> indicates where "
"the catalog resides in the source tree, and I<dest> indicates the "
"destination location for the catalog under the package build area. I<dest> "
"should start with F</usr/share/sgml/>."
msgstr ""

#. type: textblock
#: dh_installcatalogs:59
msgid ""
"Do not modify F<postinst>/F<postrm>/F<prerm> scripts nor add an activation "
"trigger."
msgstr ""

#. type: textblock
#: dh_installcatalogs:66 dh_installemacsen:77 dh_installinit:207 dh_installinitramfs:55 dh_installmodules:59 dh_installudev:52 dh_installwm:65 dh_usrlocal:62
msgid ""
"Note that this command is not idempotent. L<dh_prep(1)> should be called "
"between invocations of this command. Otherwise, it may cause multiple "
"instances of the same text to be added to maintainer scripts."
msgstr ""

#. type: textblock
#: dh_installcatalogs:129
msgid "F</usr/share/doc/sgml-base-doc/>"
msgstr ""

#. type: textblock
#: dh_installcatalogs:133
msgid "Adam Di Carlo <aph@debian.org>"
msgstr ""

#. type: textblock
#: dh_installchangelogs:5
msgid "dh_installchangelogs - install changelogs into package build directories"
msgstr ""

#. type: textblock
#: dh_installchangelogs:17
msgid ""
"B<dh_installchangelogs> [S<I<debhelper options>>] [B<-k>] [B<-X>I<item>] "
"[I<upstream>]"
msgstr ""

#. type: textblock
#: dh_installchangelogs:21
msgid ""
"B<dh_installchangelogs> is a debhelper program that is responsible for "
"installing changelogs into package build directories."
msgstr ""

#. type: textblock
#: dh_installchangelogs:24
msgid "An upstream F<changelog> file may be specified as an option."
msgstr ""

#. type: textblock
#: dh_installchangelogs:26
msgid ""
"If there is an upstream F<changelog> file, it will be installed as "
"F<usr/share/doc/package/changelog> in the package build directory."
msgstr ""

#. type: textblock
#: dh_installchangelogs:29
msgid ""
"If the specified upstream changelog is an F<html> file (determined by file "
"extension), it will be installed as F<usr/share/doc/package/changelog.html> "
"instead. If the html changelog is converted to plain text, that variant can "
"be specified as a second upstream changelog file. When no plain text variant "
"is specified, a short F<usr/share/doc/package/changelog> is generated, "
"pointing readers at the html changelog file."
msgstr ""

#. type: =item
#: dh_installchangelogs:40
msgid "F<debian/changelog>"
msgstr ""

#. type: =item
#: dh_installchangelogs:42
msgid "F<debian/NEWS>"
msgstr ""

#. type: =item
#: dh_installchangelogs:44
msgid "debian/I<package>.changelog"
msgstr ""

#. type: =item
#: dh_installchangelogs:46
msgid "debian/I<package>.NEWS"
msgstr ""

#. type: textblock
#: dh_installchangelogs:48
msgid ""
"Automatically installed into usr/share/doc/I<package>/ in the package build "
"directory."
msgstr ""

#. type: textblock
#: dh_installchangelogs:51
msgid ""
"Use the package specific name if I<package> needs a different F<NEWS> or "
"F<changelog> file."
msgstr ""

#. type: textblock
#: dh_installchangelogs:54
msgid ""
"The F<changelog> file is installed with a name of changelog for native "
"packages, and F<changelog.Debian> for non-native packages.  The F<NEWS> file "
"is always installed with a name of F<NEWS.Debian>."
msgstr ""

#. type: textblock
#: dh_installchangelogs:66
msgid ""
"Keep the original name of the upstream changelog. This will be accomplished "
"by installing the upstream changelog as F<changelog>, and making a symlink "
"from that to the original name of the F<changelog> file. This can be useful "
"if the upstream changelog has an unusual name, or if other documentation in "
"the package refers to the F<changelog> file."
msgstr ""

#. type: textblock
#: dh_installchangelogs:74
msgid ""
"Exclude upstream F<changelog> files that contain I<item> anywhere in their "
"filename from being installed."
msgstr ""

#. type: textblock
#: dh_installchangelogs:77
msgid "Note that directory name of the changelog is also part of the match."
msgstr ""

#. type: =item
#: dh_installchangelogs:79
msgid "I<upstream>"
msgstr ""

#. type: textblock
#: dh_installchangelogs:81
msgid "Install this file as the upstream changelog."
msgstr ""

#. type: textblock
#: dh_installcron:5
msgid "dh_installcron - install cron scripts into etc/cron.*"
msgstr ""

#. type: textblock
#: dh_installcron:17
msgid "B<dh_installcron> [S<B<debhelper options>>] [B<--name=>I<name>]"
msgstr ""

#. type: textblock
#: dh_installcron:21
msgid ""
"B<dh_installcron> is a debhelper program that is responsible for installing "
"cron scripts."
msgstr ""

#. type: =item
#: dh_installcron:28
msgid "debian/I<package>.cron.daily"
msgstr ""

#. type: =item
#: dh_installcron:30
msgid "debian/I<package>.cron.weekly"
msgstr ""

#. type: =item
#: dh_installcron:32
msgid "debian/I<package>.cron.monthly"
msgstr ""

#. type: =item
#: dh_installcron:34
msgid "debian/I<package>.cron.hourly"
msgstr ""

#. type: =item
#: dh_installcron:36
msgid "debian/I<package>.cron.d"
msgstr ""

#. type: textblock
#: dh_installcron:38
msgid ""
"Installed into the appropriate F<etc/cron.*/> directory in the package build "
"directory."
msgstr ""

#. type: =item
#: dh_installcron:47 dh_installifupdown:46 dh_installinit:175 dh_installlogcheck:49 dh_installlogrotate:29 dh_installmodules:49 dh_installpam:38 dh_installppp:42 dh_installudev:38 dh_systemd_enable:95
msgid "B<--name=>I<name>"
msgstr ""

#. type: textblock
#: dh_installcron:49
msgid ""
"Look for files named F<debian/package.name.cron.*> and install them as "
"F<etc/cron.*/name>, instead of using the usual files and installing them as "
"the package name."
msgstr ""

#. type: textblock
#: dh_installdeb:5
msgid "dh_installdeb - install files into the DEBIAN directory"
msgstr ""

#. type: textblock
#: dh_installdeb:17
msgid "B<dh_installdeb> [S<I<debhelper options>>]"
msgstr ""

#. type: textblock
#: dh_installdeb:21
msgid ""
"B<dh_installdeb> is a debhelper program that is responsible for installing "
"files into the F<DEBIAN> directories in package build directories with the "
"correct permissions."
msgstr ""

#. type: =item
#: dh_installdeb:29
msgid "I<package>.postinst"
msgstr ""

#. type: =item
#: dh_installdeb:31
msgid "I<package>.preinst"
msgstr ""

#. type: =item
#: dh_installdeb:33
msgid "I<package>.postrm"
msgstr ""

#. type: =item
#: dh_installdeb:35
msgid "I<package>.prerm"
msgstr ""

#. type: textblock
#: dh_installdeb:37
msgid "These maintainer scripts are installed into the F<DEBIAN> directory."
msgstr ""

#. type: textblock
#: dh_installdeb:39
msgid ""
"Inside the scripts, the token B<#DEBHELPER#> is replaced with shell script "
"snippets generated by other debhelper commands."
msgstr ""

#. type: =item
#: dh_installdeb:42
msgid "I<package>.triggers"
msgstr ""

#. type: =item
#: dh_installdeb:44
msgid "I<package>.shlibs"
msgstr ""

#. type: textblock
#: dh_installdeb:46
msgid "These control files are installed into the F<DEBIAN> directory."
msgstr ""

#. type: textblock
#: dh_installdeb:48
msgid ""
"Note that I<package>.shlibs is only installed in compat level 9 and "
"earlier.  In compat 10, please use L<dh_makeshlibs(1)>."
msgstr ""

#. type: =item
#: dh_installdeb:51
msgid "I<package>.conffiles"
msgstr ""

#. type: textblock
#: dh_installdeb:53
msgid ""
"Historically, this file was needed to manually mark files files as "
"conffiles.  However, it has become de facto obsolete since debhelper "
"automatically computed which files should be marked as conffiles."
msgstr ""

#. type: textblock
#: dh_installdeb:57
msgid ""
"In compatibility level up and including 11, this control file will be "
"installed into the F<DEBIAN> directory.  In compatibility level 12 and "
"later, the file is silently ignored."
msgstr ""

#. type: =item
#: dh_installdeb:61
msgid "I<package>.maintscript"
msgstr ""

#. type: textblock
#: dh_installdeb:63
msgid ""
"Lines in this file correspond to L<dpkg-maintscript-helper(1)> commands and "
"parameters.  However, the \"maint-script-parameters\" should I<not> be "
"included as debhelper will add those automatically."
msgstr ""

#. type: textblock
#: dh_installdeb:67
msgid "Example:"
msgstr ""

#. type: verbatim
#: dh_installdeb:69
#, no-wrap
msgid ""
"    # Correct\n"
"    rm_conffile /etc/obsolete.conf 0.2~ foo\n"
"    # INCORRECT\n"
"    rm_conffile /etc/obsolete.conf 0.2~ foo -- \"$@\"\n"
"\n"
msgstr ""

#. type: textblock
#: dh_installdeb:74
msgid ""
"In compat 10 or later, any shell metacharacters will be escaped, so "
"arbitrary shell code cannot be inserted here.  For example, a line such as "
"C<mv_conffile /etc/oldconffile /etc/newconffile> will insert maintainer "
"script snippets into all maintainer scripts sufficient to move that "
"conffile."
msgstr ""

#. type: textblock
#: dh_installdeb:80
msgid ""
"It was also the intention to escape shell metacharacters in previous compat "
"levels.  However, it did not work properly and as such it was possible to "
"embed arbitrary shell code in earlier compat levels."
msgstr ""

#. type: textblock
#: dh_installdeb:84
msgid ""
"The B<dh_installdeb> tool will do some basic validation of some of the "
"commands listed in this file to catch common mistakes.  The validation is "
"enabled as a warning since compat 10 and as a hard error in compat 12."
msgstr ""

#. type: textblock
#: dh_installdebconf:5
msgid ""
"dh_installdebconf - install files used by debconf in package build "
"directories"
msgstr ""

#. type: textblock
#: dh_installdebconf:17
msgid "B<dh_installdebconf> [S<I<debhelper options>>] [B<-n>] [S<B<--> I<params>>]"
msgstr ""

#. type: textblock
#: dh_installdebconf:21
msgid ""
"B<dh_installdebconf> is a debhelper program that is responsible for "
"installing files used by debconf into package build directories."
msgstr ""

#. type: textblock
#: dh_installdebconf:24
msgid ""
"It also automatically generates the F<postrm> commands needed to interface "
"with debconf. The commands are added to the maintainer scripts by "
"B<dh_installdeb>. See L<dh_installdeb(1)> for an explanation of how that "
"works."
msgstr ""

#. type: textblock
#: dh_installdebconf:29
msgid ""
"Note that if you use debconf, your package probably needs to depend on it "
"(it will be added to B<${misc:Depends}> by this program)."
msgstr ""

#. type: textblock
#: dh_installdebconf:32
msgid ""
"Note that for your config script to be called by B<dpkg>, your F<postinst> "
"needs to source debconf's confmodule. B<dh_installdebconf> does not install "
"this statement into the F<postinst> automatically as it is too hard to do it "
"right."
msgstr ""

#. type: =item
#: dh_installdebconf:41
msgid "debian/I<package>.config"
msgstr ""

#. type: textblock
#: dh_installdebconf:43
msgid ""
"This is the debconf F<config> script, and is installed into the F<DEBIAN> "
"directory in the package build directory."
msgstr ""

#. type: textblock
#: dh_installdebconf:46
msgid ""
"Inside the script, the token B<#DEBHELPER#> is replaced with shell script "
"snippets generated by other debhelper commands."
msgstr ""

#. type: =item
#: dh_installdebconf:49
msgid "debian/I<package>.templates"
msgstr ""

#. type: textblock
#: dh_installdebconf:51
msgid ""
"This is the debconf F<templates> file, and is installed into the F<DEBIAN> "
"directory in the package build directory."
msgstr ""

#. type: =item
#: dh_installdebconf:54
msgid "F<debian/po/>"
msgstr ""

#. type: textblock
#: dh_installdebconf:56
msgid ""
"If this directory is present, this program will automatically use "
"L<po2debconf(1)> to generate merged templates files that include the "
"translations from there."
msgstr ""

#. type: textblock
#: dh_installdebconf:60
msgid "For this to work, your package should build-depend on F<po-debconf>."
msgstr ""

#. type: textblock
#: dh_installdebconf:70
msgid "Do not modify F<postrm> script."
msgstr ""

#. type: textblock
#: dh_installdebconf:74
msgid "Pass the params to B<po2debconf>."
msgstr ""

#. type: textblock
#: dh_installdirs:5
msgid "dh_installdirs - create subdirectories in package build directories"
msgstr ""

#. type: textblock
#: dh_installdirs:17
msgid ""
"B<dh_installdirs> [S<I<debhelper options>>] [B<-A>] [B<--sourcedir=>I<dir>] "
"[B<--create-in-sourcedir>] [S<I<dir> ...>]"
msgstr ""

#. type: textblock
#: dh_installdirs:21
msgid ""
"B<dh_installdirs> is a debhelper program that is responsible for creating "
"subdirectories in package build directories."
msgstr ""

#. type: textblock
#: dh_installdirs:24
msgid ""
"Many packages can get away with omitting the call to B<dh_installdirs> "
"completely.  Notably, other B<dh_*> commands are expected to create "
"directories as needed."
msgstr ""

#. type: =item
#: dh_installdirs:32
msgid "debian/I<package>.dirs"
msgstr ""

#. type: textblock
#: dh_installdirs:34
msgid "Lists directories to be created in I<package>."
msgstr ""

#. type: textblock
#: dh_installdirs:36
msgid ""
"Generally, there is no need to list directories created by the upstream "
"build system or directories needed by other B<debhelper> commands."
msgstr ""

#. type: textblock
#: dh_installdirs:48
msgid ""
"Create any directories specified by command line parameters in ALL packages "
"acted on, not just the first."
msgstr ""

#. type: =item
#: dh_installdirs:51
msgid "B<--create-in-sourcedir>, B<--no-create-in-sourcedir>"
msgstr ""

#. type: textblock
#: dh_installdirs:53
msgid ""
"Whether to create the specified directories in the source directory (usually "
"F<debian/tmp>) I<in addition to> in the package build directory (usually F<< "
"debian/I<package> >>)."
msgstr ""

#. type: textblock
#: dh_installdirs:57
msgid "The default is B<--no-create-in-sourcedir>."
msgstr ""

#. type: textblock
#: dh_installdirs:61
msgid ""
"Consider I<dir> the source directory for the packages acted on instead of "
"the default (which is usually F<debian/tmp>)."
msgstr ""

#. type: textblock
#: dh_installdirs:64
msgid ""
"Please note that this option is dependent on the B<--create-in-sourcedir> "
"option (when B<--no-create-in-sourcedir> is in effect, this option does "
"nothing in B<dh_installdirs>)."
msgstr ""

#. type: =item
#: dh_installdirs:68
msgid "I<dir> ..."
msgstr ""

#. type: textblock
#: dh_installdirs:70
msgid ""
"Create these directories in the package build directory of the first package "
"acted on. (Or in all packages if B<-A> is specified.)"
msgstr ""

#. type: textblock
#: dh_installdocs:7
msgid "dh_installdocs - install documentation into package build directories"
msgstr ""

#. type: textblock
#: dh_installdocs:19
msgid ""
"B<dh_installdocs> [S<I<debhelper options>>] [B<-A>] [B<-X>I<item>] "
"[S<I<file> ...>]"
msgstr ""

#. type: textblock
#: dh_installdocs:23
msgid ""
"B<dh_installdocs> is a debhelper program that is responsible for installing "
"documentation into F<usr/share/doc/package> in package build directories."
msgstr ""

#. type: textblock
#: dh_installdocs:26
msgid ""
"In compat 10 and earlier, L<dh_install(1)> may be a better tool for handling "
"the upstream documentation, when upstream's own build system installs all "
"the desired documentation correctly.  In this case, B<dh_installdocs> is "
"still useful for installing packaging related documentation (e.g. the "
"F<debian/copyright> file)."
msgstr ""

#. type: textblock
#: dh_installdocs:31 dh_installexamples:27 dh_installinfo:24 dh_installman:69
msgid ""
"From debhelper compatibility level 11 on, B<dh_install> will fall back to "
"looking in F<debian/tmp> for files, if it does not find them in the current "
"directory (or wherever you've told it to look using B<--sourcedir>)."
msgstr ""

#. type: textblock
#: dh_installdocs:35
msgid ""
"In compat 11 and later, B<dh_installdocs> offers many of the features that "
"L<dh_install(1)> also has.  Furthermore, B<dh_installdocs> also supports the "
"B<nodoc> build profile to exclude documentation (regardless of compat "
"level)."
msgstr ""

#. type: =item
#: dh_installdocs:44
msgid "debian/I<package>.docs"
msgstr ""

#. type: textblock
#: dh_installdocs:46
msgid "List documentation files to be installed into I<package>."
msgstr ""

#. type: =item
#: dh_installdocs:48
msgid "F<debian/copyright>"
msgstr ""

#. type: textblock
#: dh_installdocs:50
msgid ""
"The copyright file is installed into all packages, unless a more specific "
"copyright file is available."
msgstr ""

#. type: =item
#: dh_installdocs:53
msgid "debian/I<package>.copyright"
msgstr ""

#. type: =item
#: dh_installdocs:55
msgid "debian/I<package>.README.Debian"
msgstr ""

#. type: =item
#: dh_installdocs:57
msgid "debian/I<package>.TODO"
msgstr ""

#. type: textblock
#: dh_installdocs:59
msgid "Each of these files is automatically installed if present for a I<package>."
msgstr ""

#. type: =item
#: dh_installdocs:62
msgid "F<debian/README.Debian>"
msgstr ""

#. type: =item
#: dh_installdocs:64
msgid "F<debian/TODO>"
msgstr ""

#. type: textblock
#: dh_installdocs:66
msgid ""
"These files are installed into the first binary package listed in "
"debian/control."
msgstr ""

#. type: textblock
#: dh_installdocs:69
msgid ""
"Note that F<README.debian> files are also installed as F<README.Debian>, and "
"F<TODO> files will be installed as F<TODO.Debian> in non-native packages."
msgstr ""

#. type: =item
#: dh_installdocs:72
msgid "debian/I<package>.doc-base"
msgstr ""

#. type: textblock
#: dh_installdocs:74
msgid ""
"Installed as doc-base control files. Note that the doc-id will be determined "
"from the B<Document:> entry in the doc-base control file in question. In the "
"event that multiple doc-base files in a single source package share the same "
"doc-id, they will be installed to usr/share/doc-base/package instead of "
"usr/share/doc-base/doc-id."
msgstr ""

#. type: =item
#: dh_installdocs:80
msgid "debian/I<package>.doc-base.*"
msgstr ""

#. type: textblock
#: dh_installdocs:82
msgid ""
"If your package needs to register more than one document, you need multiple "
"doc-base files, and can name them like this. In the event that multiple "
"doc-base files of this style in a single source package share the same "
"doc-id, they will be installed to usr/share/doc-base/package-* instead of "
"usr/share/doc-base/doc-id."
msgstr ""

#. type: textblock
#: dh_installdocs:96 dh_installinfo:44 dh_installman:89
msgid ""
"Install all files specified by command line parameters in ALL packages acted "
"on."
msgstr ""

#. type: textblock
#: dh_installdocs:101
msgid ""
"Exclude files that contain I<item> anywhere in their filename from being "
"installed. Note that this includes doc-base files."
msgstr ""

#. type: textblock
#: dh_installdocs:106 dh_installexamples:52 dh_installinfo:49 dh_installman:99
msgid ""
"Look in the specified directory for files to be installed.  This option "
"requires compat 11 or later (it is silently ignored in compat 10 or "
"earlier)."
msgstr ""

#. type: textblock
#: dh_installdocs:109 dh_installman:102
msgid ""
"Note that this is not the same as the B<--sourcedirectory> option used by "
"the B<dh_auto_>I<*> commands. You rarely need to use this option, since "
"B<dh_installman> automatically looks for files in F<debian/tmp> in debhelper "
"compatibility level 11 and above."
msgstr ""

#. type: =item
#: dh_installdocs:114 dh_installexamples:60
msgid "B<--doc-main-package=>I<main-package>"
msgstr ""

#. type: textblock
#: dh_installdocs:116 dh_installexamples:62
msgid ""
"Set the main package for a documentation package.  This is used to install "
"the documentation of the documentation package in F<< "
"/usr/share/doc/I<main-package> >> as recommended by the Debian policy manual "
"3.9.7 in §12.3."
msgstr ""

#. type: textblock
#: dh_installdocs:121 dh_installexamples:67
msgid ""
"In compat 11 (or later), this option is only useful if debhelper's "
"auto-detection of the main package is wrong.  The option can also be used to "
"silence a warning from debhelper when the auto-detection fails but the "
"default happens to be correct."
msgstr ""

#. type: textblock
#: dh_installdocs:126
msgid ""
"This option cannot be used when B<dh_installdocs> is instructed to act on "
"multiple packages.  If you need this option, you will generally need to "
"combine it with B<-p> to ensure exactly one package is acted on."
msgstr ""

#. type: textblock
#: dh_installdocs:131
msgid ""
"Please keep in mind that some documentation (the copyright file, "
"README.Debian, etc.) will be unaffected by this option."
msgstr ""

#. type: =item
#: dh_installdocs:134
msgid "B<--link-doc=>I<package>"
msgstr ""

#. type: textblock
#: dh_installdocs:136
msgid ""
"Make the documentation directory of all packages acted on be a symlink to "
"the documentation directory of I<package>. This has no effect when acting on "
"I<package> itself, or if the documentation directory to be created already "
"exists when B<dh_installdocs> is run. To comply with policy, I<package> must "
"be a binary package that comes from the same source package."
msgstr ""

#. type: textblock
#: dh_installdocs:142
msgid ""
"debhelper will try to avoid installing files into linked documentation "
"directories that would cause conflicts with the linked package. The B<-A> "
"option will have no effect on packages with linked documentation "
"directories, and F<copyright>, F<changelog>, F<README.Debian>, and F<TODO> "
"files will not be installed."
msgstr ""

#. type: textblock
#: dh_installdocs:148
msgid ""
"(An older method to accomplish the same thing, which is still supported, is "
"to make the documentation directory of a package be a dangling symlink, "
"before calling B<dh_installdocs>.)"
msgstr ""

#. type: textblock
#: dh_installdocs:152
msgid ""
"Please note that this option only applies to the documentation directory for "
"the package itself.  When the package ships documentation for another "
"package (e.g. see B<--doc-main-package>), it will not use a symlink for the "
"documentation of the other package."
msgstr ""

#. type: textblock
#: dh_installdocs:158
msgid ""
"B<CAVEAT 1>: If a previous version of the package was built without this "
"option and is now built with it (or vice-versa), it requires a \"dir to "
"symlink\" (or \"symlink to dir\") migration.  Since debhelper has no "
"knowledge of previous versions, you have to enable this migration itself."
msgstr ""

#. type: textblock
#: dh_installdocs:164
msgid ""
"This can be done by providing a \"debian/I<package>.maintscript\" file and "
"using L<dh_installdeb(1)> to provide the relevant maintainer script "
"snippets."
msgstr ""

#. type: textblock
#: dh_installdocs:168
msgid ""
"B<CAVEAT 2>: The use of B<--link-doc> should only be done when the packages "
"have same \"architecture\" type.  A link from an architecture independent "
"package to an architecture dependent package (or vice versa) will not work.  "
"Since compat 10, debhelper will actively reject unsupported combinations."
msgstr ""

#. type: textblock
#: dh_installdocs:176
msgid ""
"Install these files as documentation into the first package acted on. (Or in "
"all packages if B<-A> is specified)."
msgstr ""

#. type: textblock
#: dh_installdocs:183
msgid "This is an example of a F<debian/package.docs> file:"
msgstr ""

#. type: verbatim
#: dh_installdocs:185
#, no-wrap
msgid ""
"  README\n"
"  TODO\n"
"  debian/notes-for-maintainers.txt\n"
"  docs/manual.txt\n"
"  docs/manual.pdf\n"
"  docs/manual-html/\n"
"\n"
msgstr ""

#. type: textblock
#: dh_installdocs:194
msgid ""
"Note that B<dh_installdocs> will happily copy entire directory hierarchies "
"if you ask it to (similar to B<cp -a>). If it is asked to install a "
"directory, it will install the complete contents of the directory."
msgstr ""

#. type: textblock
#: dh_installemacsen:5
msgid "dh_installemacsen - register an Emacs add on package"
msgstr ""

#. type: textblock
#: dh_installemacsen:17
msgid ""
"B<dh_installemacsen> [S<I<debhelper options>>] [B<-n>] [B<--priority=>I<n>] "
"[B<--flavor=>I<foo>]"
msgstr ""

#. type: textblock
#: dh_installemacsen:21
msgid ""
"B<dh_installemacsen> is a debhelper program that is responsible for "
"installing files used by the Debian B<emacsen-common> package into package "
"build directories."
msgstr ""

#. type: textblock
#: dh_installemacsen:25
msgid ""
"It also automatically generates the F<preinst> F<postinst> and F<prerm> "
"commands needed to register a package as an Emacs add on package. The "
"commands are added to the maintainer scripts by B<dh_installdeb>. See "
"L<dh_installdeb(1)> for an explanation of how this works."
msgstr ""

#. type: =item
#: dh_installemacsen:34
msgid "debian/I<package>.emacsen-compat"
msgstr ""

#. type: textblock
#: dh_installemacsen:36
msgid ""
"Installed into F<usr/lib/emacsen-common/packages/compat/package> in the "
"package build directory."
msgstr ""

#. type: =item
#: dh_installemacsen:39
msgid "debian/I<package>.emacsen-install"
msgstr ""

#. type: textblock
#: dh_installemacsen:41
msgid ""
"Installed into F<usr/lib/emacsen-common/packages/install/package> in the "
"package build directory."
msgstr ""

#. type: =item
#: dh_installemacsen:44
msgid "debian/I<package>.emacsen-remove"
msgstr ""

#. type: textblock
#: dh_installemacsen:46
msgid ""
"Installed into F<usr/lib/emacsen-common/packages/remove/package> in the "
"package build directory."
msgstr ""

#. type: =item
#: dh_installemacsen:49
msgid "debian/I<package>.emacsen-startup"
msgstr ""

#. type: textblock
#: dh_installemacsen:51
msgid ""
"Installed into etc/emacs/site-start.d/50I<package>.el in the package build "
"directory. Use B<--priority> to use a different priority than 50."
msgstr ""

#. type: textblock
#: dh_installemacsen:62 dh_usrlocal:56
msgid "Do not modify F<postinst>/F<prerm> scripts."
msgstr ""

#. type: =item
#: dh_installemacsen:64 dh_installwm:42
msgid "B<--priority=>I<n>"
msgstr ""

#. type: textblock
#: dh_installemacsen:66
msgid "Sets the priority number of a F<site-start.d> file. Default is 50."
msgstr ""

#. type: =item
#: dh_installemacsen:68
msgid "B<--flavor=>I<foo>"
msgstr ""

#. type: textblock
#: dh_installemacsen:70
msgid ""
"Sets the flavor a F<site-start.d> file will be installed in. Default is "
"B<emacs>, alternatives include B<xemacs> and B<emacs20>."
msgstr ""

#. type: textblock
#: dh_installemacsen:140
msgid "L<debhelper(7)> L</usr/share/doc/emacsen-common/debian-emacs-policy.gz>"
msgstr ""

#. type: textblock
#: dh_installexamples:7
msgid "dh_installexamples - install example files into package build directories"
msgstr ""

#. type: textblock
#: dh_installexamples:19
msgid ""
"B<dh_installexamples> [S<I<debhelper options>>] [B<-A>] [B<-X>I<item>] "
"[S<I<file> ...>]"
msgstr ""

#. type: textblock
#: dh_installexamples:23
msgid ""
"B<dh_installexamples> is a debhelper program that is responsible for "
"installing examples into F<usr/share/doc/package/examples> in package build "
"directories."
msgstr ""

#. type: =item
#: dh_installexamples:35
msgid "debian/I<package>.examples"
msgstr ""

#. type: textblock
#: dh_installexamples:37
msgid "Lists example files or directories to be installed."
msgstr ""

#. type: textblock
#: dh_installexamples:47
msgid ""
"Install any files specified by command line parameters in ALL packages acted "
"on."
msgstr ""

#. type: textblock
#: dh_installexamples:55
msgid ""
"Note that this is not the same as the B<--sourcedirectory> option used by "
"the B<dh_auto_>I<*> commands. You rarely need to use this option, since "
"B<dh_installexamples> automatically looks for files in F<debian/tmp> in "
"debhelper compatibility level 11 and above."
msgstr ""

#. type: textblock
#: dh_installexamples:72
msgid ""
"This option cannot be used when B<dh_installexamples> is instructed to act "
"on multiple packages.  If you need this option, you will generally need to "
"combine it with B<-p> to ensure exactly one package is acted on."
msgstr ""

#. type: textblock
#: dh_installexamples:79
msgid ""
"Exclude files that contain I<item> anywhere in their filename from being "
"installed."
msgstr ""

#. type: textblock
#: dh_installexamples:84
msgid ""
"Install these files (or directories) as examples into the first package "
"acted on. (Or into all packages if B<-A> is specified.)"
msgstr ""

#. type: textblock
#: dh_installexamples:91
msgid ""
"Note that B<dh_installexamples> will happily copy entire directory "
"hierarchies if you ask it to (similar to B<cp -a>). If it is asked to "
"install a directory, it will install the complete contents of the directory."
msgstr ""

#. type: textblock
#: dh_installifupdown:5
msgid "dh_installifupdown - install if-up and if-down hooks"
msgstr ""

#. type: textblock
#: dh_installifupdown:17
msgid "B<dh_installifupdown> [S<I<debhelper options>>] [B<--name=>I<name>]"
msgstr ""

#. type: textblock
#: dh_installifupdown:21
msgid ""
"B<dh_installifupdown> is a debhelper program that is responsible for "
"installing F<if-up>, F<if-down>, F<if-pre-up>, and F<if-post-down> hook "
"scripts into package build directories."
msgstr ""

#. type: =item
#: dh_installifupdown:29
msgid "debian/I<package>.if-up"
msgstr ""

#. type: =item
#: dh_installifupdown:31
msgid "debian/I<package>.if-down"
msgstr ""

#. type: =item
#: dh_installifupdown:33
msgid "debian/I<package>.if-pre-up"
msgstr ""

#. type: =item
#: dh_installifupdown:35
msgid "debian/I<package>.if-post-down"
msgstr ""

#. type: textblock
#: dh_installifupdown:37
msgid ""
"These files are installed into etc/network/if-*.d/I<package> in the package "
"build directory."
msgstr ""

#. type: textblock
#: dh_installifupdown:48
msgid ""
"Look for files named F<debian/package.name.if-*> and install them as "
"F<etc/network/if-*/name>, instead of using the usual files and installing "
"them as the package name."
msgstr ""

#. type: textblock
#: dh_installinfo:5
msgid "dh_installinfo - install info files"
msgstr ""

#. type: textblock
#: dh_installinfo:17
msgid "B<dh_installinfo> [S<I<debhelper options>>] [B<-A>] [S<I<file> ...>]"
msgstr ""

#. type: textblock
#: dh_installinfo:21
msgid ""
"B<dh_installinfo> is a debhelper program that is responsible for installing "
"info files into F<usr/share/info> in the package build directory."
msgstr ""

#. type: =item
#: dh_installinfo:32
msgid "debian/I<package>.info"
msgstr ""

#. type: textblock
#: dh_installinfo:34
msgid "List info files to be installed."
msgstr ""

#. type: textblock
#: dh_installinfo:52
msgid ""
"Note that this is not the same as the B<--sourcedirectory> option used by "
"the B<dh_auto_>I<*> commands. You rarely need to use this option, since "
"B<dh_installinfo> automatically looks for files in F<debian/tmp> in "
"debhelper compatibility level 11 and above."
msgstr ""

#. type: textblock
#: dh_installinfo:59
msgid ""
"Install these info files into the first package acted on. (Or in all "
"packages if B<-A> is specified)."
msgstr ""

#. type: textblock
#: dh_installinit:5
msgid "dh_installinit - install service init files into package build directories"
msgstr ""

#. type: textblock
#: dh_installinit:18
msgid ""
"B<dh_installinit> [S<I<debhelper options>>] [B<--name=>I<name>] [B<-n>] "
"[B<-R>] [B<-r>] [B<-d>] [S<B<--> I<params>>]"
msgstr ""

#. type: textblock
#: dh_installinit:22
msgid ""
"B<dh_installinit> is a debhelper program that is responsible for installing "
"init scripts with associated defaults files.  In compatibility levels up to "
"and including 10, B<dh_installinit> will also install some systemd related "
"files provided by the debian packaging (see the L</FILES> section below).  "
"In compatibility levels up to and including 11, B<dh_installinit> will also "
"handle upstart jobs provided in the debian packaging (see the L</FILES> for "
"more information on this as well)."
msgstr ""

#. type: textblock
#: dh_installinit:31
msgid ""
"It also automatically generates the F<postinst> and F<postrm> and F<prerm> "
"commands needed to set up the symlinks in F</etc/rc*.d/> to start and stop "
"the init scripts."
msgstr ""

#. type: textblock
#: dh_installinit:35
msgid ""
"In compat 10 or earlier: If a package only ships a systemd service file and "
"no sysvinit script is provided, you may want to exclude the call to "
"dh_installinit for that package (e.g. via B<-N>).  Otherwise, you may get "
"warnings from lintian about init.d scripts not being included in the "
"package."
msgstr ""

#. type: =item
#: dh_installinit:45
msgid "debian/I<package>.init"
msgstr ""

#. type: textblock
#: dh_installinit:47
msgid ""
"If this exists, it is installed into etc/init.d/I<package> in the package "
"build directory."
msgstr ""

#. type: =item
#: dh_installinit:50
msgid "debian/I<package>.default"
msgstr ""

#. type: textblock
#: dh_installinit:52
msgid ""
"If this exists, it is installed into etc/default/I<package> in the package "
"build directory."
msgstr ""

#. type: =item
#: dh_installinit:55
msgid "debian/I<package>.upstart"
msgstr ""

#. type: textblock
#: dh_installinit:57
msgid ""
"In compatibility level 11, this file will trigger an error with a reminder "
"about ensuring the proper removal of the upstart file in the previous "
"package version.  Please consider using the \"rm_conffile\" feature from "
"L<dh_installdeb(1)> to ensure the proper removal of previous upstart files."
msgstr ""

#. type: textblock
#: dh_installinit:62
msgid ""
"In compatibility level 10, if this file exists, it is installed into "
"etc/init/I<package>.conf in the package build directory."
msgstr ""

#. type: =item
#: dh_installinit:65
msgid "debian/I<package>.service"
msgstr ""

#. type: textblock
#: dh_installinit:67
msgid ""
"If this exists, it is installed into lib/systemd/system/I<package>.service "
"in the package build directory. Only used in compat levels 10 and below."
msgstr ""

#. type: =item
#: dh_installinit:70 dh_systemd_enable:50
msgid "debian/I<package>.tmpfile"
msgstr ""

#. type: textblock
#: dh_installinit:72
msgid ""
"If this exists, it is installed into usr/lib/tmpfiles.d/I<package>.conf in "
"the package build directory. (The tmpfiles.d mechanism is currently only "
"used by systemd.) Only used in compat levels 10 and below."
msgstr ""

#. type: textblock
#: dh_installinit:84
msgid "Do not modify F<postinst>/F<postrm>/F<prerm> scripts."
msgstr ""

#. type: =item
#: dh_installinit:86
msgid "B<-o>, B<--only-scripts>"
msgstr ""

#. type: textblock
#: dh_installinit:88
msgid ""
"Only modify F<postinst>/F<postrm>/F<prerm> scripts, do not actually install "
"any init script, default files, upstart job or systemd service file. May be "
"useful if the file is shipped and/or installed by upstream in a way that "
"doesn't make it easy to let B<dh_installinit> find it."
msgstr ""

#. type: textblock
#: dh_installinit:93
msgid ""
"B<Caveat>: This will bypass all the regular checks and I<unconditionally> "
"modify the scripts.  You will almost certainly want to use this with B<-p> "
"to limit, which packages are affected by the call.  Example:"
msgstr ""

#. type: verbatim
#: dh_installinit:98
#, no-wrap
msgid ""
" override_dh_installinit:\n"
"\tdh_installinit -pfoo --only-scripts\n"
"\tdh_installinit --remaining\n"
"\n"
msgstr ""

#. type: =item
#: dh_installinit:102
msgid "B<-R>, B<--restart-after-upgrade>"
msgstr ""

#. type: textblock
#: dh_installinit:104
msgid ""
"Do not stop the init script until after the package upgrade has been "
"completed.  This is the default behaviour in compat 10."
msgstr ""

#. type: textblock
#: dh_installinit:107
msgid ""
"In early compat levels, the default was to stop the script in the F<prerm>, "
"and starts it again in the F<postinst>."
msgstr ""

#. type: textblock
#: dh_installinit:110 dh_systemd_start:45
msgid ""
"This can be useful for daemons that should not have a possibly long downtime "
"during upgrade. But you should make sure that the daemon will not get "
"confused by the package being upgraded while it's running before using this "
"option."
msgstr ""

#. type: =item
#: dh_installinit:115 dh_systemd_start:50
msgid "B<--no-restart-after-upgrade>"
msgstr ""

#. type: textblock
#: dh_installinit:117 dh_systemd_start:52
msgid ""
"Undo a previous B<--restart-after-upgrade> (or the default of compat 10).  "
"If no other options are given, this will cause the service to be stopped in "
"the F<prerm> script and started again in the F<postinst> script."
msgstr ""

#. type: =item
#: dh_installinit:122 dh_systemd_start:57
msgid "B<-r>, B<--no-stop-on-upgrade>, B<--no-restart-on-upgrade>"
msgstr ""

#. type: textblock
#: dh_installinit:124
msgid ""
"Do not stop init script on upgrade.  This has the side-effect of not "
"restarting the service as a part of the upgrade."
msgstr ""

#. type: textblock
#: dh_installinit:127
msgid ""
"If you want to restart the service with minimal downtime, please use "
"B<--restart-after-upgrade> (default in compat 10 or later).  If you want the "
"service to be restarted but be stopped during the upgrade, then please use "
"B<--no-restart-after-upgrade> (note the \"after-upgrade\")."
msgstr ""

#. type: textblock
#: dh_installinit:132
msgid ""
"Note that the B<--no-restart-on-upgrade> alias is deprecated and will be "
"removed in compat 12.  This is to avoid confusion with the "
"B<--no-restart-after-upgrade> option.  The B<--no-stop-on-upgrade> variant "
"was introduced in debhelper 10.2 (included in Debian stretch)."
msgstr ""

#. type: =item
#: dh_installinit:137 dh_systemd_start:61
msgid "B<--no-start>"
msgstr ""

#. type: textblock
#: dh_installinit:139
msgid ""
"Do not start the init script on install or upgrade, or stop it on removal.  "
"Only call B<update-rc.d>. Useful for rcS scripts."
msgstr ""

#. type: =item
#: dh_installinit:142 dh_systemd_enable:87
msgid "B<--no-enable>"
msgstr ""

#. type: textblock
#: dh_installinit:144
msgid ""
"Disable the init script on purge, but do not enable them on install.  This "
"implies a versioned dependency on B<< init-system-helpers (E<gt>= 1.51) >> "
"as it is the first (functional) version that supports B<< update-rc.d "
"E<lt>scriptE<gt> defaults-disabled >>."
msgstr ""

#. type: textblock
#: dh_installinit:149
msgid ""
"B<Note> that this option does not affect whether the services are started.  "
"Please remember to also use B<--no-start> if the service should not be "
"started."
msgstr ""

#. type: textblock
#: dh_installinit:153
msgid ""
"Cannot be combined with B<-u>I<params>, B<--update-rcd-params=>I<params>, or "
"B<--> I<params>."
msgstr ""

#. type: =item
#: dh_installinit:156
msgid "B<-d>, B<--remove-d>"
msgstr ""

#. type: textblock
#: dh_installinit:158
msgid ""
"Remove trailing B<d> from the name of the package, and use the result for "
"the filename the upstart job file is installed as in F<etc/init/> , and for "
"the filename the init script is installed as in etc/init.d and the default "
"file is installed as in F<etc/default/>. This may be useful for daemons with "
"names ending in B<d>. (Note: this takes precedence over the B<--init-script> "
"parameter described below.)"
msgstr ""

#. type: =item
#: dh_installinit:165
msgid "B<-u>I<params> B<--update-rcd-params=>I<params>"
msgstr ""

#. type: textblock
#: dh_installinit:169
msgid ""
"Pass I<params> to L<update-rc.d(8)>. If not specified, B<defaults> (or "
"B<defaults-disabled> with B<--no-enable>) will be passed to "
"L<update-rc.d(8)>."
msgstr ""

#. type: textblock
#: dh_installinit:173
msgid "Cannot be combined with B<--no-enable>."
msgstr ""

#. type: textblock
#: dh_installinit:177
msgid ""
"Install the init script (and default file) as well as upstart job file using "
"the filename I<name> instead of the default filename, which is the package "
"name. When this parameter is used, B<dh_installinit> looks for and installs "
"files named F<debian/package.name.init>, F<debian/package.name.default> and "
"F<debian/package.name.upstart> instead of the usual F<debian/package.init>, "
"F<debian/package.default> and F<debian/package.upstart>."
msgstr ""

#. type: =item
#: dh_installinit:185
msgid "B<--init-script=>I<scriptname>"
msgstr ""

#. type: textblock
#: dh_installinit:187
msgid ""
"Use I<scriptname> as the filename the init script is installed as in "
"F<etc/init.d/> (and also use it as the filename for the defaults file, if it "
"is installed). If you use this parameter, B<dh_installinit> will look to see "
"if a file in the F<debian/> directory exists that looks like "
"F<package.scriptname> and if so will install it as the init script in "
"preference to the files it normally installs."
msgstr ""

#. type: textblock
#: dh_installinit:194
msgid ""
"This parameter is deprecated, use the B<--name> parameter instead. This "
"parameter is incompatible with the use of upstart jobs."
msgstr ""

#. type: =item
#: dh_installinit:197
msgid "B<--error-handler=>I<function>"
msgstr ""

#. type: textblock
#: dh_installinit:199
msgid ""
"Call the named shell I<function> if running the init script fails. The "
"function should be provided in the F<prerm> and F<postinst> scripts, before "
"the B<#DEBHELPER#> token."
msgstr ""

#. type: textblock
#: dh_installinit:427
msgid "L<debhelper(7)>, L<dh_installsystemd(1)>"
msgstr ""

#. type: textblock
#: dh_installinit:435
msgid "Steve Langasek <steve.langasek@canonical.com>"
msgstr ""

#. type: textblock
#: dh_installinit:437
msgid "Michael Stapelberg <stapelberg@debian.org>"
msgstr ""

#. type: textblock
#: dh_installinitramfs:5
msgid "dh_installinitramfs - install initramfs hooks and setup maintscripts"
msgstr ""

#. type: textblock
#: dh_installinitramfs:17
msgid "B<dh_installinitramfs> [S<B<debhelper options>>] [B<-n>]"
msgstr ""

#. type: textblock
#: dh_installinitramfs:21
msgid ""
"B<dh_installinitramfs> is a debhelper program that is responsible for "
"installing Debian package provided initramfs hooks."
msgstr ""

#. type: textblock
#: dh_installinitramfs:24
msgid ""
"If B<dh_installinitramfs> installs or (in compat 12 or later) detects one or "
"more initramfs hooks in the package, then it also automatically generates "
"the F<postinst> and F<postrm> commands needed to interface with the Debian "
"initramfs system.  These commands are inserted into the maintainer scripts "
"by L<dh_installdeb(1)>."
msgstr ""

#. type: =item
#: dh_installinitramfs:34
msgid "debian/I<package>.initramfs-hook"
msgstr ""

#. type: textblock
#: dh_installinitramfs:36
msgid ""
"Assumed to be an initramfs hook that will be installed into F<< "
"usr/share/initramfs-tools/hooks/I<package> >> in the package build "
"directory. See B<HOOK SCRIPTS> in L<initramfs-tools(8)> for more information "
"about initramfs hooks."
msgstr ""

#. type: textblock
#: dh_installinitramfs:49 dh_installmenu:50
msgid "Do not modify F<postinst>/F<postrm> scripts."
msgstr ""

#. type: textblock
#: dh_installinitramfs:87
msgid "L<debhelper(7)> L<update-initramfs(8)> L<initramfs-tools(8)>"
msgstr ""

#. type: textblock
#: dh_installlogcheck:5
msgid "dh_installlogcheck - install logcheck rulefiles into etc/logcheck/"
msgstr ""

#. type: textblock
#: dh_installlogcheck:17
msgid "B<dh_installlogcheck> [S<I<debhelper options>>]"
msgstr ""

#. type: textblock
#: dh_installlogcheck:21
msgid ""
"B<dh_installlogcheck> is a debhelper program that is responsible for "
"installing logcheck rule files."
msgstr ""

#. type: =item
#: dh_installlogcheck:28
msgid "debian/I<package>.logcheck.cracking"
msgstr ""

#. type: =item
#: dh_installlogcheck:30
msgid "debian/I<package>.logcheck.violations"
msgstr ""

#. type: =item
#: dh_installlogcheck:32
msgid "debian/I<package>.logcheck.violations.ignore"
msgstr ""

#. type: =item
#: dh_installlogcheck:34
msgid "debian/I<package>.logcheck.ignore.workstation"
msgstr ""

#. type: =item
#: dh_installlogcheck:36
msgid "debian/I<package>.logcheck.ignore.server"
msgstr ""

#. type: =item
#: dh_installlogcheck:38
msgid "debian/I<package>.logcheck.ignore.paranoid"
msgstr ""

#. type: textblock
#: dh_installlogcheck:40
msgid ""
"Each of these files, if present, are installed into corresponding "
"subdirectories of F<etc/logcheck/> in package build directories."
msgstr ""

#. type: textblock
#: dh_installlogcheck:51
msgid ""
"Look for files named F<debian/package.name.logcheck.*> and install them into "
"the corresponding subdirectories of F<etc/logcheck/>, but use the specified "
"name instead of that of the package."
msgstr ""

#. type: verbatim
#: dh_installlogcheck:85
#, no-wrap
msgid ""
"This program is a part of debhelper.\n"
"    \n"
msgstr ""

#. type: textblock
#: dh_installlogcheck:89
msgid "Jon Middleton <jjm@debian.org>"
msgstr ""

#. type: textblock
#: dh_installlogrotate:5
msgid "dh_installlogrotate - install logrotate config files"
msgstr ""

#. type: textblock
#: dh_installlogrotate:17
msgid "B<dh_installlogrotate> [S<I<debhelper options>>] [B<--name=>I<name>]"
msgstr ""

#. type: textblock
#: dh_installlogrotate:21
msgid ""
"B<dh_installlogrotate> is a debhelper program that is responsible for "
"installing logrotate config files into F<etc/logrotate.d> in package build "
"directories.  Files named F<debian/package.logrotate> are installed."
msgstr ""

#. type: textblock
#: dh_installlogrotate:31
msgid ""
"Look for files named F<debian/package.name.logrotate> and install them as "
"F<etc/logrotate.d/name>, instead of using the usual files and installing "
"them as the package name."
msgstr ""

#. type: textblock
#: dh_installman:5
msgid "dh_installman - install man pages into package build directories"
msgstr ""

#. type: textblock
#: dh_installman:18
msgid "B<dh_installman> [S<I<debhelper options>>] [S<I<manpage> ...>]"
msgstr ""

#. type: textblock
#: dh_installman:22
msgid ""
"B<dh_installman> is a debhelper program that handles installing man pages "
"into the correct locations in package build directories."
msgstr ""

#. type: textblock
#: dh_installman:25
msgid ""
"In compat 10 and earlier, this program was primarily for when upstream's "
"build system does not properly install them as a part of its install step "
"(or it does not have an install step).  In compat 11 and later, it supports "
"the same features of L<dh_install(1)> and has the advantage that it respects "
"the B<nodoc> build profile (unlike L<dh_install(1)>)."
msgstr ""

#. type: textblock
#: dh_installman:32
msgid ""
"Even if you prefer to use L<dh_install(1)> for installing the manpages, "
"B<dh_installman> can still be useful for converting the manpage encoding to "
"UTF-8 and for converting F<.so> links (as described below).  However, that "
"part happens automatically without any explicit configuration."
msgstr ""

#. type: textblock
#: dh_installman:38
msgid ""
"You tell B<dh_installman> what man pages go in your packages, and it figures "
"out where to install them based on the section field in their B<.TH> or "
"B<.Dt> line. If you have a properly formatted B<.TH> or B<.Dt> line, your "
"man page will be installed into the right directory, with the right name "
"(this includes proper handling of pages with a subsection, like B<3perl>, "
"which are placed in F<man3>, and given an extension of F<.3perl>). If your "
"B<.TH> or B<.Dt> line is incorrect or missing, the program may guess wrong "
"based on the file extension."
msgstr ""

#. type: textblock
#: dh_installman:47
msgid ""
"It also supports translated man pages, by looking for extensions like "
"F<.ll.8> and F<.ll_LL.8>, or by use of the B<--language> switch."
msgstr ""

#. type: textblock
#: dh_installman:50
msgid ""
"If B<dh_installman> seems to install a man page into the wrong section or "
"with the wrong extension, this is because the man page has the wrong section "
"listed in its B<.TH> or B<.Dt> line. Edit the man page and correct the "
"section, and B<dh_installman> will follow suit. See L<man(7)> for details "
"about the B<.TH> section, and L<mdoc(7)> for the B<.Dt> section. If "
"B<dh_installman> seems to install a man page into a directory like "
"F</usr/share/man/pl/man1/>, that is because your program has a name like "
"F<foo.pl>, and B<dh_installman> assumes that means it is translated into "
"Polish. Use B<--language=C> to avoid this."
msgstr ""

#. type: textblock
#: dh_installman:60
msgid ""
"After the man page installation step, B<dh_installman> will check to see if "
"any of the man pages in the temporary directories of any of the packages it "
"is acting on contain F<.so> links. If so, it changes them to symlinks."
msgstr ""

#. type: textblock
#: dh_installman:64
msgid ""
"Also, B<dh_installman> will use man to guess the character encoding of each "
"manual page and convert it to UTF-8. If the guesswork fails for some reason, "
"you can override it using an encoding declaration. See L<manconv(1)> for "
"details."
msgstr ""

#. type: =item
#: dh_installman:77
msgid "debian/I<package>.manpages"
msgstr ""

#. type: textblock
#: dh_installman:79
msgid "Lists man pages to be installed."
msgstr ""

#. type: =item
#: dh_installman:92
msgid "B<--language=>I<ll>"
msgstr ""

#. type: textblock
#: dh_installman:94
msgid ""
"Use this to specify that the man pages being acted on are written in the "
"specified language."
msgstr ""

#. type: =item
#: dh_installman:107
msgid "I<manpage> ..."
msgstr ""

#. type: textblock
#: dh_installman:109
msgid ""
"Install these man pages into the first package acted on. (Or in all packages "
"if B<-A> is specified)."
msgstr ""

#. type: textblock
#: dh_installman:116
msgid "An example F<debian/manpages> file could look like this:"
msgstr ""

#. type: verbatim
#: dh_installman:118
#, no-wrap
msgid ""
"  doc/man/foo.1\n"
"  # Translations\n"
"  doc/man/foo.da.1\n"
"  doc/man/foo.de.1\n"
"  doc/man/foo.fr.1\n"
"  # NB: The following line is considered a polish translation\n"
"  # of \"foo.1\" (and not a manpage written in perl called \"foo.pl\")\n"
"  doc/man/foo.pl.1\n"
"  # ...\n"
"\n"
msgstr ""

#. type: textblock
#: dh_installman:130
msgid ""
"An older version of this program, L<dh_installmanpages(1)>, is still used by "
"some packages, and so is still included in debhelper.  It is, however, "
"deprecated, due to its counterintuitive and inconsistent interface. Use this "
"program instead."
msgstr ""

#. type: textblock
#: dh_installmanpages:5
msgid "dh_installmanpages - old-style man page installer (deprecated)"
msgstr ""

#. type: textblock
#: dh_installmanpages:18
msgid "B<dh_installmanpages> [S<I<debhelper options>>] [S<I<file> ...>]"
msgstr ""

#. type: textblock
#: dh_installmanpages:22
msgid ""
"B<dh_installmanpages> is a debhelper program that is responsible for "
"automatically installing man pages into F<usr/share/man/> in package build "
"directories."
msgstr ""

#. type: textblock
#: dh_installmanpages:26
msgid ""
"This is a DWIM-style program, with an interface unlike the rest of "
"debhelper. It is deprecated, and you are encouraged to use "
"L<dh_installman(1)> instead."
msgstr ""

#. type: textblock
#: dh_installmanpages:30
msgid ""
"B<dh_installmanpages> scans the current directory and all subdirectories for "
"filenames that look like man pages. (Note that only real files are looked "
"at; symlinks are ignored.) It uses L<file(1)> to verify that the files are "
"in the correct format. Then, based on the files' extensions, it installs "
"them into the correct man directory."
msgstr ""

#. type: textblock
#: dh_installmanpages:36
msgid ""
"All filenames specified as parameters will be skipped by "
"B<dh_installmanpages>.  This is useful if by default it installs some man "
"pages that you do not want to be installed."
msgstr ""

#. type: textblock
#: dh_installmanpages:40
msgid ""
"After the man page installation step, B<dh_installmanpages> will check to "
"see if any of the man pages are F<.so> links. If so, it changes them to "
"symlinks."
msgstr ""

#. type: textblock
#: dh_installmanpages:49
msgid ""
"Do not install these files as man pages, even if they look like valid man "
"pages."
msgstr ""

#. type: =head1
#: dh_installmanpages:54
msgid "BUGS"
msgstr ""

#. type: textblock
#: dh_installmanpages:56
msgid ""
"B<dh_installmanpages> will install the man pages it finds into B<all> "
"packages you tell it to act on, since it can't tell what package the man "
"pages belong in. This is almost never what you really want (use B<-p> to "
"work around this, or use the much better L<dh_installman(1)> program "
"instead)."
msgstr ""

#. type: textblock
#: dh_installmanpages:61
msgid "Files ending in F<.man> will be ignored."
msgstr ""

#. type: textblock
#: dh_installmanpages:63
msgid ""
"Files specified as parameters that contain spaces in their filenames will "
"not be processed properly."
msgstr ""

#. type: textblock
#: dh_installmenu:5
msgid "dh_installmenu - install Debian menu files into package build directories"
msgstr ""

#. type: textblock
#: dh_installmenu:17
msgid "B<dh_installmenu> [S<B<debhelper options>>] [B<-n>]"
msgstr ""

#. type: textblock
#: dh_installmenu:21
msgid ""
"B<dh_installmenu> is a debhelper program that is responsible for installing "
"files used by the Debian B<menu> package into package build directories."
msgstr ""

#. type: textblock
#: dh_installmenu:24
msgid ""
"It also automatically generates the F<postinst> and F<postrm> commands "
"needed to interface with the Debian B<menu> package. These commands are "
"inserted into the maintainer scripts by L<dh_installdeb(1)>."
msgstr ""

#. type: =item
#: dh_installmenu:32
msgid "debian/I<package>.menu"
msgstr ""

#. type: textblock
#: dh_installmenu:34
msgid ""
"Debian menu files, installed into usr/share/menu/I<package> in the package "
"build directory. See L<menufile(5)> for its format."
msgstr ""

#. type: =item
#: dh_installmenu:37
msgid "debian/I<package>.menu-method"
msgstr ""

#. type: textblock
#: dh_installmenu:39
msgid ""
"Debian menu method files, installed into etc/menu-methods/I<package> in the "
"package build directory."
msgstr ""

#. type: textblock
#: dh_installmenu:90
msgid "L<debhelper(7)> L<update-menus(1)> L<menufile(5)>"
msgstr ""

#. type: textblock
#: dh_installmime:5
msgid "dh_installmime - install mime files into package build directories"
msgstr ""

#. type: textblock
#: dh_installmime:17
msgid "B<dh_installmime> [S<I<debhelper options>>]"
msgstr ""

#. type: textblock
#: dh_installmime:21
msgid ""
"B<dh_installmime> is a debhelper program that is responsible for installing "
"mime files into package build directories."
msgstr ""

#. type: =item
#: dh_installmime:28
msgid "debian/I<package>.mime"
msgstr ""

#. type: textblock
#: dh_installmime:30
msgid ""
"Installed into usr/lib/mime/packages/I<package> in the package build "
"directory."
msgstr ""

#. type: =item
#: dh_installmime:33
msgid "debian/I<package>.sharedmimeinfo"
msgstr ""

#. type: textblock
#: dh_installmime:35
msgid ""
"Installed into /usr/share/mime/packages/I<package>.xml in the package build "
"directory."
msgstr ""

#. type: textblock
#: dh_installmodules:5
msgid "dh_installmodules - register kernel modules"
msgstr ""

#. type: textblock
#: dh_installmodules:18
msgid "B<dh_installmodules> [S<I<debhelper options>>] [B<-n>] [B<--name=>I<name>]"
msgstr ""

#. type: textblock
#: dh_installmodules:22
msgid ""
"B<dh_installmodules> is a debhelper program that is responsible for "
"registering kernel modules."
msgstr ""

#. type: textblock
#: dh_installmodules:25
msgid ""
"Kernel modules are searched for in the package build directory and if found, "
"F<preinst>, F<postinst> and F<postrm> commands are automatically generated "
"to run B<depmod> and register the modules when the package is installed.  "
"These commands are inserted into the maintainer scripts by "
"L<dh_installdeb(1)>."
msgstr ""

#. type: =item
#: dh_installmodules:35
msgid "debian/I<package>.modprobe"
msgstr ""

#. type: textblock
#: dh_installmodules:37
msgid "Installed to etc/modprobe.d/I<package>.conf in the package build directory."
msgstr ""

#. type: textblock
#: dh_installmodules:47
msgid "Do not modify F<preinst>/F<postinst>/F<postrm> scripts."
msgstr ""

#. type: textblock
#: dh_installmodules:51
msgid ""
"When this parameter is used, B<dh_installmodules> looks for and installs "
"files named debian/I<package>.I<name>.modprobe instead of the usual "
"debian/I<package>.modprobe"
msgstr ""

#. type: textblock
#: dh_installpam:5
msgid "dh_installpam - install pam support files"
msgstr ""

#. type: textblock
#: dh_installpam:17
msgid "B<dh_installpam> [S<I<debhelper options>>] [B<--name=>I<name>]"
msgstr ""

#. type: textblock
#: dh_installpam:21
msgid ""
"B<dh_installpam> is a debhelper program that is responsible for installing "
"files used by PAM into package build directories."
msgstr ""

#. type: =item
#: dh_installpam:28
msgid "debian/I<package>.pam"
msgstr ""

#. type: textblock
#: dh_installpam:30
msgid "Installed into etc/pam.d/I<package> in the package build directory."
msgstr ""

#. type: textblock
#: dh_installpam:40
msgid ""
"Look for files named debian/I<package>.I<name>.pam and install them as "
"etc/pam.d/I<name>, instead of using the usual files and installing them "
"using the package name."
msgstr ""

#. type: textblock
#: dh_installppp:5
msgid "dh_installppp - install ppp ip-up and ip-down files"
msgstr ""

#. type: textblock
#: dh_installppp:17
msgid "B<dh_installppp> [S<I<debhelper options>>] [B<--name=>I<name>]"
msgstr ""

#. type: textblock
#: dh_installppp:21
msgid ""
"B<dh_installppp> is a debhelper program that is responsible for installing "
"ppp ip-up and ip-down scripts into package build directories."
msgstr ""

#. type: =item
#: dh_installppp:28
msgid "debian/I<package>.ppp.ip-up"
msgstr ""

#. type: textblock
#: dh_installppp:30
msgid "Installed into etc/ppp/ip-up.d/I<package> in the package build directory."
msgstr ""

#. type: =item
#: dh_installppp:32
msgid "debian/I<package>.ppp.ip-down"
msgstr ""

#. type: textblock
#: dh_installppp:34
msgid "Installed into etc/ppp/ip-down.d/I<package> in the package build directory."
msgstr ""

#. type: textblock
#: dh_installppp:44
msgid ""
"Look for files named F<debian/package.name.ppp.ip-*> and install them as "
"F<etc/ppp/ip-*/name>, instead of using the usual files and installing them "
"as the package name."
msgstr ""

#. type: textblock
#: dh_installudev:5
msgid "dh_installudev - install udev rules files"
msgstr ""

#. type: textblock
#: dh_installudev:17
msgid ""
"B<dh_installudev> [S<I<debhelper options>>] [B<-n>] [B<--name=>I<name>] "
"[B<--priority=>I<priority>]"
msgstr ""

#. type: textblock
#: dh_installudev:21
msgid ""
"B<dh_installudev> is a debhelper program that is responsible for installing "
"B<udev> rules files."
msgstr ""

#. type: =item
#: dh_installudev:28
msgid "debian/I<package>.udev"
msgstr ""

#. type: textblock
#: dh_installudev:30
msgid "Installed into F<lib/udev/rules.d/> in the package build directory."
msgstr ""

#. type: textblock
#: dh_installudev:40
msgid ""
"When this parameter is used, B<dh_installudev> looks for and installs files "
"named debian/I<package>.I<name>.udev instead of the usual "
"debian/I<package>.udev."
msgstr ""

#. type: =item
#: dh_installudev:44
msgid "B<--priority=>I<priority>"
msgstr ""

#. type: textblock
#: dh_installudev:46
msgid "Sets the priority the file. Default is 60."
msgstr ""

#. type: textblock
#: dh_installwm:5
msgid "dh_installwm - register a window manager"
msgstr ""

#. type: textblock
#: dh_installwm:17
msgid ""
"B<dh_installwm> [S<I<debhelper options>>] [B<-n>] [B<--priority=>I<n>] "
"[S<I<wm> ...>]"
msgstr ""

#. type: textblock
#: dh_installwm:21
msgid ""
"B<dh_installwm> is a debhelper program that is responsible for generating "
"the F<postinst> and F<prerm> commands that register a window manager with "
"L<update-alternatives(8)>. The window manager's man page is also registered "
"as a slave symlink (in v6 mode and up).  It must be installed in "
"F<usr/share/man/man1/> in the package build directory prior to calling "
"B<dh_installwm>.  In compat 9 and earlier, the manpage was optional."
msgstr ""

#. type: =item
#: dh_installwm:32
msgid "debian/I<package>.wm"
msgstr ""

#. type: textblock
#: dh_installwm:34
msgid "List window manager programs to register."
msgstr ""

#. type: textblock
#: dh_installwm:44
msgid ""
"Set the priority of the window manager. Default is 20, which is too low for "
"most window managers; see the Debian Policy document for instructions on "
"calculating the correct value."
msgstr ""

#. type: textblock
#: dh_installwm:50
msgid "Do not modify F<postinst>/F<prerm> scripts. Turns this command into a no-op."
msgstr ""

#. type: textblock
#: dh_installwm:54
msgid ""
"Modify scripts for window managers specified by command line parameters in "
"ALL packages acted on, not just the first."
msgstr ""

#. type: =item
#: dh_installwm:57
msgid "I<wm> ..."
msgstr ""

#. type: textblock
#: dh_installwm:59
msgid "Window manager programs to register."
msgstr ""

#. type: textblock
#: dh_installxfonts:5
msgid "dh_installxfonts - register X fonts"
msgstr ""

#. type: textblock
#: dh_installxfonts:17
msgid "B<dh_installxfonts> [S<I<debhelper options>>]"
msgstr ""

#. type: textblock
#: dh_installxfonts:21
msgid ""
"B<dh_installxfonts> is a debhelper program that is responsible for "
"registering X fonts, so their corresponding F<fonts.dir>, F<fonts.alias>, "
"and F<fonts.scale> be rebuilt properly at install time."
msgstr ""

#. type: textblock
#: dh_installxfonts:25
msgid ""
"Before calling this program, you should have installed any X fonts provided "
"by your package into the appropriate location in the package build "
"directory, and if you have F<fonts.alias> or F<fonts.scale> files, you "
"should install them into the correct location under F<etc/X11/fonts> in your "
"package build directory."
msgstr ""

#. type: textblock
#: dh_installxfonts:31
msgid ""
"Your package should depend on B<xfonts-utils> so that the "
"B<update-fonts->I<*> commands are available. (This program adds that "
"dependency to B<${misc:Depends}>.)"
msgstr ""

#. type: textblock
#: dh_installxfonts:35
msgid ""
"This program automatically generates the F<postinst> and F<postrm> commands "
"needed to register X fonts. These commands are inserted into the maintainer "
"scripts by B<dh_installdeb>. See L<dh_installdeb(1)> for an explanation of "
"how this works."
msgstr ""

#. type: textblock
#: dh_installxfonts:42
msgid ""
"See L<update-fonts-alias(8)>, L<update-fonts-scale(8)>, and "
"L<update-fonts-dir(8)> for more information about X font installation."
msgstr ""

#. type: textblock
#: dh_installxfonts:45
msgid ""
"See Debian policy, section 11.8.5. for details about doing fonts the Debian "
"way."
msgstr ""

#. type: textblock
#: dh_link:5
msgid "dh_link - create symlinks in package build directories"
msgstr ""

#. type: textblock
#: dh_link:18
msgid ""
"B<dh_link> [S<I<debhelper options>>] [B<-A>] [B<-X>I<item>] [S<I<source "
"destination> ...>]"
msgstr ""

#. type: textblock
#: dh_link:22
msgid ""
"B<dh_link> is a debhelper program that creates symlinks in package build "
"directories."
msgstr ""

#. type: textblock
#: dh_link:25
msgid ""
"B<dh_link> accepts a list of pairs of source and destination files. The "
"source files are the already existing files that will be symlinked from "
"(called B<target> by L<ln(1)>). The destination files are the symlinks that "
"will be created (called B<link name> by L<ln(1)>). There B<must> be an equal "
"number of source and destination files specified."
msgstr ""

#. type: textblock
#: dh_link:32
msgid ""
"Be sure you B<do> specify the absolute path to both the source and "
"destination files (unlike you would do if you were using something like "
"L<ln(1)>).  Please note that the leading slash is optional."
msgstr ""

#. type: textblock
#: dh_link:36
msgid ""
"B<dh_link> will generate symlinks that comply with Debian policy - absolute "
"when policy says they should be absolute, and relative links with as short a "
"path as possible. It will also create any subdirectories it needs to put the "
"symlinks in."
msgstr ""

#. type: textblock
#: dh_link:41
msgid "Any pre-existing destination files will be replaced with symlinks."
msgstr ""

#. type: textblock
#: dh_link:43
msgid ""
"B<dh_link> also scans the package build tree for existing symlinks which do "
"not conform to Debian policy, and corrects them (v4 or later)."
msgstr ""

#. type: =item
#: dh_link:50
msgid "debian/I<package>.links"
msgstr ""

#. type: textblock
#: dh_link:52
msgid ""
"Lists pairs of source and destination files to be symlinked. Each pair "
"should be put on its own line, with the source and destination separated by "
"whitespace."
msgstr ""

#. type: textblock
#: dh_link:56
msgid ""
"In each pair the source file (called B<target> by L<ln(1)>) comes first and "
"is followed by the destination file (called B<link name> by L<ln(1)>). Thus "
"the pairs of source and destination files in each line are given in the same "
"order as they would be given to L<ln(1)>."
msgstr ""

#. type: textblock
#: dh_link:61
msgid ""
"In contrast to L<ln(1)>, source and destination paths must be absolute (the "
"leading slash is optional)."
msgstr ""

#. type: textblock
#: dh_link:72
msgid ""
"Create any links specified by command line parameters in ALL packages acted "
"on, not just the first."
msgstr ""

#. type: textblock
#: dh_link:77
msgid ""
"Exclude symlinks that contain I<item> anywhere in their filename from being "
"corrected to comply with Debian policy."
msgstr ""

#. type: =item
#: dh_link:80
msgid "I<source destination> ..."
msgstr ""

#. type: textblock
#: dh_link:82
msgid ""
"Create a file named I<destination> as a link to a file named I<source>. Do "
"this in the package build directory of the first package acted on.  (Or in "
"all packages if B<-A> is specified.)"
msgstr ""

#. type: verbatim
#: dh_link:90
#, no-wrap
msgid ""
" dh_link usr/share/man/man1/foo.1 usr/share/man/man1/bar.1\n"
"\n"
msgstr ""

#. type: textblock
#: dh_link:92
msgid "Make F<bar.1> be a symlink to F<foo.1>"
msgstr ""

#. type: verbatim
#: dh_link:94
#, no-wrap
msgid ""
" dh_link var/lib/foo usr/lib/foo \\\n"
"   usr/share/man/man1/foo.1 usr/share/man/man1/bar.1\n"
"\n"
msgstr ""

#. type: textblock
#: dh_link:97
msgid ""
"Make F</usr/lib/foo/> be a link to F</var/lib/foo/>, and F<bar.1> be a "
"symlink to the F<foo.1>"
msgstr ""

#. type: verbatim
#: dh_link:100
#, no-wrap
msgid ""
" var/lib/foo usr/lib/foo\n"
" usr/share/man/man1/foo.1 usr/share/man/man1/bar.1\n"
"\n"
msgstr ""

#. type: textblock
#: dh_link:103
msgid "Same as above but as content for a debian/I<package>.links file."
msgstr ""

#. type: textblock
#: dh_lintian:5
msgid "dh_lintian - install lintian override files into package build directories"
msgstr ""

#. type: textblock
#: dh_lintian:17
msgid "B<dh_lintian> [S<I<debhelper options>>]"
msgstr ""

#. type: textblock
#: dh_lintian:21
msgid ""
"B<dh_lintian> is a debhelper program that is responsible for installing "
"override files used by lintian into package build directories."
msgstr ""

#. type: =item
#: dh_lintian:28
msgid "debian/I<package>.lintian-overrides"
msgstr ""

#. type: textblock
#: dh_lintian:30
msgid ""
"Installed into usr/share/lintian/overrides/I<package> in the package build "
"directory. This file is used to suppress erroneous lintian diagnostics."
msgstr ""

#. type: =item
#: dh_lintian:34
msgid "F<debian/source/lintian-overrides>"
msgstr ""

#. type: textblock
#: dh_lintian:36
msgid ""
"These files are not installed, but will be scanned by lintian to provide "
"overrides for the source package."
msgstr ""

#. type: textblock
#: dh_lintian:66
msgid "L<lintian(1)>"
msgstr ""

#. type: textblock
#: dh_lintian:70
msgid "Steve Robbins <smr@debian.org>"
msgstr ""

#. type: textblock
#: dh_listpackages:5
msgid "dh_listpackages - list binary packages debhelper will act on"
msgstr ""

#. type: textblock
#: dh_listpackages:17
msgid "B<dh_listpackages> [S<I<debhelper options>>]"
msgstr ""

#. type: textblock
#: dh_listpackages:21
msgid ""
"B<dh_listpackages> is a debhelper program that outputs a list of all binary "
"packages debhelper commands will act on. If you pass it some options, it "
"will change the list to match the packages other debhelper commands would "
"act on if passed the same options."
msgstr ""

#. type: textblock
#: dh_listpackages:26
msgid "Packages are listed in the order they appear in F<debian/control>."
msgstr ""

#. type: textblock
#: dh_makeshlibs:5
msgid "dh_makeshlibs - automatically create shlibs file and call dpkg-gensymbols"
msgstr ""

#. type: textblock
#: dh_makeshlibs:17
msgid ""
"B<dh_makeshlibs> [S<I<debhelper options>>] [B<-m>I<major>] "
"[B<-V>I<[dependencies]>] [B<-n>] [B<-X>I<item>] [S<B<--> I<params>>]"
msgstr ""

#. type: textblock
#: dh_makeshlibs:21
msgid ""
"B<dh_makeshlibs> is a debhelper program that automatically scans for shared "
"libraries, and generates a shlibs file for the libraries it finds."
msgstr ""

#. type: textblock
#: dh_makeshlibs:24
msgid ""
"It will also ensure that ldconfig is invoked during install and removal when "
"it finds shared libraries.  Since debhelper 9.20151004, this is done via a "
"dpkg trigger.  In older versions of debhelper, B<dh_makeshlibs> would "
"generate a maintainer script for this purpose."
msgstr ""

#. type: =item
#: dh_makeshlibs:33
msgid "debian/I<package>.shlibs"
msgstr ""

#. type: textblock
#: dh_makeshlibs:35
msgid ""
"Installs this file, if present, into the package as DEBIAN/shlibs.  If "
"omitted, debhelper will generate a shlibs file automatically if it detects "
"any libraries."
msgstr ""

#. type: textblock
#: dh_makeshlibs:39
msgid ""
"Note in compat levels 9 and earlier, this file was installed by "
"L<dh_installdeb(1)> rather than B<dh_makeshlibs>."
msgstr ""

#. type: =item
#: dh_makeshlibs:42
msgid "debian/I<package>.symbols"
msgstr ""

#. type: =item
#: dh_makeshlibs:44
msgid "debian/I<package>.symbols.I<arch>"
msgstr ""

#. type: textblock
#: dh_makeshlibs:46
msgid ""
"These symbols files, if present, are passed to L<dpkg-gensymbols(1)> to be "
"processed and installed. Use the I<arch> specific names if you need to "
"provide different symbols files for different architectures."
msgstr ""

#. type: =item
#: dh_makeshlibs:56
msgid "B<-m>I<major>, B<--major=>I<major>"
msgstr ""

#. type: textblock
#: dh_makeshlibs:58
msgid ""
"Instead of trying to guess the major number of the library with objdump, use "
"the major number specified after the -m parameter. This is much less useful "
"than it used to be, back in the bad old days when this program looked at "
"library filenames rather than using objdump."
msgstr ""

#. type: =item
#: dh_makeshlibs:63
msgid "B<-V>, B<-V>I<dependencies>"
msgstr ""

#. type: =item
#: dh_makeshlibs:65
msgid "B<--version-info>, B<--version-info=>I<dependencies>"
msgstr ""

#. type: textblock
#: dh_makeshlibs:67
msgid ""
"If a shlibs file is generated by this program, this option controls what "
"version will be used in the dependency relation."
msgstr ""

#. type: textblock
#: dh_makeshlibs:70
msgid ""
"In compat 12 and later, B<dh_makeshlibs> defaults to B<-VUpstream-Version>.  "
"In compat 11 and earlier the default behaved like B<-VNone>.."
msgstr ""

#. type: textblock
#: dh_makeshlibs:73
msgid "The B<dh_makeshlibs> tool can generate dependencies in three variants:"
msgstr ""

#. type: =item
#: dh_makeshlibs:77
msgid "B<-VUpstream-Version>"
msgstr ""

#. type: textblock
#: dh_makeshlibs:79
msgid ""
"The dependency will be \"I<packagename> B<(E<gt>>= I<packageversion>B<)>\".  "
"Note that I<Upstream-Version> is case-sensitive and must be written exactly "
"as shown here."
msgstr ""

#. type: textblock
#: dh_makeshlibs:83
msgid ""
"This is a conservative setting that always ensures that other packages' "
"shared library dependencies are at least as tight as they need to be (unless "
"the library is prone to changing ABI without updating the upstream version "
"number)."
msgstr ""

#. type: textblock
#: dh_makeshlibs:88
msgid ""
"The flip side is that packages might end up with dependencies that are too "
"tight in some cases (note a symbols file can mitigate this issue).  This is "
"often of minor temporary inconvenience and usually a lot better than the "
"fall out caused by forgetting to bump the dependency information."
msgstr ""

#. type: textblock
#: dh_makeshlibs:94
msgid ""
"This explicit form was added in debhelper/11.3.  In previous versions, a "
"B<-V> without any dependency information was used instead (and that form "
"still works)"
msgstr ""

#. type: =item
#: dh_makeshlibs:98
msgid "B<-VNone>"
msgstr ""

#. type: textblock
#: dh_makeshlibs:100
msgid ""
"The dependency will be \"I<packagename>\".  Note that I<None> is "
"case-sensitive and must be written exactly as shown here."
msgstr ""

#. type: textblock
#: dh_makeshlibs:103
msgid ""
"This form is generally unsafe with the only exception being if upstream does "
"not extend the ABI in any way.  However, most upstreams improve their "
"interfaces over time and packagers are recommended to use "
"B<-VUpstream-Version> (or one of the other forms of B<-V>I<dependencies>)."
msgstr ""

#. type: textblock
#: dh_makeshlibs:108
msgid ""
"Alternatively, this may be sufficient if (and only if) the package uses "
"symbol versioning (see L<dpkg-gensymbols(1)>) and does I<not> build any udeb "
"packages.  Note that symbols are not supported for udeb packages, which "
"solely relies on shlibs for dependency handling."
msgstr ""

#. type: =item
#: dh_makeshlibs:113
msgid "B<-V>I<package-relation>"
msgstr ""

#. type: textblock
#: dh_makeshlibs:115
msgid ""
"In this case, the value passed to B<-V> will be used as a dependency "
"relation.  The I<package-relation> should generally be of the form "
"\"I<some-package-name> B<(E<gt>>= I<some-package-version>B<)>\".  Remember "
"to include the package name."
msgstr ""

#. type: textblock
#: dh_makeshlibs:120
msgid ""
"Note that debhelper will use the value I<as it is> with no sanity checking "
"or modification.  In I<rare special> cases, this is needed to generate a "
"dependency on a different package than the one containing the library."
msgstr ""

#. type: textblock
#: dh_makeshlibs:127
msgid ""
"When choosing a value for this option, please keep mind that if the package "
"provides a symbols file, then that it generally preferred over the shlibs "
"file for regular .deb packages.  See L<dpkg-shlibdeps(1)> for more "
"information on this topic."
msgstr ""

#. type: textblock
#: dh_makeshlibs:134
msgid ""
"Do not add the \"ldconfig\" trigger even if it seems like the package might "
"need it.  The option is called B<--no-scripts> for historical reasons as "
"B<dh_makeshlibs> would previously generate maintainer scripts that called "
"B<ldconfig>."
msgstr ""

#. type: textblock
#: dh_makeshlibs:141
msgid ""
"Exclude files that contain I<item> anywhere in their filename or directory "
"from being treated as shared libraries."
msgstr ""

#. type: =item
#: dh_makeshlibs:144
msgid "B<--add-udeb=>I<udeb>"
msgstr ""

#. type: textblock
#: dh_makeshlibs:146
msgid ""
"Create an additional line for udebs in the shlibs file and use I<udeb> as "
"the package name for udebs to depend on instead of the regular library "
"package."
msgstr ""

#. type: textblock
#: dh_makeshlibs:151
msgid "Pass I<params> to L<dpkg-gensymbols(1)>."
msgstr ""

#. type: =item
#: dh_makeshlibs:159
msgid "B<dh_makeshlibs -VNone>"
msgstr ""

#. type: verbatim
#: dh_makeshlibs:161
#, no-wrap
msgid ""
"Assuming this is a package named F<libfoobar1>, generates a shlibs file "
"that\n"
"looks something like:\n"
" libfoobar 1 libfoobar1\n"
"\n"
msgstr ""

#. type: =item
#: dh_makeshlibs:165
msgid "B<dh_makeshlibs -VUpstream-Version>"
msgstr ""

#. type: verbatim
#: dh_makeshlibs:167
#, no-wrap
msgid ""
"Assuming the current version of the package is 1.1-3, generates a shlibs\n"
"file that looks something like:\n"
" libfoobar 1 libfoobar1 (>= 1.1)\n"
"\n"
msgstr ""

#. type: =item
#: dh_makeshlibs:171
msgid "B<dh_makeshlibs -V 'libfoobar1 (E<gt>= 1.0)'>"
msgstr ""

#. type: verbatim
#: dh_makeshlibs:173
#, no-wrap
msgid ""
"Generates a shlibs file that looks something like:\n"
"  libfoobar 1 libfoobar1 (>= 1.0)\n"
"\n"
msgstr ""

#. type: textblock
#: dh_md5sums:5
msgid "dh_md5sums - generate DEBIAN/md5sums file"
msgstr ""

#. type: textblock
#: dh_md5sums:18
msgid ""
"B<dh_md5sums> [S<I<debhelper options>>] [B<-x>] [B<-X>I<item>] "
"[B<--include-conffiles>]"
msgstr ""

#. type: textblock
#: dh_md5sums:22
msgid ""
"B<dh_md5sums> is a debhelper program that is responsible for generating a "
"F<DEBIAN/md5sums> file, which lists the md5sums of each file in the "
"package.  These files are used by B<dpkg --verify> or the L<debsums(1)> "
"program."
msgstr ""

#. type: textblock
#: dh_md5sums:26
msgid ""
"All files in F<DEBIAN/> are omitted from the F<md5sums> file, as are all "
"conffiles (unless you use the B<--include-conffiles> switch)."
msgstr ""

#. type: textblock
#: dh_md5sums:29
msgid "The md5sums file is installed with proper permissions and ownerships."
msgstr ""

#. type: =item
#: dh_md5sums:35
msgid "B<-x>, B<--include-conffiles>"
msgstr ""

#. type: textblock
#: dh_md5sums:37
msgid ""
"Include conffiles in the md5sums list. Note that this information is "
"redundant since it is included elsewhere in Debian packages."
msgstr ""

#. type: textblock
#: dh_md5sums:42
msgid ""
"Exclude files that contain I<item> anywhere in their filename from being "
"listed in the md5sums file."
msgstr ""

#. type: textblock
#: dh_movefiles:5
msgid "dh_movefiles - move files out of debian/tmp into subpackages"
msgstr ""

#. type: textblock
#: dh_movefiles:17
msgid ""
"B<dh_movefiles> [S<I<debhelper options>>] [B<--sourcedir=>I<dir>] "
"[B<-X>I<item>] [S<I<file> ...>]"
msgstr ""

#. type: textblock
#: dh_movefiles:21
msgid ""
"B<dh_movefiles> is a debhelper program that is responsible for moving files "
"out of F<debian/tmp> or some other directory and into other package build "
"directories. This may be useful if your package has a F<Makefile> that "
"installs everything into F<debian/tmp>, and you need to break that up into "
"subpackages."
msgstr ""

#. type: textblock
#: dh_movefiles:26
msgid ""
"Note: B<dh_install> is a much better program, and you are recommended to use "
"it instead of B<dh_movefiles>."
msgstr ""

#. type: =item
#: dh_movefiles:33
msgid "debian/I<package>.files"
msgstr ""

#. type: textblock
#: dh_movefiles:35
msgid ""
"Lists the files to be moved into a package, separated by whitespace. The "
"filenames listed should be relative to F<debian/tmp/>. You can also list "
"directory names, and the whole directory will be moved."
msgstr ""

#. type: textblock
#: dh_movefiles:47
msgid ""
"Instead of moving files out of F<debian/tmp> (the default), this option "
"makes it move files out of some other directory. Since the entire contents "
"of the sourcedir is moved, specifying something like B<--sourcedir=/> is "
"very unsafe, so to prevent mistakes, the sourcedir must be a relative "
"filename; it cannot begin with a `B</>'."
msgstr ""

#. type: =item
#: dh_movefiles:53
msgid "B<-Xitem>, B<--exclude=item>"
msgstr ""

#. type: textblock
#: dh_movefiles:55
msgid ""
"Exclude files that contain B<item> anywhere in their filename from being "
"installed."
msgstr ""

#. type: textblock
#: dh_movefiles:60
msgid ""
"Lists files to move. The filenames listed should be relative to "
"F<debian/tmp/>. You can also list directory names, and the whole directory "
"will be moved. It is an error to list files here unless you use B<-p>, "
"B<-i>, or B<-a> to tell B<dh_movefiles> which subpackage to put them in."
msgstr ""

#. type: textblock
#: dh_movefiles:69
msgid ""
"Note that files are always moved out of F<debian/tmp> by default (even if "
"you have instructed debhelper to use a compatibility level higher than one, "
"which does not otherwise use debian/tmp for anything at all). The idea "
"behind this is that the package that is being built can be told to install "
"into F<debian/tmp>, and then files can be moved by B<dh_movefiles> from that "
"directory. Any files or directories that remain are ignored, and get deleted "
"by B<dh_clean> later."
msgstr ""

#. type: textblock
#: dh_perl:5
msgid "dh_perl - calculates Perl dependencies and cleans up after MakeMaker"
msgstr ""

#. type: textblock
#: dh_perl:19
msgid "B<dh_perl> [S<I<debhelper options>>] [B<-d>] [S<I<library dirs> ...>]"
msgstr ""

#. type: textblock
#: dh_perl:23
msgid ""
"B<dh_perl> is a debhelper program that is responsible for generating the "
"B<${perl:Depends}> substitutions and adding them to substvars files."
msgstr ""

#. type: textblock
#: dh_perl:26
msgid ""
"The program will look at Perl scripts and modules in your package, and will "
"use this information to generate a dependency on B<perl> or B<perlapi>. The "
"dependency will be substituted into your package's F<control> file wherever "
"you place the token B<${perl:Depends}>."
msgstr ""

#. type: textblock
#: dh_perl:31
msgid ""
"B<dh_perl> also cleans up empty directories that MakeMaker can generate when "
"installing Perl modules."
msgstr ""

#. type: =item
#: dh_perl:38
msgid "B<-d>"
msgstr ""

#. type: textblock
#: dh_perl:40
msgid ""
"In some specific cases you may want to depend on B<perl-base> rather than "
"the full B<perl> package. If so, you can pass the -d option to make "
"B<dh_perl> generate a dependency on the correct base package. This is only "
"necessary for some packages that are included in the base system."
msgstr ""

#. type: textblock
#: dh_perl:45
msgid ""
"Note that this flag may cause no dependency on B<perl-base> to be generated "
"at all. B<perl-base> is Essential, so its dependency can be left out, unless "
"a versioned dependency is needed."
msgstr ""

#. type: =item
#: dh_perl:49
msgid "B<-V>"
msgstr ""

#. type: textblock
#: dh_perl:51
msgid ""
"By default, scripts and architecture independent modules don't depend on any "
"specific version of B<perl>. The B<-V> option causes the current version of "
"the B<perl> (or B<perl-base> with B<-d>) package to be specified."
msgstr ""

#. type: =item
#: dh_perl:55
msgid "I<library dirs>"
msgstr ""

#. type: textblock
#: dh_perl:57
msgid ""
"If your package installs Perl modules in non-standard directories, you can "
"make B<dh_perl> check those directories by passing their names on the "
"command line. It will only check the F<vendorlib> and F<vendorarch> "
"directories by default."
msgstr ""

#. type: textblock
#: dh_perl:66
msgid "Debian policy, version 3.8.3"
msgstr ""

#. type: textblock
#: dh_perl:68
msgid "Perl policy, version 1.20"
msgstr ""

#. type: textblock
#: dh_perl:167
msgid "Brendan O'Dea <bod@debian.org>"
msgstr ""

#. type: textblock
#: dh_prep:5
msgid "dh_prep - perform cleanups in preparation for building a binary package"
msgstr ""

#. type: textblock
#: dh_prep:17
msgid "B<dh_prep> [S<I<debhelper options>>] [B<-X>I<item>]"
msgstr ""

#. type: textblock
#: dh_prep:21
msgid ""
"B<dh_prep> is a debhelper program that performs some file cleanups in "
"preparation for building a binary package. (This is what B<dh_clean -k> used "
"to do.) It removes the package build directories, F<debian/tmp>, and some "
"temp files that are generated when building a binary package."
msgstr ""

#. type: textblock
#: dh_prep:26
msgid ""
"It is typically run at the top of the B<binary-arch> and B<binary-indep> "
"targets, or at the top of a target such as install that they depend on."
msgstr ""

#. type: textblock
#: dh_prep:35
msgid ""
"Exclude files that contain F<item> anywhere in their filename from being "
"deleted, even if they would normally be deleted. You may use this option "
"multiple times to build up a list of things to exclude."
msgstr ""

#. type: textblock
#: dh_shlibdeps:5
msgid "dh_shlibdeps - calculate shared library dependencies"
msgstr ""

#. type: textblock
#: dh_shlibdeps:19
msgid ""
"B<dh_shlibdeps> [S<I<debhelper options>>] [B<-L>I<package>] "
"[B<-l>I<directory>] [B<-X>I<item>] [S<B<--> I<params>>]"
msgstr ""

#. type: textblock
#: dh_shlibdeps:23
msgid ""
"B<dh_shlibdeps> is a debhelper program that is responsible for calculating "
"shared library dependencies for packages."
msgstr ""

#. type: textblock
#: dh_shlibdeps:26
msgid ""
"This program is merely a wrapper around L<dpkg-shlibdeps(1)> that calls it "
"once for each package listed in the F<control> file, passing it a list of "
"ELF executables and shared libraries it has found."
msgstr ""

#. type: textblock
#: dh_shlibdeps:36
msgid ""
"Exclude files that contain F<item> anywhere in their filename from being "
"passed to B<dpkg-shlibdeps>. This will make their dependencies be ignored.  "
"This may be useful in some situations, but use it with caution. This option "
"may be used more than once to exclude more than one thing."
msgstr ""

#. type: textblock
#: dh_shlibdeps:43
msgid "Pass I<params> to L<dpkg-shlibdeps(1)>."
msgstr ""

#. type: =item
#: dh_shlibdeps:45
msgid "B<-u>I<params>, B<--dpkg-shlibdeps-params=>I<params>"
msgstr ""

#. type: textblock
#: dh_shlibdeps:47
msgid ""
"This is another way to pass I<params> to L<dpkg-shlibdeps(1)>.  It is "
"deprecated; use B<--> instead."
msgstr ""

#. type: =item
#: dh_shlibdeps:50
msgid "B<-l>I<directory>[B<:>I<directory> ...]"
msgstr ""

#. type: textblock
#: dh_shlibdeps:52
msgid ""
"With recent versions of B<dpkg-shlibdeps>, this option is generally not "
"needed."
msgstr ""

#. type: textblock
#: dh_shlibdeps:55
msgid ""
"It tells B<dpkg-shlibdeps> (via its B<-l> parameter), to look for private "
"package libraries in the specified directory (or directories -- separate "
"with colons). With recent versions of B<dpkg-shlibdeps>, this is mostly only "
"useful for packages that build multiple flavors of the same library, or "
"other situations where the library is installed into a directory not on the "
"regular library search path."
msgstr ""

#. type: =item
#: dh_shlibdeps:63
msgid "B<-L>I<package>, B<--libpackage=>I<package>"
msgstr ""

#. type: textblock
#: dh_shlibdeps:65
msgid ""
"With recent versions of B<dpkg-shlibdeps>, this option is generally not "
"needed, unless your package builds multiple flavors of the same library or "
"is relying on F<debian/shlibs.local> for an internal library."
msgstr ""

#. type: textblock
#: dh_shlibdeps:69
msgid ""
"It tells B<dpkg-shlibdeps> (via its B<-S> parameter) to look first in the "
"package build directory for the specified package, when searching for "
"libraries, symbol files, and shlibs files."
msgstr ""

#. type: textblock
#: dh_shlibdeps:73
msgid "If needed, this can be passed multiple times with different package names."
msgstr ""

#. type: textblock
#: dh_shlibdeps:80
msgid ""
"Suppose that your source package produces libfoo1, libfoo-dev, and "
"libfoo-bin binary packages. libfoo-bin links against libfoo1, and should "
"depend on it. In your rules file, first run B<dh_makeshlibs>, then "
"B<dh_shlibdeps>:"
msgstr ""

#. type: verbatim
#: dh_shlibdeps:84
#, no-wrap
msgid ""
"\tdh_makeshlibs\n"
"\tdh_shlibdeps\n"
"\n"
msgstr ""

#. type: textblock
#: dh_shlibdeps:87
msgid ""
"This will have the effect of generating automatically a shlibs file for "
"libfoo1, and using that file and the libfoo1 library in the "
"F<debian/libfoo1/usr/lib> directory to calculate shared library dependency "
"information."
msgstr ""

#. type: textblock
#: dh_shlibdeps:92
msgid ""
"If a libbar1 package is also produced, that is an alternate build of libfoo, "
"and is installed into F</usr/lib/bar/>, you can make libfoo-bin depend on "
"libbar1 as follows:"
msgstr ""

#. type: verbatim
#: dh_shlibdeps:96
#, no-wrap
msgid ""
"\tdh_shlibdeps -Llibbar1 -l/usr/lib/bar\n"
"\t\n"
msgstr ""

#. type: textblock
#: dh_shlibdeps:201
msgid "L<debhelper(7)>, L<dpkg-shlibdeps(1)>"
msgstr ""

#. type: textblock
#: dh_strip:5
msgid "dh_strip - strip executables, shared libraries, and some static libraries"
msgstr ""

#. type: textblock
#: dh_strip:18
msgid ""
"B<dh_strip> [S<I<debhelper options>>] [B<-X>I<item>] "
"[B<--dbg-package=>I<package>] [B<--keep-debug>]"
msgstr ""

#. type: textblock
#: dh_strip:22
msgid ""
"B<dh_strip> is a debhelper program that is responsible for stripping "
"executables, shared libraries, and static libraries that are not used for "
"debugging."
msgstr ""

#. type: textblock
#: dh_strip:26
msgid ""
"This program examines your package build directories and works out what to "
"strip on its own. It uses L<file(1)> and file permissions and filenames to "
"figure out what files are shared libraries (F<*.so>), executable binaries, "
"and static (F<lib*.a>) and debugging libraries (F<lib*_g.a>, F<debug/*.so>), "
"and strips each as much as is possible. (Which is not at all for debugging "
"libraries.) In general it seems to make very good guesses, and will do the "
"right thing in almost all cases."
msgstr ""

#. type: textblock
#: dh_strip:34
msgid ""
"Since it is very hard to automatically guess if a file is a module, and hard "
"to determine how to strip a module, B<dh_strip> does not currently deal with "
"stripping binary modules such as F<.o> files."
msgstr ""

#. type: =item
#: dh_strip:48
msgid "B<--dbg-package=>I<package>"
msgstr ""

#. type: textblock
#: dh_strip:50 dh_strip:70
msgid ""
"B<This option is a now special purpose option that you normally do not "
"need>.  In most cases, there should be little reason to use this option for "
"new source packages as debhelper automatically generates debug packages "
"(\"dbgsym packages\").  B<If you have a manual --dbg-package> that you want "
"to replace with an automatically generated debug symbol package, please see "
"the B<--dbgsym-migration> option."
msgstr ""

#. type: textblock
#: dh_strip:58
msgid ""
"Causes B<dh_strip> to save debug symbols stripped from the packages it acts "
"on as independent files in the package build directory of the specified "
"debugging package."
msgstr ""

#. type: textblock
#: dh_strip:62
msgid ""
"For example, if your packages are libfoo and foo and you want to include a "
"I<foo-dbg> package with debugging symbols, use B<dh_strip "
"--dbg-package=>I<foo-dbg>."
msgstr ""

#. type: textblock
#: dh_strip:65
msgid ""
"This option implies B<--no-automatic-dbgsym> and I<cannot> be used with "
"B<--automatic-dbgsym> or B<--dbgsym-migration>."
msgstr ""

#. type: =item
#: dh_strip:68
msgid "B<-k>, B<--keep-debug>"
msgstr ""

#. type: textblock
#: dh_strip:78
msgid ""
"Debug symbols will be retained, but split into an independent file in "
"F<usr/lib/debug/> in the package build directory. B<--dbg-package> is easier "
"to use than this option, but this option is more flexible."
msgstr ""

#. type: textblock
#: dh_strip:82
msgid ""
"This option implies B<--no-automatic-dbgsym> and I<cannot> be used with "
"B<--automatic-dbgsym>."
msgstr ""

#. type: =item
#: dh_strip:85
msgid "B<--dbgsym-migration=>I<package-relation>"
msgstr ""

#. type: textblock
#: dh_strip:87
msgid ""
"This option is used to migrate from a manual \"-dbg\" package (created with "
"B<--dbg-package>) to an automatic generated debug symbol package. This "
"option should describe a valid B<Replaces>- and B<Breaks>-relation, which "
"will be added to the debug symbol package to avoid file conflicts with the "
"(now obsolete) -dbg package."
msgstr ""

#. type: textblock
#: dh_strip:93
msgid ""
"This option implies B<--automatic-dbgsym> and I<cannot> be used with "
"B<--keep-debug>, B<--dbg-package> or B<--no-automatic-dbgsym>."
msgstr ""

#. type: textblock
#: dh_strip:96
msgid "Examples:"
msgstr ""

#. type: verbatim
#: dh_strip:98
#, no-wrap
msgid ""
"  dh_strip --dbgsym-migration='libfoo-dbg (<< 2.1-3~)'\n"
"\n"
msgstr ""

#. type: verbatim
#: dh_strip:100
#, no-wrap
msgid ""
"  dh_strip --dbgsym-migration='libfoo-tools-dbg (<< 2.1-3~), libfoo2-dbg (<< "
"2.1-3~)'\n"
"\n"
msgstr ""

#. type: =item
#: dh_strip:102
msgid "B<--automatic-dbgsym>, B<--no-automatic-dbgsym>"
msgstr ""

#. type: textblock
#: dh_strip:104
msgid ""
"Control whether B<dh_strip> should be creating debug symbol packages when "
"possible."
msgstr ""

#. type: textblock
#: dh_strip:107
msgid "The default is to create debug symbol packages."
msgstr ""

#. type: =item
#: dh_strip:109
msgid "B<--ddebs>, B<--no-ddebs>"
msgstr ""

#. type: textblock
#: dh_strip:111
msgid "Historical name for B<--automatic-dbgsym> and B<--no-automatic-dbgsym>."
msgstr ""

#. type: =item
#: dh_strip:113
msgid "B<--ddeb-migration=>I<package-relation>"
msgstr ""

#. type: textblock
#: dh_strip:115
msgid "Historical name for B<--dbgsym-migration>."
msgstr ""

#. type: textblock
#: dh_strip:121
msgid ""
"If the B<DEB_BUILD_OPTIONS> environment variable contains B<nostrip>, "
"nothing will be stripped, in accordance with Debian policy (section 10.1 "
"\"Binaries\").  This will also inhibit the automatic creation of debug "
"symbol packages."
msgstr ""

#. type: textblock
#: dh_strip:126
msgid ""
"The automatic creation of debug symbol packages can also be prevented by "
"adding B<noautodbgsym> to the B<DEB_BUILD_OPTIONS> environment variable.  "
"However, B<dh_strip> will still add debuglinks to ELF binaries when this "
"flag is set.  This is to ensure that the regular deb package will be "
"identical with and without this flag (assuming it is otherwise "
"\"bit-for-bit\" reproducible)."
msgstr ""

#. type: textblock
#: dh_strip:135
msgid "Debian policy, version 3.0.1"
msgstr ""

#. type: textblock
#: dh_testdir:5
msgid "dh_testdir - test directory before building Debian package"
msgstr ""

#. type: textblock
#: dh_testdir:17
msgid "B<dh_testdir> [S<I<debhelper options>>] [S<I<file> ...>]"
msgstr ""

#. type: textblock
#: dh_testdir:21
msgid ""
"B<dh_testdir> tries to make sure that you are in the correct directory when "
"building a Debian package. It makes sure that the file F<debian/control> "
"exists, as well as any other files you specify. If not, it exits with an "
"error."
msgstr ""

#. type: textblock
#: dh_testdir:32
msgid "Test for the existence of these files too."
msgstr ""

#. type: textblock
#: dh_testroot:7
msgid ""
"dh_testroot - ensure that a package is built with necessary level of root "
"permissions"
msgstr ""

#. type: textblock
#: dh_testroot:11
msgid "B<dh_testroot> [S<I<debhelper options>>]"
msgstr ""

#. type: textblock
#: dh_testroot:15
msgid ""
"B<dh_testroot> is used to determine if the target is being run with "
"sufficient access to (fake)root."
msgstr ""

#. type: textblock
#: dh_testroot:18
msgid ""
"The definition of sufficient access depends on whether the builder (the tool "
"invoking the F<debian/rules> target) supports the I<Rules-Requires-Root> "
"(R³) field.  If the builder supports R³, then it will set the environment "
"variable I<DEB_RULES_REQUIRES_ROOT> and B<dh_testroot> will validate that "
"the builder followed the minimum requirements for the given value of "
"I<DEB_RULES_REQUIRES_ROOT>."
msgstr ""

#. type: textblock
#: dh_testroot:25
msgid ""
"If the builder does not support I<Rules-Requires-Root>, then it will not set "
"the I<DEB_RULES_REQUIRES_ROOT> environment variable.  This will in turn make "
"B<dh_testroot> (and the rest of debhelper) fall back to assuming that "
"(fake)root is implied."
msgstr ""

#. type: textblock
#: dh_testroot:30
msgid ""
"The following is a summary of how B<dh_testroot> behaves based on the "
"I<DEB_RULES_REQUIRES_ROOT> environment variable (leading and trailing "
"whitespace in the variable is ignored)."
msgstr ""

#. type: textblock
#: dh_testroot:38
msgid ""
"If unset, or set to C<binary-targets>, then B<dh_testroot> asserts that it "
"is run as root or under L<fakeroot(1)>."
msgstr ""

#. type: textblock
#: dh_testroot:43
msgid ""
"If set to C<no>, then B<dh_testroot> returns successfully (without "
"performing any additional checks)."
msgstr ""

#. type: textblock
#: dh_testroot:48
msgid ""
"If set to any other value than the above, then B<dh_testroot> asserts that "
"it is either run as root (or under L<fakeroot(1)>) or the builder has "
"provided the B<DEB_GAIN_ROOT_CMD> environment variable (e.g. via "
"dpkg-buildpackage -r)."
msgstr ""

#. type: textblock
#: dh_testroot:55
msgid ""
"Please note that B<dh_testroot> does I<not> read the I<Rules-Requires-Root> "
"field.  Which implies that B<dh_testroot> may produce incorrect result if "
"the builder lies in I<DEB_RULES_REQUIRES_ROOT>.  On the flip side, it also "
"enables things like testing for what will happen when "
"I<DEB_RULES_REQUIRES_ROOT> is set to a given value."
msgstr ""

#. type: textblock
#: dh_usrlocal:7
msgid "dh_usrlocal - migrate usr/local directories to maintainer scripts"
msgstr ""

#. type: textblock
#: dh_usrlocal:21
msgid "B<dh_usrlocal> [S<I<debhelper options>>] [B<-n>]"
msgstr ""

#. type: textblock
#: dh_usrlocal:25
msgid ""
"B<dh_usrlocal> is a debhelper program that can be used for building packages "
"that will provide a subdirectory in F</usr/local> when installed."
msgstr ""

#. type: textblock
#: dh_usrlocal:28
msgid ""
"It finds subdirectories of F<usr/local> in the package build directory, and "
"removes them, replacing them with maintainer script snippets (unless B<-n> "
"is used) to create the directories at install time, and remove them when the "
"package is removed, in a manner compliant with Debian policy. These snippets "
"are inserted into the maintainer scripts by B<dh_installdeb>. See "
"L<dh_installdeb(1)> for an explanation of debhelper maintainer script "
"snippets."
msgstr ""

#. type: textblock
#: dh_usrlocal:36
msgid ""
"When the I<DEB_RULES_REQUIRES_ROOT> environment variable is not "
"(effectively)  I<binary-targets>, the directories in F</usr/local> will be "
"handled as if they were owned by root:root (see below)."
msgstr ""

#. type: textblock
#: dh_usrlocal:40
msgid ""
"When the I<DEB_RULES_REQUIRES_ROOT> environment variable has an effective "
"value of I<binary-targets>, the owners, groups and permissions will be "
"preserved with the sole exception where the directory is owned by root:root."
msgstr ""

#. type: textblock
#: dh_usrlocal:44
msgid ""
"If a directory is owned by root:root, then ownership will be determined at "
"install time.  The ownership and permission bits will either be root:root "
"mode 0755 or root:staff mode 02775.  The actual choice depends on whether "
"the system has F</etc/staff-group-for-usr-local> (as documented in the "
"Debian Policy Manual §9.1.2 since version 4.1.4)"
msgstr ""

#. type: textblock
#: dh_usrlocal:68
msgid "Debian policy, version 2.2"
msgstr ""

#. type: textblock
#: dh_usrlocal:144
msgid "Andrew Stribblehill <ads@debian.org>"
msgstr ""

#. type: textblock
#: dh_systemd_enable:5
msgid "dh_systemd_enable - enable/disable systemd unit files"
msgstr ""

#. type: textblock
#: dh_systemd_enable:18
msgid ""
"B<dh_systemd_enable> [S<I<debhelper options>>] [B<--no-enable>] "
"[B<--name=>I<name>] [S<I<unit file> ...>]"
msgstr ""

#. type: textblock
#: dh_systemd_enable:22
msgid ""
"B<dh_systemd_enable> is a debhelper program that is responsible for enabling "
"and disabling systemd unit files."
msgstr ""

#. type: textblock
#: dh_systemd_enable:25
msgid ""
"In the simple case, it finds all unit files installed by a package (e.g.  "
"bacula-fd.service) and enables them. It is not necessary that the machine "
"actually runs systemd during package installation time, enabling happens on "
"all machines in order to be able to switch from sysvinit to systemd and "
"back."
msgstr ""

#. type: textblock
#: dh_systemd_enable:30
msgid ""
"In the complex case, you can call B<dh_systemd_enable> and "
"B<dh_systemd_start> manually (by overwriting the debian/rules targets) and "
"specify flags per unit file. An example is colord, which ships "
"colord.service, a dbus-activated service without an [Install] section. This "
"service file cannot be enabled or disabled (a state called \"static\" by "
"systemd) because it has no [Install] section. Therefore, running "
"dh_systemd_enable does not make sense."
msgstr ""

#. type: textblock
#: dh_systemd_enable:37
msgid ""
"For only generating blocks for specific service files, you need to pass them "
"as arguments, e.g. B<dh_systemd_enable quota.service> and "
"B<dh_systemd_enable --name=quotarpc quotarpc.service>."
msgstr ""

#. type: =item
#: dh_systemd_enable:45
msgid "debian/I<package>.service, debian/I<package>@.service"
msgstr ""

#. type: textblock
#: dh_systemd_enable:47
msgid ""
"If this exists, it is installed into lib/systemd/system/I<package>.service "
"(or lib/systemd/system/I<package>@.service) in the package build directory."
msgstr ""

#. type: textblock
#: dh_systemd_enable:52
msgid ""
"If this exists, it is installed into usr/lib/tmpfiles.d/I<package>.conf in "
"the package build directory. (The tmpfiles.d mechanism is currently only "
"used by systemd.)"
msgstr ""

#. type: =item
#: dh_systemd_enable:56
msgid "debian/I<package>.target, debian/I<package>@.target"
msgstr ""

#. type: textblock
#: dh_systemd_enable:58
msgid ""
"If this exists, it is installed into lib/systemd/system/I<package>.target "
"(or lib/systemd/system/I<package>@.target) in the package build directory."
msgstr ""

#. type: =item
#: dh_systemd_enable:61
msgid "debian/I<package>.socket, debian/I<package>@.socket"
msgstr ""

#. type: textblock
#: dh_systemd_enable:63
msgid ""
"If this exists, it is installed into lib/systemd/system/I<package>.socket "
"(or lib/systemd/system/I<package>@.socket) in the package build directory."
msgstr ""

#. type: =item
#: dh_systemd_enable:66
msgid "debian/I<package>.mount"
msgstr ""

#. type: textblock
#: dh_systemd_enable:68
msgid ""
"If this exists, it is installed into lib/systemd/system/I<package>.mount in "
"the package build directory."
msgstr ""

#. type: =item
#: dh_systemd_enable:71
msgid "debian/I<package>.path, debian/I<package>@.path"
msgstr ""

#. type: textblock
#: dh_systemd_enable:73
msgid ""
"If this exists, it is installed into lib/systemd/system/I<package>.path (or "
"lib/systemd/system/I<package>@.path) in the package build directory."
msgstr ""

#. type: =item
#: dh_systemd_enable:76
msgid "debian/I<package>.timer, debian/I<package>@.timer"
msgstr ""

#. type: textblock
#: dh_systemd_enable:78
msgid ""
"If this exists, it is installed into lib/systemd/system/I<package>.timer (or "
"lib/systemd/system/I<package>@.timer) in the package build directory."
msgstr ""

#. type: textblock
#: dh_systemd_enable:89
msgid "Disable the service(s) on purge, but do not enable them on install."
msgstr ""

#. type: textblock
#: dh_systemd_enable:91
msgid ""
"B<Note> that this option does not affect whether the services are started.  "
"That is controlled by L<dh_systemd_start(1)> (using e.g. its B<--no-start> "
"option)."
msgstr ""

#. type: textblock
#: dh_systemd_enable:97
msgid ""
"Install the service file as I<name.service> instead of the default filename, "
"which is the I<package.service>. When this parameter is used, "
"B<dh_systemd_enable> looks for and installs files named "
"F<debian/package.name.service> instead of the usual "
"F<debian/package.service>."
msgstr ""

#. type: textblock
#: dh_systemd_enable:106 dh_systemd_start:70
msgid ""
"Note that this command is not idempotent. L<dh_prep(1)> should be called "
"between invocations of this command (with the same arguments). Otherwise, it "
"may cause multiple instances of the same text to be added to maintainer "
"scripts."
msgstr ""

#. type: textblock
#: dh_systemd_enable:111
msgid ""
"Note that B<dh_systemd_enable> should be run before B<dh_installinit>.  The "
"default sequence in B<dh> does the right thing, this note is only relevant "
"when you are calling B<dh_systemd_enable> manually."
msgstr ""

#. type: textblock
#: dh_systemd_enable:283
msgid "L<dh_systemd_start(1)>, L<debhelper(7)>"
msgstr ""

#. type: textblock
#: dh_systemd_enable:287 dh_systemd_start:286
msgid "pkg-systemd-maintainers@lists.alioth.debian.org"
msgstr ""

#. type: textblock
#: dh_systemd_start:5
msgid "dh_systemd_start - start/stop/restart systemd unit files"
msgstr ""

#. type: textblock
#: dh_systemd_start:19
msgid ""
"B<dh_systemd_start> [S<I<debhelper options>>] [B<--restart-after-upgrade>] "
"[B<--no-stop-on-upgrade>] [S<I<unit file> ...>]"
msgstr ""

#. type: textblock
#: dh_systemd_start:23
msgid ""
"B<dh_systemd_start> is a debhelper program that is responsible for "
"starting/stopping or restarting systemd unit files in case no corresponding "
"sysv init script is available."
msgstr ""

#. type: textblock
#: dh_systemd_start:27
msgid ""
"As with B<dh_installinit>, the unit file is stopped before upgrades and "
"started afterwards (unless B<--restart-after-upgrade> is specified, in which "
"case it will only be restarted after the upgrade).  This logic is not used "
"when there is a corresponding SysV init script because invoke-rc.d performs "
"the stop/start/restart in that case."
msgstr ""

#. type: =item
#: dh_systemd_start:37
msgid "B<--restart-after-upgrade>"
msgstr ""

#. type: textblock
#: dh_systemd_start:39
msgid ""
"Do not stop the unit file until after the package upgrade has been "
"completed.  This is the default behaviour in compat 10."
msgstr ""

#. type: textblock
#: dh_systemd_start:42
msgid ""
"In earlier compat levels the default was to stop the unit file in the "
"F<prerm>, and start it again in the F<postinst>."
msgstr ""

#. type: textblock
#: dh_systemd_start:59
msgid "Do not stop service on upgrade."
msgstr ""

#. type: textblock
#: dh_systemd_start:63
msgid ""
"Do not start the unit file after upgrades and after initial installation "
"(the latter is only relevant for services without a corresponding init "
"script)."
msgstr ""

#. type: textblock
#: dh_systemd_start:75
msgid ""
"Note that B<dh_systemd_start> should be run after B<dh_installinit> so that "
"it can detect corresponding SysV init scripts. The default sequence in B<dh> "
"does the right thing, this note is only relevant when you are calling "
"B<dh_systemd_start> manually."
msgstr ""

#. type: textblock
#: strings-kept-translations.pod:7
msgid "This compatibility level is open for beta testing; changes may occur."
msgstr ""
