#!/usr/bin/perl -w

=head1 NAME

dh_gconf - generate GConf schema registration scripts

=cut

use strict;
use Debian::Debhelper::Dh_Lib;

=head1 SYNOPSIS

B<dh_gconf> [S<I<debhelper options>>] [B<--priority=<number>>]

=head1 DESCRIPTION

dh_gconf is a debhelper program that is responsible for registering
GConf schemas.

It automatically generates the postinst and prerm fragments needed
to register and unregister the schemas in usr/share/gconf/schemas, using
gconf-schemas.

An appropriate dependency on gconf2 will be generated in ${misc:Depends}.

=head1 FILES

=over 4

=item debian/I<package>.gconf-defaults

Installed into usr/share/gconf/defaults/10_package in the package build
directory, with "I<package>" replaced by the package name. Some postinst
and postrm fragments will be generated to run update-gconf-defaults.

=item debian/I<package>.gconf-mandatory

Installed into usr/share/gconf/mandatory/10_package in the package build
directory, with "I<package>" replaced by the package name, and similar
postinst and postrm fragments will be generated.

=back

=head1 OPTIONS

=over 4

=item B<--priority> I<priority>

Use I<priority> (which should be a 2-digit number) as the defaults
priority instead of 10. Higher values than ten can be used by 
derived distributions (20), CDD distributions (50), or site-specific
packages (90).

=back

=cut

init();

my $priority=10;
if (defined $dh{PRIORITY}) {
	$priority=$dh{PRIORITY};
}

foreach my $package (@{$dh{DOPACKAGES}}) {
	my $tmp=tmpdir($package);
	
	my $gconf_dep = 0;
	my $mandatory = pkgfile($package, "gconf-mandatory");
	if ($mandatory ne '') {
		doit("mkdir","-p","$tmp/usr/share/gconf/mandatory");
		doit("install","-p","-m644",$mandatory,"$tmp/usr/share/gconf/mandatory/${priority}_$package");
		autoscript($package,"postinst","postinst-gconf-defaults","s%#OPT#%--mandatory%");
		addsubstvar($package, "misc:Depends", "gconf2 (>= 2.24.0-5)");
		$gconf_dep = 1;
	}
	my $defaults = pkgfile($package,"gconf-defaults");
	if ($defaults ne '') {
		doit("mkdir","-p","$tmp/usr/share/gconf/defaults");
		doit("install","-p","-m644",$defaults,"$tmp/usr/share/gconf/defaults/${priority}_$package");
		autoscript($package,"postinst","postinst-gconf-defaults","s%#OPT#%%");
		autoscript($package,"postrm","postrm-gconf-defaults","s%#OPT#%%");
		addsubstvar($package, "misc:Depends", "gconf2 (>= 2.12.1-1)") unless $gconf_dep;
		$gconf_dep = 1;
	}

	my $old_schemas_dir = "$tmp/etc/gconf/schemas";
	my $new_schemas_dir = "$tmp/usr/share/gconf/schemas";

	# Migrate schemas from /etc/gconf/schemas to /usr/share/gconf/schemas
	if (-d $old_schemas_dir) {
		doit("mkdir -p $new_schemas_dir") unless -d $new_schemas_dir;
		doit("mv $old_schemas_dir/*.schemas $new_schemas_dir/");
		doit("rmdir -p --ignore-fail-on-non-empty $old_schemas_dir");
	}

	if (-d "$new_schemas_dir") {
		# Get a list of the schemas
		my $schemas = `find $new_schemas_dir -type f -name \\*.schemas -printf '%P '`;
		if ($schemas ne '') {
			autoscript($package,"postinst","postinst-gconf","s%#SCHEMAS#%$schemas%");
			autoscript($package,"prerm","prerm-gconf","s%#SCHEMAS#%$schemas%");
			addsubstvar($package, "misc:Depends", "gconf2 (>= 2.10.1-2)") unless $gconf_dep;
		}
	}
}

=head1 SEE ALSO

L<debhelper(7)>

This program is a part of debhelper.

=head1 AUTHOR

Ross Burton <ross@burtonini.com>
Josselin Mouette <joss@debian.org>

=cut
