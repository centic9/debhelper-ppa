#!/usr/bin/perl -w

=head1 NAME

dh_installchangelogs - install changelogs into package build directories

=cut

use strict;
use Debian::Debhelper::Dh_Lib;

=head1 SYNOPSIS

B<dh_installchangelogs> [S<I<debhelper options>>] [B<-k>] [B<-X>I<item>] [I<upstream>]

=head1 DESCRIPTION

dh_installchangelogs is a debhelper program that is responsible for
installing changelogs into package build directories.

An upstream changelog file may be specified as an option. If none is
specified, a few common filenames are tried. (In compatibility level 7 and
above.)

If there is an upstream changelog file, it will be be installed as
usr/share/doc/package/changelog in the package build directory. If the
changelog is a html file (determined by file extension), it will be
installed as usr/share/doc/package/changelog.html instead, and will be
converted to plain text with html2text to generate
usr/share/doc/package/changelog.

=head1 FILES

=over 4

=item debian/changelog

=item debian/NEWS

=item debian/I<package>.changelog

=item debian/I<package>.NEWS

Automatically installed into usr/share/doc/I<package>/
in the package build directory.

Use the package specific name if I<package> needs a different
NEWS or changelog file.

The changelog file is installed with a name of changelog
for native packages, and changelog.Debian for non-native packages.
The NEWS file is always installed with a name of NEWS.Debian.

=back

=head1 OPTIONS

=over 4

=item B<-k>, B<--keep>

Keep the original name of the upstream changelog. This will be accomplished
by installing the upstream changelog as "changelog", and making a symlink from
that to the original name of the changelog file. This can be useful if the
upstream changelog has an unusual name, or if other documentation in the
package refers to the changelog file.

=item B<-Xitem>, B<--exclude=item>

Exclude upstream changelog files that contain "item" anywhere in their
filename from being installed.

=item I<upstream>

Install this file as the upstream changelog.

=back

=cut

init();

my $upstream=shift;
my $changelog_name="changelog.Debian";
if (! defined $upstream) {
	if (! isnative($dh{MAINPACKAGE}) && !compat(6)) {
		my @files=sort glob("*");
		foreach my $name (qw{changelog changes changelog.txt changes.txt}) {
			my @matches=grep {
				lc $_ eq $name && -s $_ && ! excludefile($_)
			} @files;
			if (@matches) {
				$upstream=shift @matches;
				last;
			}
		}
	}
	if (isnative($dh{MAINPACKAGE})) {
		$changelog_name='changelog';
	}
}
my $news_name="NEWS.Debian";

foreach my $package (@{$dh{DOPACKAGES}}) {
	next if is_udeb($package);
	
	my $tmp=tmpdir($package);
	my $changelog=pkgfile($package,"changelog");
	my $news=pkgfile($package,"NEWS");

	if (!$changelog) {
		$changelog="debian/changelog";
	}
	if (!$news) {
		$news="debian/NEWS";
	}

	if (! -e $changelog) {
		error("could not find changelog $changelog");
	}

	# If it is a symlink to a documentation directory from the same
	# source package, then don't do anything. Think multi-binary
	# packages that depend on each other and want to link doc dirs.
	if (-l "$tmp/usr/share/doc/$package") {
		my $linkval=readlink("$tmp/usr/share/doc/$package");
		my %allpackages=map { $_ => 1 } getpackages();
		if ($allpackages{basename($linkval)}) {
			next;
		}
		# Even if the target doesn't seem to be a doc dir from the
		# same source package, don't do anything if it's a dangling
		# symlink.
		next unless -d "$tmp/usr/share/doc/$package";
	}

	if (! -d "$tmp/usr/share/doc/$package") {
		doit("install","-d","$tmp/usr/share/doc/$package");
	}
	doit("install","-o",0,"-g",0,"-p","-m644",$changelog,
		"$tmp/usr/share/doc/$package/$changelog_name");
	if (-e $news) {
		doit("install","-o",0,"-g",0,"-p","-m644",$news,
			"$tmp/usr/share/doc/$package/$news_name");
	}

	if (defined $upstream) {
		my $link_to;
		if ($upstream=~m/\.html?$/i) {
			# HTML changelog
			doit("install","-o",0,"-g",0,"-p","-m644",
				$upstream,"$tmp/usr/share/doc/$package/changelog.html");
			doit("html2text","-nobs","-o","$tmp/usr/share/doc/$package/changelog",$upstream);
			$link_to='changelog.html';
		}
		else {
			doit("install","-o",0,"-g",0,"-p","-m644",
				$upstream,"$tmp/usr/share/doc/$package/changelog");
			$link_to='changelog';
		}
		if ($dh{K_FLAG}) {
			# Install symlink to original name of the upstream changelog file.
			# Use basename in case original file was in a subdirectory or something.
			doit("ln","-sf",$link_to,"$tmp/usr/share/doc/$package/".basename($upstream));
		}
	}
}

=head1 SEE ALSO

L<debhelper(7)>

This program is a part of debhelper.

=head1 AUTHOR

Joey Hess <joeyh@debian.org>

=cut
